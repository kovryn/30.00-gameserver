#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SunRoseFlyingRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SunRoseFlyingRuntime_structs.hpp"


namespace SDK::Params
{

// Function SunRoseFlyingRuntime.AFortGameplayCueNotifyLoop_SunroseFlying.SetFlappingParameters
// 0x0040 (0x0040 - 0x0000)
struct AFortGameplayCueNotifyLoop_SunroseFlying_SetFlappingParameters final
{
public:
	class UFXSystemComponent*                     FlyingTrailFX;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	const class AFortPlayerPawn*                  PlayerPawn;                                        // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlappingAlpha;                                     // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RollCombined;                                      // 0x0024(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RollingAlpha;                                      // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchAlpha;                                        // 0x002C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBoosting;                                       // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAscending;                                      // 0x0031(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowWingFlap;                                    // 0x0032(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSkimming;                                       // 0x0033(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Speed;                                             // 0x0034(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDiving;                                         // 0x0038(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentHeight;                                     // 0x003C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortGameplayCueNotifyLoop_WingsSkimming.ShowWingFX
// 0x0070 (0x0070 - 0x0000)
struct FortGameplayCueNotifyLoop_WingsSkimming_ShowWingFX final
{
public:
	struct FVector                                SkimLocationLeft;                                  // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SkimNormalLeft;                                    // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkimDistanceLeft;                                  // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SkimLocationRight;                                 // 0x0038(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SkimNormalRight;                                   // 0x0050(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkimDistanceRight;                                 // 0x0068(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortCameraModifier_SunroseWingsFlying.UseNativeCalculation
// 0x0001 (0x0001 - 0x0000)
struct FortCameraModifier_SunroseWingsFlying_UseNativeCalculation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.BlueprintUpdateForMovement
// 0x0070 (0x0070 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_BlueprintUpdateForMovement final
{
public:
	class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InVelocity;                                        // 0x0010(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InAcceleration;                                    // 0x0028(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutNewVelocity;                                    // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutNewAcceleration;                                // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.HandleFlyingStatusActivationFailed
// 0x0008 (0x0008 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_HandleFlyingStatusActivationFailed final
{
public:
	EWingedFlyingStatus                           FailedStatus;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FailureTag;                                        // 0x0004(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.HandleFlyingStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_HandleFlyingStatusChanged final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWingedFlyingStatus                           NewStatus;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           FailureTag;                                        // 0x000C(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.CanContinueFlyingStatus
// 0x0018 (0x0018 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_CanContinueFlyingStatus final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWingedFlyingStatus                           StatusToContinue;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedDuration;                                   // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutCanContinue;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           OutFailureTag;                                     // 0x0014(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.CanEndFlyingStatus
// 0x0018 (0x0018 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_CanEndFlyingStatus final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWingedFlyingStatus                           StatusToEnd;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedDuration;                                   // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.CanStartFlyingStatus
// 0x0010 (0x0010 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_CanStartFlyingStatus final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWingedFlyingStatus                           StatusToStart;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutCanStart;                                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           OutFailureTag;                                     // 0x000C(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortMovementMode_ExtLogicFlyingWinged.IsClientReplaying
// 0x0001 (0x0001 - 0x0000)
struct FortMovementMode_ExtLogicFlyingWinged_IsClientReplaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.HandleAddedDownZVelocityUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_WingedFlying_HandleAddedDownZVelocityUpdated final
{
public:
	float                                         NewAddedDownZVelocity;                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.HandleFlyingMoveStatusUpdated
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_WingedFlying_HandleFlyingMoveStatusUpdated final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.HandleForwardSpeedUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortPawnComponent_WingedFlying_HandleForwardSpeedUpdated final
{
public:
	float                                         NewForwardSpeed;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.HandleLeftSkimCheckComplete
// 0x00F0 (0x00F0 - 0x0000)
struct FortPawnComponent_WingedFlying_HandleLeftSkimCheckComplete final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.HandleOwnerASCInitialized
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_WingedFlying_HandleOwnerASCInitialized final
{
public:
	class UFortAbilitySystemComponent*            AbilitySystemComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                        AffectedPawn;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.HandleRightSkimCheckComplete
// 0x00F0 (0x00F0 - 0x0000)
struct FortPawnComponent_WingedFlying_HandleRightSkimCheckComplete final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.StartCustomFlying
// 0x0038 (0x0038 - 0x0000)
struct FortPawnComponent_WingedFlying_StartCustomFlying final
{
public:
	TSubclassOf<class UFortMovementMode_ExtLogicFlyingWinged> FlyingMMEToStart;                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMovementMode_WingedFlyingCreationData CreationData;                                  // 0x0008(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.StartFlying
// 0x0030 (0x0030 - 0x0000)
struct FortPawnComponent_WingedFlying_StartFlying final
{
public:
	struct FFortMovementMode_WingedFlyingCreationData CreationData;                                  // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.UpdateCurrentFlyingEnergy
// 0x0008 (0x0008 - 0x0000)
struct FortPawnComponent_WingedFlying_UpdateCurrentFlyingEnergy final
{
public:
	float                                         NewFlyingEnergy;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceUpdateFX;                                    // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortPawnComponent_WingedFlying.GetLocalFlyingMoveActionValue
// 0x0010 (0x0010 - 0x0000)
struct FortPawnComponent_WingedFlying_GetLocalFlyingMoveActionValue final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWeaponWings.BP_ModifyIncomingDamage
// 0x0130 (0x0130 - 0x0000)
struct FortWeaponWings_BP_ModifyIncomingDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FHitResult                             DamageHit;                                         // 0x0028(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	const class AController*                      EventInstigator;                                   // 0x0118(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           DamageCauser;                                      // 0x0120(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutNewDamage;                                      // 0x0128(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWeaponWings.HandleDBNOStateChanged
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponWings_HandleDBNOStateChanged final
{
public:
	class AFortPawn*                              FortPawn;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInIsDBNO;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWeaponWings.HandleSecondaryFirePressed
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponWings_HandleSecondaryFirePressed final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWeaponWings.HandleWeaponAttachmentChanged
// 0x0010 (0x0010 - 0x0000)
struct FortWeaponWings_HandleWeaponAttachmentChanged final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWeaponWings.NativeUpdateEnergyFX
// 0x0001 (0x0001 - 0x0000)
struct FortWeaponWings_NativeUpdateEnergyFX final
{
public:
	bool                                          bForceUpdate;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWeaponWings.TryResetADSInput
// 0x0008 (0x0008 - 0x0000)
struct FortWeaponWings_TryResetADSInput final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.ClearInputActionDisplayContext
// 0x0010 (0x0010 - 0x0000)
struct FortWingedFlyingBlueprintLibrary_ClearInputActionDisplayContext final
{
public:
	class AFortPawn*                              PlayerPawn;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortInputMappingContext*         InputMappingContext;                               // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.FlyingStatusAddFlags
// 0x000C (0x000C - 0x0000)
struct FortWingedFlyingBlueprintLibrary_FlyingStatusAddFlags final
{
public:
	EWingedFlyingStatus                           Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FlagsToAdd;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWingedFlyingStatus                           NewStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.FlyingStatusHasAllFlags
// 0x000C (0x000C - 0x0000)
struct FortWingedFlyingBlueprintLibrary_FlyingStatusHasAllFlags final
{
public:
	EWingedFlyingStatus                           Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Flags_0;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.FlyingStatusHasAnyFlags
// 0x000C (0x000C - 0x0000)
struct FortWingedFlyingBlueprintLibrary_FlyingStatusHasAnyFlags final
{
public:
	EWingedFlyingStatus                           Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Flags_0;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.FlyingStatusRemoveFlags
// 0x000C (0x000C - 0x0000)
struct FortWingedFlyingBlueprintLibrary_FlyingStatusRemoveFlags final
{
public:
	EWingedFlyingStatus                           Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FlagsToRemove;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWingedFlyingStatus                           NewStatus;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.GetDodgeElapsedTime
// 0x0010 (0x0010 - 0x0000)
struct FortWingedFlyingBlueprintLibrary_GetDodgeElapsedTime final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.GetFlyingDuration
// 0x0010 (0x0010 - 0x0000)
struct FortWingedFlyingBlueprintLibrary_GetFlyingDuration final
{
public:
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.GetFlyingStatusElapsedTime
// 0x0018 (0x0018 - 0x0000)
struct FortWingedFlyingBlueprintLibrary_GetFlyingStatusElapsedTime final
{
public:
	EWingedFlyingStatus                           FlyingStatus;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMovementMode_WingedFlyingRuntimeData* MoveStatus;                               // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.SetInputActionDisplayContext
// 0x0010 (0x0010 - 0x0000)
struct FortWingedFlyingBlueprintLibrary_SetInputActionDisplayContext final
{
public:
	class AFortPawn*                              PlayerPawn;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortInputMappingContext*         InputMappingContext;                               // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function SunRoseFlyingRuntime.FortWingedFlyingBlueprintLibrary.TraceForWorldAndWater
// 0x0130 (0x0130 - 0x0000)
struct FortWingedFlyingBlueprintLibrary_TraceForWorldAndWater final
{
public:
	const class AActor*                           PlayerPawn;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TraceStart;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TraceEnd;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBlockingHit;                                    // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             ClosestHit;                                        // 0x0040(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

}

