#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchQuestsRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function MatchQuestsRuntime.FortPlayerStateComponent_MatchQuests.OnLandedFromBus
// 0x0008 (0x0008 - 0x0000)
struct FortPlayerStateComponent_MatchQuests_OnLandedFromBus final
{
public:
	class AFortPlayerControllerZone*              PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MatchQuestsRuntime.FortPlayerStateComponent_MatchQuests.Server_SetSelectedQuest
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerStateComponent_MatchQuests_Server_SetSelectedQuest final
{
public:
	TScriptInterface<class IQuestDefinitionInterface> Quest;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MatchQuestsRuntime.FortPlayerStateComponent_MatchQuests.TryToGrantSelectedQuest
// 0x0001 (0x0001 - 0x0000)
struct FortPlayerStateComponent_MatchQuests_TryToGrantSelectedQuest final
{
public:
	struct FFortGamePhaseUpdatedEvent             FortGamePhaseUpdatedEvent;                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function MatchQuestsRuntime.MatchQuestsCheatManager.MatchQuests_ForceQuestInOffer
// 0x0010 (0x0010 - 0x0000)
struct MatchQuestsCheatManager_MatchQuests_ForceQuestInOffer final
{
public:
	class FString                                 QuestName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function MatchQuestsRuntime.MatchQuestsCheatManager.MatchQuests_LogReportSimulatedRolls
// 0x0004 (0x0004 - 0x0000)
struct MatchQuestsCheatManager_MatchQuests_LogReportSimulatedRolls final
{
public:
	int32                                         RollsToSimulate;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

