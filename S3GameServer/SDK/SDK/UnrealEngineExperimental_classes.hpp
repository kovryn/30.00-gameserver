#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnrealEngineExperimental

#include "Basic.hpp"

#include "UnrealEngineExperimental_structs.hpp"
#include "ModularGameplay_classes.hpp"


namespace SDK
{

// Class UnrealEngineExperimental.ControllerComponentDebugDraw
// 0x0068 (0x0108 - 0x00A0)
class UControllerComponentDebugDraw final : public UControllerComponent
{
public:
	TArray<struct FPersistentLineBatcher>         PersistentLineBatchers;                            // 0x00A0(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x58];                                      // 0x00B0(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DrawDebugBoxInternal(const struct FVector& Center, const struct FVector& Extent, const struct FQuat& Rotation, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugCapsuleInternal(const struct FVector& Center, const float HalfHeight, const float Radius, const struct FQuat& Rotation, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugConeInternal(const struct FVector& Origin, const struct FVector& Direction, const float Length, const float AngleWidth, const float AngleHeight, int32 NumSides, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugCylinderInternal(const struct FVector& Start, const struct FVector& End, const float Radius, int32 Segments, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugDirectionalArrowInternal(const struct FVector& LineStart, const struct FVector& LineEnd, const float ArrowSize, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugLineInternal(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugPointInternal(const struct FVector& Position, const float Size, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const uint32 ChannelId, const uint32 InstanceID);
	void DrawDebugSphereInternal(const struct FVector& Center, const float Radius, const int32 Segments, const struct FColor& Color, const bool bPersistentLines, const float Lifetime, const float Thickness, const uint32 ChannelId, const uint32 InstanceID);
	void SetDebugDrawEnabled(const bool bEnabled, const uint32 ChannelId);

	void Clear(const uint32 ChannelId, const uint32 InstanceID) const;
	void ClearChannel(const uint32 ChannelId) const;
	void Reset(const uint32 ChannelId) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControllerComponentDebugDraw">();
	}
	static class UControllerComponentDebugDraw* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControllerComponentDebugDraw>();
	}
};

}

