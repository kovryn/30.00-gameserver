#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleAudioRuntime

#include "Basic.hpp"

#include "VehicleAudioRuntime_classes.hpp"
#include "VehicleAudioRuntime_parameters.hpp"


namespace SDK
{

// Function VehicleAudioRuntime.FortMotorSimComponent_SurfaceModifier.SetSurface
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FName                             NewSurface                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMotorSimComponent_SurfaceModifier::SetSurface(class FName NewSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMotorSimComponent_SurfaceModifier", "SetSurface");

	Params::FortMotorSimComponent_SurfaceModifier_SetSurface Parms{};

	Parms.NewSurface = NewSurface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.Init
// (Native, Public, BlueprintCallable)

void UFortVehicleSoundComponent::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.Pause
// (Native, Public, BlueprintCallable)

void UFortVehicleSoundComponent::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "Pause");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.Resume
// (Native, Public, BlueprintCallable)

void UFortVehicleSoundComponent::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "Resume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.Shutdown
// (Native, Public, BlueprintCallable)

void UFortVehicleSoundComponent::Shutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "Shutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.Update
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent::Update(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "Update");

	Params::FortVehicleSoundComponent_Update Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetAudioController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortVehicleAudioController*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortVehicleAudioController* UFortVehicleSoundComponent::GetAudioController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetAudioController");

	Params::FortVehicleSoundComponent_GetAudioController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetAudioParameterComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioParameterComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioParameterComponent* UFortVehicleSoundComponent::GetAudioParameterComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetAudioParameterComponent");

	Params::FortVehicleSoundComponent_GetAudioParameterComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetEngineAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* UFortVehicleSoundComponent::GetEngineAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetEngineAudioComponent");

	Params::FortVehicleSoundComponent_GetEngineAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetLayeredAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortLayeredAudioComponent*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortLayeredAudioComponent* UFortVehicleSoundComponent::GetLayeredAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetLayeredAudioComponent");

	Params::FortVehicleSoundComponent_GetLayeredAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetMotorModelComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioMotorModelComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioMotorModelComponent* UFortVehicleSoundComponent::GetMotorModelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetMotorModelComponent");

	Params::FortVehicleSoundComponent_GetMotorModelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetPhysicsVehicleConfigs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFortPhysicsVehicleConfigs* ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortPhysicsVehicleConfigs* UFortVehicleSoundComponent::GetPhysicsVehicleConfigs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetPhysicsVehicleConfigs");

	Params::FortVehicleSoundComponent_GetPhysicsVehicleConfigs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetREVComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UREVComponent*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UREVComponent* UFortVehicleSoundComponent::GetREVComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetREVComponent");

	Params::FortVehicleSoundComponent_GetREVComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetRootComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UFortVehicleSoundComponent::GetRootComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetRootComponent");

	Params::FortVehicleSoundComponent_GetRootComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetUseMetasounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortVehicleSoundComponent::GetUseMetasounds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetUseMetasounds");

	Params::FortVehicleSoundComponent_GetUseMetasounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent.GetVehicleActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAthenaVehicle*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaVehicle* UFortVehicleSoundComponent::GetVehicleActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent", "GetVehicleActor");

	Params::FortVehicleSoundComponent_GetVehicleActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_DamageState.HandleVehicleExploded
// (Final, Native, Private)
// Parameters:
// const class AController*                LastDamageInstigator                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_DamageState::HandleVehicleExploded(const class AController* LastDamageInstigator, class AFortAthenaVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_DamageState", "HandleVehicleExploded");

	Params::FortVehicleSoundComponent_DamageState_HandleVehicleExploded Parms{};

	Parms.LastDamageInstigator = LastDamageInstigator;
	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_DamageState.OnExplode
// (Event, Public, BlueprintEvent)
// Parameters:
// const class AController*                LastDamageInstigator                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_DamageState::OnExplode(const class AController* LastDamageInstigator, class AFortAthenaVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_DamageState", "OnExplode");

	Params::FortVehicleSoundComponent_DamageState_OnExplode Parms{};

	Parms.LastDamageInstigator = LastDamageInstigator;
	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_DamageState.OnScrapingSidesOrTop
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bIsScraping                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_DamageState::OnScrapingSidesOrTop(const bool bIsScraping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_DamageState", "OnScrapingSidesOrTop");

	Params::FortVehicleSoundComponent_DamageState_OnScrapingSidesOrTop Parms{};

	Parms.bIsScraping = bIsScraping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_DamageState.OnScrapingSidesOrTopChanged
// (Final, Native, Private)
// Parameters:
// const bool                              bNewScrapingState                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_DamageState::OnScrapingSidesOrTopChanged(const bool bNewScrapingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_DamageState", "OnScrapingSidesOrTopChanged");

	Params::FortVehicleSoundComponent_DamageState_OnScrapingSidesOrTopChanged Parms{};

	Parms.bNewScrapingState = bNewScrapingState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_DamageState.OnSleepStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bIsAwake                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_DamageState::OnSleepStateChanged(const bool bIsAwake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_DamageState", "OnSleepStateChanged");

	Params::FortVehicleSoundComponent_DamageState_OnSleepStateChanged Parms{};

	Parms.bIsAwake = bIsAwake;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_DamageState.OnVehicleSleepStateChanged
// (Final, Native, Private)
// Parameters:
// const bool                              bIsAwake                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_DamageState::OnVehicleSleepStateChanged(const bool bIsAwake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_DamageState", "OnVehicleSleepStateChanged");

	Params::FortVehicleSoundComponent_DamageState_OnVehicleSleepStateChanged Parms{};

	Parms.bIsAwake = bIsAwake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.VehicleAudioLifecycleInterface.OnInit
// (Native, Event, Public, BlueprintEvent)

void IVehicleAudioLifecycleInterface::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VehicleAudioLifecycleInterface", "OnInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.VehicleAudioLifecycleInterface.OnShutdown
// (Native, Event, Public, BlueprintEvent)

void IVehicleAudioLifecycleInterface::OnShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VehicleAudioLifecycleInterface", "OnShutdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.VehicleAudioLifecycleInterface.OnUpdate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IVehicleAudioLifecycleInterface::OnUpdate(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("VehicleAudioLifecycleInterface", "OnUpdate");

	Params::VehicleAudioLifecycleInterface_OnUpdate Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.VehicleSoundSurfaceData.BP_GetSoundForSurface
// (Event, Public, BlueprintEvent)
// Parameters:
// const EPhysicalSurface                  InSurface                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              InAir                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UVehicleSoundSurfaceData::BP_GetSoundForSurface(const EPhysicalSurface InSurface, const bool InAir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleSoundSurfaceData", "BP_GetSoundForSurface");

	Params::VehicleSoundSurfaceData_BP_GetSoundForSurface Parms{};

	Parms.InSurface = InSurface;
	Parms.InAir = InAir;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.BindVehicleCollisionEvent
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FVehicleCollisionAudioConfig&CollisionAudioConfig                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::BindVehicleCollisionEvent(const struct FVehicleCollisionAudioConfig& CollisionAudioConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "BindVehicleCollisionEvent");

	Params::FortVehicleAudioController_BindVehicleCollisionEvent Parms{};

	Parms.CollisionAudioConfig = std::move(CollisionAudioConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.CacheJitterTime
// (Native, Public, BlueprintCallable)

void AFortVehicleAudioController::CacheJitterTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "CacheJitterTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.OnVehicleRecentlyHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AFortAthenaVehicle*               SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HitActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HitLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::OnVehicleRecentlyHit(class AFortAthenaVehicle* SelfActor, class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& NormalImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "OnVehicleRecentlyHit");

	Params::FortVehicleAudioController_OnVehicleRecentlyHit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.HitActor = HitActor;
	Parms.HitLocation = std::move(HitLocation);
	Parms.NormalImpulse = std::move(NormalImpulse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.OnVehicleSleepStateChanged
// (Final, Native, Protected)
// Parameters:
// const bool                              bIsAwake                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::OnVehicleSleepStateChanged(const bool bIsAwake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "OnVehicleSleepStateChanged");

	Params::FortVehicleAudioController_OnVehicleSleepStateChanged Parms{};

	Parms.bIsAwake = bIsAwake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.SetLayeredAudioComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortLayeredAudioComponent*       InComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::SetLayeredAudioComponent(class UFortLayeredAudioComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "SetLayeredAudioComponent");

	Params::FortVehicleAudioController_SetLayeredAudioComponent Parms{};

	Parms.InComponent = InComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.SetMetasoundGeneratorHandle
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  TargetComponent                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::SetMetasoundGeneratorHandle(class UAudioComponent* TargetComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "SetMetasoundGeneratorHandle");

	Params::FortVehicleAudioController_SetMetasoundGeneratorHandle Parms{};

	Parms.TargetComponent = TargetComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.SetRedlineActive
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::SetRedlineActive(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "SetRedlineActive");

	Params::FortVehicleAudioController_SetRedlineActive Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.SetVehicle
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFortAthenaVehicle*               InVehicle                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::SetVehicle(class AFortAthenaVehicle* InVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "SetVehicle");

	Params::FortVehicleAudioController_SetVehicle Parms{};

	Parms.InVehicle = InVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.UpdateCollisionAudioNative
// (Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           CollisionTarget                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HitLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::UpdateCollisionAudioNative(class AActor* CollisionTarget, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "UpdateCollisionAudioNative");

	Params::FortVehicleAudioController_UpdateCollisionAudioNative Parms{};

	Parms.CollisionTarget = CollisionTarget;
	Parms.HitLocation = std::move(HitLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.UpdateMotorModelNative
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::UpdateMotorModelNative(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "UpdateMotorModelNative");

	Params::FortVehicleAudioController_UpdateMotorModelNative Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.UpdateSpringCompressionNative
// (Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UFortCollisionAudioComponent*     TargetCollisionAudioComponent                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   VehicleLocationOffset                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutMagnitude                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortVehicleAudioController::UpdateSpringCompressionNative(class UFortCollisionAudioComponent* TargetCollisionAudioComponent, const struct FVector& VehicleLocationOffset, bool* OutResult, float* OutMagnitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "UpdateSpringCompressionNative");

	Params::FortVehicleAudioController_UpdateSpringCompressionNative Parms{};

	Parms.TargetCollisionAudioComponent = TargetCollisionAudioComponent;
	Parms.VehicleLocationOffset = std::move(VehicleLocationOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;

	if (OutMagnitude != nullptr)
		*OutMagnitude = Parms.OutMagnitude;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetAudioMotorModelComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioMotorModelComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioMotorModelComponent* AFortVehicleAudioController::GetAudioMotorModelComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetAudioMotorModelComponent");

	Params::FortVehicleAudioController_GetAudioMotorModelComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetAudioParameterComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioParameterComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioParameterComponent* AFortVehicleAudioController::GetAudioParameterComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetAudioParameterComponent");

	Params::FortVehicleAudioController_GetAudioParameterComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetBrakingNative
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortVehicleAudioController::GetBrakingNative() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetBrakingNative");

	Params::FortVehicleAudioController_GetBrakingNative Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetEngineAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AFortVehicleAudioController::GetEngineAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetEngineAudioComponent");

	Params::FortVehicleAudioController_GetEngineAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetJitterTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortVehicleAudioController::GetJitterTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetJitterTime");

	Params::FortVehicleAudioController_GetJitterTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetLayeredAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortLayeredAudioComponent*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortLayeredAudioComponent* AFortVehicleAudioController::GetLayeredAudioComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetLayeredAudioComponent");

	Params::FortVehicleAudioController_GetLayeredAudioComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetPhysicsVehicleConfigs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFortPhysicsVehicleConfigs* ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortPhysicsVehicleConfigs* AFortVehicleAudioController::GetPhysicsVehicleConfigs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetPhysicsVehicleConfigs");

	Params::FortVehicleAudioController_GetPhysicsVehicleConfigs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetRedlineActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortVehicleAudioController::GetRedlineActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetRedlineActive");

	Params::FortVehicleAudioController_GetRedlineActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetREVComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UREVComponent*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UREVComponent* AFortVehicleAudioController::GetREVComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetREVComponent");

	Params::FortVehicleAudioController_GetREVComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetShouldUpdate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortVehicleAudioController::GetShouldUpdate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetShouldUpdate");

	Params::FortVehicleAudioController_GetShouldUpdate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetThrottleNative
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortVehicleAudioController::GetThrottleNative() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetThrottleNative");

	Params::FortVehicleAudioController_GetThrottleNative Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.GetVehicleActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAthenaVehicle*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaVehicle* AFortVehicleAudioController::GetVehicleActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "GetVehicleActor");

	Params::FortVehicleAudioController_GetVehicleActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.IsNativizationEnabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortVehicleAudioController::IsNativizationEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "IsNativizationEnabled");

	Params::FortVehicleAudioController_IsNativizationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleAudioController.UseMetasounds
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortVehicleAudioController::UseMetasounds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleAudioController", "UseMetasounds");

	Params::FortVehicleAudioController_UseMetasounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Speed.OnReversedChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bReversing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Speed::OnReversedChanged(bool bReversing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Speed", "OnReversedChanged");

	Params::FortVehicleSoundComponent_Speed_OnReversedChanged Parms{};

	Parms.bReversing = bReversing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.CalculateSurfaceSpeed
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            CurrentSurfaceSpeed                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            InterpSpeed                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            DeltaTime                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutNormalizedVehicleSpeed                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortVehicleSoundComponent_Surface::CalculateSurfaceSpeed(const float& CurrentSurfaceSpeed, const float& InterpSpeed, const float& DeltaTime, float* OutNormalizedVehicleSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "CalculateSurfaceSpeed");

	Params::FortVehicleSoundComponent_Surface_CalculateSurfaceSpeed Parms{};

	Parms.CurrentSurfaceSpeed = CurrentSurfaceSpeed;
	Parms.InterpSpeed = InterpSpeed;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNormalizedVehicleSpeed != nullptr)
		*OutNormalizedVehicleSpeed = Parms.OutNormalizedVehicleSpeed;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.GetSpringCompressionMagnitude
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const float                             MaxSpringCompMultiplier                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortVehicleSoundComponent_Surface::GetSpringCompressionMagnitude(const float MaxSpringCompMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "GetSpringCompressionMagnitude");

	Params::FortVehicleSoundComponent_Surface_GetSpringCompressionMagnitude Parms{};

	Parms.MaxSpringCompMultiplier = MaxSpringCompMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnBrakingChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::OnBrakingChanged(bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnBrakingChanged");

	Params::FortVehicleSoundComponent_Surface_OnBrakingChanged Parms{};

	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnEnteredWaterBody
// (Final, Native, Public)
// Parameters:
// class AFortAthenaVehicle*               Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWaterBodyActor*              WaterBody                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::OnEnteredWaterBody(class AFortAthenaVehicle* Vehicle, class AFortWaterBodyActor* WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnEnteredWaterBody");

	Params::FortVehicleSoundComponent_Surface_OnEnteredWaterBody Parms{};

	Parms.Vehicle = Vehicle;
	Parms.WaterBody = WaterBody;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnExitWaterBody
// (Final, Native, Public)
// Parameters:
// class AFortAthenaVehicle*               Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWaterBodyActor*              WaterBody                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::OnExitWaterBody(class AFortAthenaVehicle* Vehicle, class AFortWaterBodyActor* WaterBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnExitWaterBody");

	Params::FortVehicleSoundComponent_Surface_OnExitWaterBody Parms{};

	Parms.Vehicle = Vehicle;
	Parms.WaterBody = WaterBody;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnInAirChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::OnInAirChanged(bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnInAirChanged");

	Params::FortVehicleSoundComponent_Surface_OnInAirChanged Parms{};

	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnSkiddingChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::OnSkiddingChanged(bool bNewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnSkiddingChanged");

	Params::FortVehicleSoundComponent_Surface_OnSkiddingChanged Parms{};

	Parms.bNewState = bNewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnSpringCompression_Native
// (Final, Native, Public)

void UFortVehicleSoundComponent_Surface::OnSpringCompression_Native()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnSpringCompression_Native");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.OnSurfaceChanged
// (Final, Native, Public)
// Parameters:
// EPhysicalSurface                        NewSurface                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::OnSurfaceChanged(EPhysicalSurface NewSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "OnSurfaceChanged");

	Params::FortVehicleSoundComponent_Surface_OnSurfaceChanged Parms{};

	Parms.NewSurface = NewSurface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.SetFloatParameterOnAudioComponents
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::SetFloatParameterOnAudioComponents(class FName InName, float InFloat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "SetFloatParameterOnAudioComponents");

	Params::FortVehicleSoundComponent_Surface_SetFloatParameterOnAudioComponents Parms{};

	Parms.InName = InName;
	Parms.InFloat = InFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.SetTriggerParameterOnAudioComponents
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::SetTriggerParameterOnAudioComponents(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "SetTriggerParameterOnAudioComponents");

	Params::FortVehicleSoundComponent_Surface_SetTriggerParameterOnAudioComponents Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.UpdateSurface_Native
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            DeltaTime                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleSoundComponent_Surface::UpdateSurface_Native(const float& DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "UpdateSurface_Native");

	Params::FortVehicleSoundComponent_Surface_UpdateSurface_Native Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VehicleAudioRuntime.FortVehicleSoundComponent_Surface.UpdateSurfaceMagnitude_Native
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            SurfaceMagnitudeParam                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            SpringCompressionMagnitude                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            SpringCompMagnitudeAttack                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            SpringCompMagnitudeRelease                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            DeltaTime                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortVehicleSoundComponent_Surface::UpdateSurfaceMagnitude_Native(const float& SurfaceMagnitudeParam, const float& SpringCompressionMagnitude, const float& SpringCompMagnitudeAttack, const float& SpringCompMagnitudeRelease, const float& DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleSoundComponent_Surface", "UpdateSurfaceMagnitude_Native");

	Params::FortVehicleSoundComponent_Surface_UpdateSurfaceMagnitude_Native Parms{};

	Parms.SurfaceMagnitudeParam = SurfaceMagnitudeParam;
	Parms.SpringCompressionMagnitude = SpringCompressionMagnitude;
	Parms.SpringCompMagnitudeAttack = SpringCompMagnitudeAttack;
	Parms.SpringCompMagnitudeRelease = SpringCompMagnitudeRelease;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

