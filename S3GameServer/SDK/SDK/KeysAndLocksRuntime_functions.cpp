#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeysAndLocksRuntime

#include "Basic.hpp"

#include "KeysAndLocksRuntime_classes.hpp"
#include "KeysAndLocksRuntime_parameters.hpp"


namespace SDK
{

// Function KeysAndLocksRuntime.FortKeysAndLocksDisplayCase.GetLockChildActorsNativeHelper
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UChildActorComponent*>*    LockChildActors                                        (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortKeysAndLocksDisplayCase::GetLockChildActorsNativeHelper(TArray<class UChildActorComponent*>* LockChildActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeysAndLocksDisplayCase", "GetLockChildActorsNativeHelper");

	Params::FortKeysAndLocksDisplayCase_GetLockChildActorsNativeHelper Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LockChildActors != nullptr)
		*LockChildActors = std::move(Parms.LockChildActors);
}


// Function KeysAndLocksRuntime.FortKeysAndLocksDisplayCase.NativeCalculateLockInteractStrings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FFortItemEntry>&    Loot                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class FText>&              RarityTexts                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const class UFortWorldItemDefinition*   ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShowCount                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText*                            HaveKey                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText*                            NeedKey                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// const class UFortWeaponModSetData*      WeaponModSetData                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortKeysAndLocksDisplayCase::NativeCalculateLockInteractStrings(const TArray<struct FFortItemEntry>& Loot, const TArray<class FText>& RarityTexts, const class UFortWorldItemDefinition* ItemDefinition, const bool bShowCount, class FText* HaveKey, class FText* NeedKey, const class UFortWeaponModSetData* WeaponModSetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeysAndLocksDisplayCase", "NativeCalculateLockInteractStrings");

	Params::FortKeysAndLocksDisplayCase_NativeCalculateLockInteractStrings Parms{};

	Parms.Loot = std::move(Loot);
	Parms.RarityTexts = std::move(RarityTexts);
	Parms.ItemDefinition = ItemDefinition;
	Parms.bShowCount = bShowCount;
	Parms.WeaponModSetData = WeaponModSetData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HaveKey != nullptr)
		*HaveKey = std::move(Parms.HaveKey);

	if (NeedKey != nullptr)
		*NeedKey = std::move(Parms.NeedKey);
}


// Function KeysAndLocksRuntime.FortKeysAndLocksDisplayCase.NativeLockChildActorsPassAllRequirements
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UChildActorComponent*>&LockChildActors                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const class UFortWorldItemDefinition*   ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortKeysAndLocksDisplayCase::NativeLockChildActorsPassAllRequirements(const TArray<class UChildActorComponent*>& LockChildActors, const class UFortWorldItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeysAndLocksDisplayCase", "NativeLockChildActorsPassAllRequirements");

	Params::FortKeysAndLocksDisplayCase_NativeLockChildActorsPassAllRequirements Parms{};

	Parms.LockChildActors = std::move(LockChildActors);
	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

