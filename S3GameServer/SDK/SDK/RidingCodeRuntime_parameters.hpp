#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RidingCodeRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "RidingCodeRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.BlueprintCollectRidableAnimBPData
// 0x0008 (0x0008 - 0x0000)
struct FortVehicleLayerAnimInstance_Riding_BlueprintCollectRidableAnimBPData final
{
public:
	const class UAnimInstance*                    RidableAnimInstance;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.FortVehicleLayerAnimInstance_Riding.SetFootPhase
// 0x0001 (0x0001 - 0x0000)
struct FortVehicleLayerAnimInstance_Riding_SetFootPhase final
{
public:
	ERidingFootPhase                              InFootPhase;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidingCheatManager.RidingSetStaminaPercent
// 0x0004 (0x0004 - 0x0000)
struct RidingCheatManager_RidingSetStaminaPercent final
{
public:
	float                                         StaminaPercent;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.CheatSetStaminaPercent
// 0x0004 (0x0004 - 0x0000)
struct RidableComponent_CheatSetStaminaPercent final
{
public:
	float                                         StaminaPercent;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.HandleRiderEndPlay
// 0x0010 (0x0010 - 0x0000)
struct RidableComponent_HandleRiderEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RidableComponent.HandleRiderStartedRiding
// 0x0008 (0x0008 - 0x0000)
struct RidableComponent_HandleRiderStartedRiding final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.HandleRiderStoppedRiding
// 0x0008 (0x0008 - 0x0000)
struct RidableComponent_HandleRiderStoppedRiding final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.CanBePet
// 0x0010 (0x0010 - 0x0000)
struct RidableComponent_CanBePet final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RidableComponent.CanBeRiddenBP
// 0x0010 (0x0010 - 0x0000)
struct RidableComponent_CanBeRiddenBP final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RidableComponent.CanRiderPlayEmote
// 0x0010 (0x0010 - 0x0000)
struct RidableComponent_CanRiderPlayEmote final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RidableComponent.GetDismountLaunchVectorOverride
// 0x0020 (0x0020 - 0x0000)
struct RidableComponent_GetDismountLaunchVectorOverride final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.GetPettingData
// 0x0110 (0x0110 - 0x0000)
struct RidableComponent_GetPettingData final
{
public:
	struct FRidingPettingData                     ReturnValue;                                       // 0x0000(0x0110)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.GetRidingAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct RidableComponent_GetRidingAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.GetRidingCapsuleSize
// 0x0018 (0x0018 - 0x0000)
struct RidableComponent_GetRidingCapsuleSize final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OriginalRadius;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OriginalHalfHeight;                                // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutRadius;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutHalfHeight;                                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.GetRidingEmoteCapsuleSize
// 0x0018 (0x0018 - 0x0000)
struct RidableComponent_GetRidingEmoteCapsuleSize final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OriginalRadius;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OriginalHalfHeight;                                // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutRadius;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutHalfHeight;                                     // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.IsBeingRidden
// 0x0001 (0x0001 - 0x0000)
struct RidableComponent_IsBeingRidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.IsFlying
// 0x0001 (0x0001 - 0x0000)
struct RidableComponent_IsFlying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.IsSprinting
// 0x0001 (0x0001 - 0x0000)
struct RidableComponent_IsSprinting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RidableComponent.ShouldCameraFocusOnRidable
// 0x0010 (0x0010 - 0x0000)
struct RidableComponent_ShouldCameraFocusOnRidable final
{
public:
	const class URiderComponent*                  Rider;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.ControllableRidableComponent.HandleCancelSprint
// 0x0002 (0x0002 - 0x0000)
struct ControllableRidableComponent_HandleCancelSprint final
{
public:
	bool                                          bAbilityInputHeld;                                 // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceCancel;                                      // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllableRidableComponent.OnCapsuleBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct ControllableRidableComponent_OnCapsuleBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComp;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllableRidableComponent.CanBeControlled
// 0x0010 (0x0010 - 0x0000)
struct ControllableRidableComponent_CanBeControlled final
{
public:
	class URiderComponent*                        Rider;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.ControllableRidableComponent.CanStartSprinting
// 0x0001 (0x0001 - 0x0000)
struct ControllableRidableComponent_CanStartSprinting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllableRidableComponent.GetAbilityDisplayText
// 0x0010 (0x0010 - 0x0000)
struct ControllableRidableComponent_GetAbilityDisplayText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllableRidableComponent.IsSprintToggleable
// 0x0001 (0x0001 - 0x0000)
struct ControllableRidableComponent_IsSprintToggleable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.ClientHandleFinishedCharacterCustomization
// 0x0008 (0x0008 - 0x0000)
struct RiderComponent_ClientHandleFinishedCharacterCustomization final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.ClientNotifyEmoteFailure
// 0x0020 (0x0020 - 0x0000)
struct RiderComponent_ClientNotifyEmoteFailure final
{
public:
	struct FGameplayTagContainer                  ErrorTags;                                         // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleActorEndPlayWhileRiding
// 0x0010 (0x0010 - 0x0000)
struct RiderComponent_HandleActorEndPlayWhileRiding final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RiderComponent.HandleDeferredExitVelocity
// 0x0018 (0x0018 - 0x0000)
struct RiderComponent_HandleDeferredExitVelocity final
{
public:
	struct FVector                                ExitVelocity;                                      // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleOnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct RiderComponent_HandleOnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandlePawnDiedWhileRiding
// 0x0008 (0x0008 - 0x0000)
struct RiderComponent_HandlePawnDiedWhileRiding final
{
public:
	class AFortPawn*                              DeadPawn;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandlePawnTeleported
// 0x0008 (0x0008 - 0x0000)
struct RiderComponent_HandlePawnTeleported final
{
public:
	class AFortPawn*                              TeleportedPawn;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleRidableFound
// 0x00F0 (0x00F0 - 0x0000)
struct RiderComponent_HandleRidableFound final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleRidableMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct RiderComponent_HandleRidableMovementModeChanged final
{
public:
	class ACharacter*                             InCharacter;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RiderComponent.HandleRiderDidDamage
// 0x0060 (0x0060 - 0x0000)
struct RiderComponent_HandleRiderDidDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Damage;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0038(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleRiderTakenDamage
// 0x0060 (0x0060 - 0x0000)
struct RiderComponent_HandleRiderTakenDamage final
{
public:
	class AActor*                                 DamageOnOwnerPawnDamageddActor;                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Damage;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0038(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName;                                          // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Momentum;                                          // 0x0048(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleStartedRiding
// 0x0008 (0x0008 - 0x0000)
struct RiderComponent_HandleStartedRiding final
{
public:
	class URidableComponent*                      Ridable;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.HandleStoppedRiding
// 0x0008 (0x0008 - 0x0000)
struct RiderComponent_HandleStoppedRiding final
{
public:
	class URidableComponent*                      Ridable;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct RiderComponent_OnMovementModeChanged final
{
public:
	class ACharacter*                             InCharacter;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RiderComponent.SetRidingInputEnabled
// 0x0001 (0x0001 - 0x0000)
struct RiderComponent_SetRidingInputEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.StartRidingActor
// 0x0010 (0x0010 - 0x0000)
struct RiderComponent_StartRidingActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function RidingCodeRuntime.RiderComponent.StopRidingActor
// 0x0004 (0x0004 - 0x0000)
struct RiderComponent_StopRidingActor final
{
public:
	bool                                          bLaunchRider;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFindDismountLocation;                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsJumpExit;                                       // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.RiderComponent.IsRidingActor
// 0x0001 (0x0001 - 0x0000)
struct RiderComponent_IsRidingActor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.ControllingActor_OnJumpInput
// 0x0001 (0x0001 - 0x0000)
struct ControllingRiderComponent_ControllingActor_OnJumpInput final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.ControllingActor_OnMoveForward
// 0x0004 (0x0004 - 0x0000)
struct ControllingRiderComponent_ControllingActor_OnMoveForward final
{
public:
	float                                         Val;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.ControllingActor_OnMoveRight
// 0x0004 (0x0004 - 0x0000)
struct ControllingRiderComponent_ControllingActor_OnMoveRight final
{
public:
	float                                         Val;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.ServerUpdateControlInputStateReliable
// 0x0001 (0x0001 - 0x0000)
struct ControllingRiderComponent_ServerUpdateControlInputStateReliable final
{
public:
	struct FRidingControlInputStateReliable       InputState;                                        // 0x0000(0x0001)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.ServerUpdateControlInputStateUnreliable
// 0x0002 (0x0002 - 0x0000)
struct ControllingRiderComponent_ServerUpdateControlInputStateUnreliable final
{
public:
	struct FRidingControlInputStateUnreliable     InputState;                                        // 0x0000(0x0002)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.UpdateFromInput
// 0x0010 (0x0010 - 0x0000)
struct ControllingRiderComponent_UpdateFromInput final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRidingControlInputState               InputState;                                        // 0x0004(0x000C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.GetControlInputState
// 0x000C (0x000C - 0x0000)
struct ControllingRiderComponent_GetControlInputState final
{
public:
	struct FRidingControlInputState               ReturnValue;                                       // 0x0000(0x000C)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function RidingCodeRuntime.ControllingRiderComponent.IsTryingToMove
// 0x0008 (0x0008 - 0x0000)
struct ControllingRiderComponent_IsTryingToMove final
{
public:
	float                                         Tolerance;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

