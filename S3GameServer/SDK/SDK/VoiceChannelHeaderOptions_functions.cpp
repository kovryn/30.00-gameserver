#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoiceChannelHeaderOptions

#include "Basic.hpp"

#include "VoiceChannelHeaderOptions_classes.hpp"
#include "VoiceChannelHeaderOptions_parameters.hpp"


namespace SDK
{

// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__SidebarVoiceChannelHeader_Button_194_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BndEvt__SidebarVoiceChannelHeader_Button_194_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BndEvt__SidebarVoiceChannelHeader_Button_194_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__SidebarVoiceChannelHeader_Button_Options_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BndEvt__SidebarVoiceChannelHeader_Button_Options_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BndEvt__SidebarVoiceChannelHeader_Button_Options_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__SidebarVoiceChannelHeader_Button_Options_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BndEvt__SidebarVoiceChannelHeader_Button_Options_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BndEvt__SidebarVoiceChannelHeader_Button_Options_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");

	Params::VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_JoinLeaveButtonStw_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");

	Params::VoiceChannelHeaderOptions_C_BndEvt__VoiceChannelHeaderOptions_ReportButtonStw_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnDisabled
// (Event, Protected, BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BP_OnDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BP_OnDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnEnabled
// (Event, Protected, BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BP_OnEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BP_OnEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnFocusReceived
// (Event, Protected, BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BP_OnFocusReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BP_OnFocusReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BP_OnItemExpansionChanged");

	Params::VoiceChannelHeaderOptions_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UVoiceChannelHeaderOptions_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.DoCustomNavigation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Navigation_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UVoiceChannelHeaderOptions_C::DoCustomNavigation(EUINavigation Navigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "DoCustomNavigation");

	Params::VoiceChannelHeaderOptions_C_DoCustomNavigation Parms{};

	Parms.Navigation_0 = Navigation_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.ExecuteUbergraph_VoiceChannelHeaderOptions
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::ExecuteUbergraph_VoiceChannelHeaderOptions(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "ExecuteUbergraph_VoiceChannelHeaderOptions");

	Params::VoiceChannelHeaderOptions_C_ExecuteUbergraph_VoiceChannelHeaderOptions Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.HandleHeaderClicked
// (Event, Protected, BlueprintEvent)

void UVoiceChannelHeaderOptions_C::HandleHeaderClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "HandleHeaderClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.On Options Expansion Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsExpanded                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::On_Options_Expansion_Changed(bool IsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "On Options Expansion Changed");

	Params::VoiceChannelHeaderOptions_C_On_Options_Expansion_Changed Parms{};

	Parms.IsExpanded = IsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.OnListItemObjectSet_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::OnListItemObjectSet_1(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "OnListItemObjectSet_1");

	Params::VoiceChannelHeaderOptions_C_OnListItemObjectSet_1 Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.OnUpdateOptionsVisuals
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESocialCommsPermission                  VoicePermission                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bVoiceReportingIsAvailable                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsRecording                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanJoinOrLeave                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMightBeAbleToReport                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::OnUpdateOptionsVisuals(ESocialCommsPermission VoicePermission, bool bVoiceReportingIsAvailable, bool bIsRecording, bool bCanJoinOrLeave, bool bMightBeAbleToReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "OnUpdateOptionsVisuals");

	Params::VoiceChannelHeaderOptions_C_OnUpdateOptionsVisuals Parms{};

	Parms.VoicePermission = VoicePermission;
	Parms.bVoiceReportingIsAvailable = bVoiceReportingIsAvailable;
	Parms.bIsRecording = bIsRecording;
	Parms.bCanJoinOrLeave = bCanJoinOrLeave;
	Parms.bMightBeAbleToReport = bMightBeAbleToReport;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.OnUpdateVisuals
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsActiveAndListening                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsActiveOrAvailable                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsAvailableAndNotActive                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsListening                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowingRestriction                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::OnUpdateVisuals(bool bIsActiveAndListening, bool bIsActiveOrAvailable, bool bIsAvailableAndNotActive, bool bIsListening, bool bShowingRestriction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "OnUpdateVisuals");

	Params::VoiceChannelHeaderOptions_C_OnUpdateVisuals Parms{};

	Parms.bIsActiveAndListening = bIsActiveAndListening;
	Parms.bIsActiveOrAvailable = bIsActiveOrAvailable;
	Parms.bIsAvailableAndNotActive = bIsAvailableAndNotActive;
	Parms.bIsListening = bIsListening;
	Parms.bShowingRestriction = bShowingRestriction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.Set Header Status Visuals
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Old_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::Set_Header_Status_Visuals(bool Old_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "Set Header Status Visuals");

	Params::VoiceChannelHeaderOptions_C_Set_Header_Status_Visuals Parms{};

	Parms.Old_0 = Old_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.SetExpansionState
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsExpanded                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::SetExpansionState(const bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "SetExpansionState");

	Params::VoiceChannelHeaderOptions_C_SetExpansionState Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VoiceChannelHeaderOptions.VoiceChannelHeaderOptions_C.SetJoinOrLeaveButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Join                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVoiceChannelHeaderOptions_C::SetJoinOrLeaveButton(bool Join)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceChannelHeaderOptions_C", "SetJoinOrLeaveButton");

	Params::VoiceChannelHeaderOptions_C_SetJoinOrLeaveButton Parms{};

	Parms.Join = Join;

	UObject::ProcessEvent(Func, &Parms);
}

}

