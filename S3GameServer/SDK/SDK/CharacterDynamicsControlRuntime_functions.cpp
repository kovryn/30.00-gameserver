#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterDynamicsControlRuntime

#include "Basic.hpp"

#include "CharacterDynamicsControlRuntime_classes.hpp"
#include "CharacterDynamicsControlRuntime_parameters.hpp"


namespace SDK
{

// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.AddCharacterDynamicsControlLogicLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFortCharacterDynamicsStateLogic*LayerStateLogic                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterDynamicsControlBPLibrary::AddCharacterDynamicsControlLogicLayer(const class UFortAnimInstance* InAnimInstance, const class FName LayerName, const class UFortCharacterDynamicsStateLogic* LayerStateLogic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "AddCharacterDynamicsControlLogicLayer");

	Params::CharacterDynamicsControlBPLibrary_AddCharacterDynamicsControlLogicLayer Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.LayerName = LayerName;
	Parms.LayerStateLogic = LayerStateLogic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetCharacterState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCharacterDynamicsControlBPLibrary::GetCharacterState(const class UFortAnimInstance* InAnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "GetCharacterState");

	Params::CharacterDynamicsControlBPLibrary_GetCharacterState Parms{};

	Parms.InAnimInstance = InAnimInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetCharacterStateForLayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       StateLogicLayerName                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCharacterDynamicsControlBPLibrary::GetCharacterStateForLayer(const class UFortAnimInstance* InAnimInstance, const class FName StateLogicLayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "GetCharacterStateForLayer");

	Params::CharacterDynamicsControlBPLibrary_GetCharacterStateForLayer Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.StateLogicLayerName = StateLogicLayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetProperty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       InPropertyName                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterDynamicsControlBPLibrary::GetProperty(const class UFortAnimInstance* InAnimInstance, const class FName InPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "GetProperty");

	Params::CharacterDynamicsControlBPLibrary_GetProperty Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.InPropertyName = InPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.GetPropertyForLayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       InStateLogicLayerName                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       InPropertyName                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterDynamicsControlBPLibrary::GetPropertyForLayer(const class UFortAnimInstance* InAnimInstance, const class FName InStateLogicLayerName, const class FName InPropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "GetPropertyForLayer");

	Params::CharacterDynamicsControlBPLibrary_GetPropertyForLayer Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.InStateLogicLayerName = InStateLogicLayerName;
	Parms.InPropertyName = InPropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.HasCharacterDynamicsControlLogicLayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterDynamicsControlBPLibrary::HasCharacterDynamicsControlLogicLayer(const class UFortAnimInstance* InAnimInstance, const class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "HasCharacterDynamicsControlLogicLayer");

	Params::CharacterDynamicsControlBPLibrary_HasCharacterDynamicsControlLogicLayer Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.RemoveCharacterDynamicsControlLogicLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterDynamicsControlBPLibrary::RemoveCharacterDynamicsControlLogicLayer(const class UFortAnimInstance* InAnimInstance, const class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "RemoveCharacterDynamicsControlLogicLayer");

	Params::CharacterDynamicsControlBPLibrary_RemoveCharacterDynamicsControlLogicLayer Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.RequestFullBodyPBALayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       ReasonForRequest                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterDynamicsControlBPLibrary::RequestFullBodyPBALayer(const class UFortAnimInstance* InAnimInstance, const class FName ReasonForRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "RequestFullBodyPBALayer");

	Params::CharacterDynamicsControlBPLibrary_RequestFullBodyPBALayer Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.ReasonForRequest = ReasonForRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.SetProperty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UFortAnimInstance*          InAnimInstance                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       InPropertyName                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCharacterDynamicsControlBPLibrary::SetProperty(const class UFortAnimInstance* InAnimInstance, const class FName InPropertyName, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "SetProperty");

	Params::CharacterDynamicsControlBPLibrary_SetProperty Parms{};

	Parms.InAnimInstance = InAnimInstance;
	Parms.InPropertyName = InPropertyName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.UpdateRigidBodyWithControlNodeParameters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        UpdateContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FRigidBodyWithControlReference&RigidBodyWithControl                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FRigidBodyWithControlReference   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRigidBodyWithControlReference UCharacterDynamicsControlBPLibrary::UpdateRigidBodyWithControlNodeParameters(const struct FAnimUpdateContext& UpdateContext, const struct FRigidBodyWithControlReference& RigidBodyWithControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "UpdateRigidBodyWithControlNodeParameters");

	Params::CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParameters Parms{};

	Parms.UpdateContext = std::move(UpdateContext);
	Parms.RigidBodyWithControl = std::move(RigidBodyWithControl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.UpdateRigidBodyWithControlNodeParametersForLayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        UpdateContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FRigidBodyWithControlReference&RigidBodyWithControl                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const class FName                       StateLogicLayerName                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFortCharacterDynamicsParameters*Parameters                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRigidBodyWithControlReference   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRigidBodyWithControlReference UCharacterDynamicsControlBPLibrary::UpdateRigidBodyWithControlNodeParametersForLayer(const struct FAnimUpdateContext& UpdateContext, const struct FRigidBodyWithControlReference& RigidBodyWithControl, const class FName StateLogicLayerName, const class UFortCharacterDynamicsParameters* Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDynamicsControlBPLibrary", "UpdateRigidBodyWithControlNodeParametersForLayer");

	Params::CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParametersForLayer Parms{};

	Parms.UpdateContext = std::move(UpdateContext);
	Parms.RigidBodyWithControl = std::move(RigidBodyWithControl);
	Parms.StateLogicLayerName = StateLogicLayerName;
	Parms.Parameters = Parameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.CharacterDynamicsControlBPLibrary.UpdateRigidBodyWithControlNodeParametersFromAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAnimUpdateContext&        UpdateContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FRigidBodyWithControlReference&RigidBodyWithControl                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const class UFortCharacterDynamicsParameters*Parameters                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRigidBodyWithControlReference   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRigidBodyWithControlReference UCharacterDynamicsControlBPLibrary::UpdateRigidBodyWithControlNodeParametersFromAsset(const struct FAnimUpdateContext& UpdateContext, const struct FRigidBodyWithControlReference& RigidBodyWithControl, const class UFortCharacterDynamicsParameters* Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterDynamicsControlBPLibrary", "UpdateRigidBodyWithControlNodeParametersFromAsset");

	Params::CharacterDynamicsControlBPLibrary_UpdateRigidBodyWithControlNodeParametersFromAsset Parms{};

	Parms.UpdateContext = std::move(UpdateContext);
	Parms.RigidBodyWithControl = std::move(RigidBodyWithControl);
	Parms.Parameters = Parameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.AddLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFortCharacterDynamicsStateLogic*LayerStateLogic                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCharacterDynamicsComponent::AddLayer(const class FName LayerName, const class UFortCharacterDynamicsStateLogic* LayerStateLogic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "AddLayer");

	Params::FortCharacterDynamicsComponent_AddLayer Parms{};

	Parms.LayerName = LayerName;
	Parms.LayerStateLogic = LayerStateLogic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.CurrentStateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCharacterDynamicsComponent::CurrentStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "CurrentStateName");

	Params::FortCharacterDynamicsComponent_CurrentStateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.CurrentStateNameForLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCharacterDynamicsComponent::CurrentStateNameForLayer(const class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "CurrentStateNameForLayer");

	Params::FortCharacterDynamicsComponent_CurrentStateNameForLayer Parms{};

	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetProperty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterDynamicsComponent::GetProperty(const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "GetProperty");

	Params::FortCharacterDynamicsComponent_GetProperty Parms{};

	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetPropertyForLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterDynamicsComponent::GetPropertyForLayer(const class FName LayerName, const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "GetPropertyForLayer");

	Params::FortCharacterDynamicsComponent_GetPropertyForLayer Parms{};

	Parms.LayerName = LayerName;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.PreviousStateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCharacterDynamicsComponent::PreviousStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "PreviousStateName");

	Params::FortCharacterDynamicsComponent_PreviousStateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.PreviousStateNameForLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCharacterDynamicsComponent::PreviousStateNameForLayer(const class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "PreviousStateNameForLayer");

	Params::FortCharacterDynamicsComponent_PreviousStateNameForLayer Parms{};

	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.RemoveLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCharacterDynamicsComponent::RemoveLayer(const class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "RemoveLayer");

	Params::FortCharacterDynamicsComponent_RemoveLayer Parms{};

	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.SetProperty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              PropertyValue                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCharacterDynamicsComponent::SetProperty(const class FName PropertyName, const bool PropertyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "SetProperty");

	Params::FortCharacterDynamicsComponent_SetProperty Parms{};

	Parms.PropertyName = PropertyName;
	Parms.PropertyValue = PropertyValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetTimeInCurrentStateSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortCharacterDynamicsComponent::GetTimeInCurrentStateSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "GetTimeInCurrentStateSeconds");

	Params::FortCharacterDynamicsComponent_GetTimeInCurrentStateSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.GetTimeInCurrentStateSecondsForLayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortCharacterDynamicsComponent::GetTimeInCurrentStateSecondsForLayer(const class FName LayerName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "GetTimeInCurrentStateSecondsForLayer");

	Params::FortCharacterDynamicsComponent_GetTimeInCurrentStateSecondsForLayer Parms{};

	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CharacterDynamicsControlRuntime.FortCharacterDynamicsComponent.HasLayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       LayerName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterDynamicsComponent::HasLayer(const class FName LayerName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterDynamicsComponent", "HasLayer");

	Params::FortCharacterDynamicsComponent_HasLayer Parms{};

	Parms.LayerName = LayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

