#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCameraDirectorRuntime

#include "Basic.hpp"

#include "SparksCameraDirectorRuntime_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "LevelSequence_classes.hpp"
#include "Engine_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class SparksCameraDirectorRuntime.SparksCameraShotPool
// 0x0098 (0x00C8 - 0x0030)
class USparksCameraShotPool final : public UDataAsset
{
public:
	TArray<struct FSparksCameraShot>              Shots;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIgnoreShotTags;                                   // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PoolTags;                                          // 0x0048(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSparksCameraFilter                    PoolFilter;                                        // 0x0068(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraShotPool">();
	}
	static class USparksCameraShotPool* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraShotPool>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraDebugWidget
// 0x0000 (0x02B8 - 0x02B8)
class USparksCameraDebugWidget final : public UUserWidget
{
public:
	void ClearAll();
	void ClearCurrent();
	void LogToScreen(const class FString& Data, ESparksCameraLogType Type);
	void SetEventRouter(class UGameplayEventRouterComponent* EventRouter);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraDebugWidget">();
	}
	static class USparksCameraDebugWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraDebugWidget>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraDirectorComponent
// 0x01E0 (0x0280 - 0x00A0)
class alignas(0x10) USparksCameraDirectorComponent final : public UActorComponent
{
public:
	class USparksCameraDirectorConfig*            MainConfig;                                        // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USparksCameraDirectorConfig*            QAConfig;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USparksCameraDirectorConfig*            PerfConfig;                                        // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USparksCameraDirectorConfig*>    CustomConfig;                                      // 0x00B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class USparksCameraDirectorConfig*            Config;                                            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinShotTimeSeconds;                                // 0x00D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSparksCameraDirectorSequence>  Sequences;                                         // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class USparksPerformanceMap*                  PerformanceMap;                                    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USparksCameraDebugWidget*               DebugWidget;                                       // 0x00F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  IntermissionTags;                                  // 0x0100(0x0020)(Protected, NativeAccessSpecifierProtected)
	class ALevelSequenceActor*                    SequenceActor;                                     // 0x0120(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USparksLevelSequencePlayer*             SequencePlayer;                                    // 0x0128(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCamerasAreActive;                                 // 0x0130(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCamerasAreLocked;                                 // 0x0131(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class USparksCameraPluginDataProvider> DataProvider;                              // 0x0134(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         DebugTargetIndex;                                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentSequenceIndex;                              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentSequenceEntryIndex;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasActiveDynamicEvent;                            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSparksCommonDynamicCameraDirectorEvent DynamicEvent;                                     // 0x0150(0x0038)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_188[0x18];                                     // 0x0188(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSparksCameraDirectorSequenceEntry     CurrentPlayingEntry;                               // 0x01A0(0x0080)(Protected, NativeAccessSpecifierProtected)
	struct FSparksCameraDirectorSequence          IntermissionSequence;                              // 0x0220(0x0028)(Protected, NativeAccessSpecifierProtected)
	int32                                         CurrentIntermissionSequenceEntryIndex;             // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  LastKnownIntermissionTags;                         // 0x0250(0x0020)(Protected, NativeAccessSpecifierProtected)
	bool                                          bForceCameraViewTargetEnabled;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EvalStartIndex;                                    // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         EvalEndIndex;                                      // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateCameraControl(bool bActive);
	void DebugLockSpecificCameraShot(const struct FSparksCameraShot& Shot, bool bLockToFirstFrame, class AActor* Target);
	bool FindCurrentShot(int32* SequenceIndex, int32* EntryIndex, float StartTimeIn);
	float FindStartTimeForNextShotInSequenceMS(float TimeToTest);
	void HandleDirectorDynamicEvent(const struct FSparksCommonDynamicCameraDirectorEvent& Payload);
	void HandleForceIntermissionEvent(const struct FSparksCommonForceIntermissionCameraDirectorEvent& Payload);
	void HandleIntermissionTagsEvent(const struct FSparksCommonIntermissionCameraDirectorEvent& Payload);
	void InitDynamicCameras();
	void InsertPerformanceMap(class USparksPerformanceMap* Map);
	void InsertSequence(const struct FSparksCameraDirectorSequence& Sequence);
	void LogToScreen(const class FString& Data, ESparksCameraLogType Type, float TimeSeconds);
	void OnShotFinished();
	void PlayNextShot(float StartTimeOffset);
	void PlaySequenceEntry(const struct FSparksCameraDirectorSequenceEntry& Entry, float MsOffset, bool bIntermission, class AActor* ForceTarget);
	float PlayShot(struct FSparksCameraDirectorSequenceEntry* Entry);
	void ReplaceWithNonCloseupShot(const struct FSparksCameraDirectorSequenceEntry& OldEntry);
	void Reset(bool bForceShotChange);
	void StartIntermissionCameras(float ForceLengthMS, bool bForceReloadNewSequence, bool bForceShotChange);

	bool GetCameraActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraDirectorComponent">();
	}
	static class USparksCameraDirectorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraDirectorComponent>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraDirectorConfig
// 0x0148 (0x0178 - 0x0030)
class USparksCameraDirectorConfig final : public UDataAsset
{
public:
	float                                         MaxIntermissionShotTimeSeconds;                    // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxGeneratedShotTimeSeconds;                       // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTimeBetweenSameShotSeconds;                     // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRetriesToFindShot;                              // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSparksCameraSectionWrapper            DefaultSequenceGenerator;                          // 0x0040(0x00A8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USparksCameraDirectorSequenceGenerator* RuntimeDefaultSequenceGenerator;                   // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSparksCameraSectionWrapper>    SequenceGenerators;                                // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class USparksCameraDirectorSequenceGenerator*> RuntimeSequenceGenerators;                 // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USparksCameraPluginDataProvider> DataProvider;                              // 0x0110(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USparksCameraDebugWidget>   DebugWidgetClass;                                  // 0x0118(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ULevelSequence*, struct FSparksCameraShotUses> ShotTimestamps;                        // 0x0120(0x0050)(Protected, NativeAccessSpecifierProtected)
	bool                                          bInitialized;                                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class USparksCameraDirectorSequenceGenerator* FindBestGenerator(const struct FSparksPerformanceMapSection& Section);
	bool GenerateEntry(const struct FSparksPerformanceMapSection& Section, struct FSparksCameraDirectorSequenceEntry* OutEntry);
	bool GenerateSequence(const struct FSparksPerformanceMapSection& Section, struct FSparksCameraDirectorSequence* OutSequence);
	void Init();
	void MarkShotTime(class ULevelSequence* Shot, float AtTimestamp);
	void ResetCache();
	bool ShouldUseShot(class ULevelSequence* Shot, float AtTimestamp);

	bool CanGenerateShots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraDirectorConfig">();
	}
	static class USparksCameraDirectorConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraDirectorConfig>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraPluginDataProvider
// 0x0010 (0x00B0 - 0x00A0)
class USparksCameraPluginDataProvider : public UActorComponent
{
public:
	TArray<struct FSparksCameraShot>              StaticShots;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	TArray<class AActor*> GetAllTargets();
	float GetCurrentMSTimeInCameraEvent();
	class AActor* GetMatchingCameraTarget(const struct FGameplayTagContainer& Tags, float ShotTimeMS, bool bPreferLocal);
	class AActor* GetTargetForCloseup(float ShotTimeMS, struct FGameplayTagContainer* TagsOut, bool bPreferLocal);
	bool GetTargetRelevantTags(class AActor* Target, struct FSparksCameraFilter* TagsOut);
	bool GetValidTimestamp(float DesiredTimestampMS, float* OutTimestampMSHigh, float* OutTimestampMSLow);

	bool GetStaticShot(int32 Index_0, struct FSparksCameraShot* OutShot) const;
	int32 GetStaticShotCount() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraPluginDataProvider">();
	}
	static class USparksCameraPluginDataProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraPluginDataProvider>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraShotSelectRuleBase
// 0x0028 (0x0050 - 0x0028)
class USparksCameraShotSelectRuleBase : public UObject
{
public:
	bool                                          bIsInitialized;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USparksCameraShotPool*                  Pool;                                              // 0x0030(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                 ShotIndexes;                                       // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         Index_0;                                           // 0x0048(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ChooseShot(const struct FSparksPerformanceMapSection& Section, struct FSparksCameraDirectorSequenceEntry* OutShot);
	bool Init(class USparksCameraShotPool* InPool);
	bool Reset();

	int32 GetShotCount() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraShotSelectRuleBase">();
	}
	static class USparksCameraShotSelectRuleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraShotSelectRuleBase>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraPoolSelectRuleBase
// 0x00E8 (0x0110 - 0x0028)
class USparksCameraPoolSelectRuleBase : public UObject
{
public:
	bool                                          bIsInitialized;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSparksCameraSectionWrapper            Wrapper;                                           // 0x0030(0x00A8)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                 PoolIndexes;                                       // 0x00D8(0x0010)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class USparksCameraShotSelectRuleBase*> PoolRules;                                        // 0x00E8(0x0010)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class USparksCameraShotSelectRuleBase*        IntroPoolRule;                                     // 0x00F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USparksCameraShotSelectRuleBase*        ExitPoolRule;                                      // 0x0100(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         Index_0;                                           // 0x0108(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ChooseExitShot(const struct FSparksPerformanceMapSection& Section, struct FSparksCameraDirectorSequenceEntry* OutShot);
	bool ChooseIntroShot(const struct FSparksPerformanceMapSection& Section, struct FSparksCameraDirectorSequenceEntry* OutShot);
	bool ChooseShot(const struct FSparksPerformanceMapSection& Section, struct FSparksCameraDirectorSequenceEntry* OutShot);
	bool Init(const struct FSparksCameraSectionWrapper& Section);
	bool Reset();

	int32 GetPoolCount() const;
	int32 GetShotCount() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraPoolSelectRuleBase">();
	}
	static class USparksCameraPoolSelectRuleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraPoolSelectRuleBase>();
	}
};

// Class SparksCameraDirectorRuntime.SparksShotSelectRuleRandomized
// 0x0000 (0x0050 - 0x0050)
class USparksShotSelectRuleRandomized final : public USparksCameraShotSelectRuleBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksShotSelectRuleRandomized">();
	}
	static class USparksShotSelectRuleRandomized* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksShotSelectRuleRandomized>();
	}
};

// Class SparksCameraDirectorRuntime.SparksShotSelectRuleSequential
// 0x0000 (0x0050 - 0x0050)
class USparksShotSelectRuleSequential final : public USparksCameraShotSelectRuleBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksShotSelectRuleSequential">();
	}
	static class USparksShotSelectRuleSequential* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksShotSelectRuleSequential>();
	}
};

// Class SparksCameraDirectorRuntime.SparksShotSelectRuleScored
// 0x0000 (0x0050 - 0x0050)
class USparksShotSelectRuleScored final : public USparksCameraShotSelectRuleBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksShotSelectRuleScored">();
	}
	static class USparksShotSelectRuleScored* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksShotSelectRuleScored>();
	}
};

// Class SparksCameraDirectorRuntime.SparksPoolSelectRuleRandomized
// 0x0000 (0x0110 - 0x0110)
class USparksPoolSelectRuleRandomized final : public USparksCameraPoolSelectRuleBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksPoolSelectRuleRandomized">();
	}
	static class USparksPoolSelectRuleRandomized* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksPoolSelectRuleRandomized>();
	}
};

// Class SparksCameraDirectorRuntime.SparksPoolSelectRuleSequential
// 0x0000 (0x0110 - 0x0110)
class USparksPoolSelectRuleSequential final : public USparksCameraPoolSelectRuleBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksPoolSelectRuleSequential">();
	}
	static class USparksPoolSelectRuleSequential* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksPoolSelectRuleSequential>();
	}
};

// Class SparksCameraDirectorRuntime.SparksPoolSelectRuleScored
// 0x0000 (0x0110 - 0x0110)
class USparksPoolSelectRuleScored final : public USparksCameraPoolSelectRuleBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksPoolSelectRuleScored">();
	}
	static class USparksPoolSelectRuleScored* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksPoolSelectRuleScored>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraDirectorSequenceGenerator
// 0x00C0 (0x00E8 - 0x0028)
class USparksCameraDirectorSequenceGenerator final : public UObject
{
public:
	bool                                          bIsInitialized;                                    // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSparksCameraSectionWrapper            SectionData;                                       // 0x0030(0x00A8)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class USparksCameraPoolSelectRuleBase*        SelectionRule;                                     // 0x00D8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USparksCameraDirectorConfig*            CameraConfig;                                      // 0x00E0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	ESparksSectionGeneratorResult GenerateEntry(const struct FSparksPerformanceMapSection& Section, class USparksCameraPluginDataProvider* DataProvider, struct FSparksCameraDirectorSequenceEntry* OutEntry);
	ESparksSectionGeneratorResult GenerateExitEntry(const struct FSparksPerformanceMapSection& Section, class USparksCameraPluginDataProvider* DataProvider, struct FSparksCameraDirectorSequenceEntry* OutEntry);
	ESparksSectionGeneratorResult GenerateIntroEntry(const struct FSparksPerformanceMapSection& Section, class USparksCameraPluginDataProvider* DataProvider, struct FSparksCameraDirectorSequenceEntry* OutEntry);
	ESparksSectionGeneratorResult GenerateSequence(const struct FSparksPerformanceMapSection& Section, class USparksCameraPluginDataProvider* DataProvider, struct FSparksCameraDirectorSequence* OutSequence);
	const struct FSparksCameraFilter GetFilter();
	bool Init(const struct FSparksCameraSectionWrapper& InPool, class USparksCameraDirectorConfig* Config);
	bool Reset();

	bool HasEntries() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraDirectorSequenceGenerator">();
	}
	static class USparksCameraDirectorSequenceGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCameraDirectorSequenceGenerator>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCameraStageMark
// 0x0000 (0x0290 - 0x0290)
class ASparksCameraStageMark final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCameraStageMark">();
	}
	static class ASparksCameraStageMark* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASparksCameraStageMark>();
	}
};

// Class SparksCameraDirectorRuntime.SparksCamera_BPFL
// 0x0000 (0x0028 - 0x0028)
class USparksCamera_BPFL final : public UBlueprintFunctionLibrary
{
public:
	static struct FGameplayTag GetSubTagForMidiEventName(const class FString& EventString);
	static struct FGameplayTag GetTagForMidiEventName(const class FString& EventString);
	static float ScoreTagContainers(const struct FGameplayTagContainer& Tags1, const struct FGameplayTagContainer& Tags2);
	static ESparksFilterResult ScoreTagsAgainstFilter(const struct FSparksCameraFilter& Filter, const struct FGameplayTagContainer& TagsToMatch, float* OutScore);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCamera_BPFL">();
	}
	static class USparksCamera_BPFL* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCamera_BPFL>();
	}
};

// Class SparksCameraDirectorRuntime.SparksDefaultLevelSequenceInstanceData
// 0x0080 (0x0120 - 0x00A0)
class USparksDefaultLevelSequenceInstanceData final : public UDefaultLevelSequenceInstanceData
{
public:
	class USkeletalMeshComponent*                 MeshToAttachTo;                                    // 0x00A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x78];                                      // 0x00A8(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksDefaultLevelSequenceInstanceData">();
	}
	static class USparksDefaultLevelSequenceInstanceData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksDefaultLevelSequenceInstanceData>();
	}
};

// Class SparksCameraDirectorRuntime.SparksLevelSequenceActor
// 0x0000 (0x0330 - 0x0330)
class ASparksLevelSequenceActor final : public ALevelSequenceActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksLevelSequenceActor">();
	}
	static class ASparksLevelSequenceActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASparksLevelSequenceActor>();
	}
};

// Class SparksCameraDirectorRuntime.SparksLevelSequencePlayer
// 0x0020 (0x05A8 - 0x0588)
class USparksLevelSequencePlayer final : public ULevelSequencePlayer
{
public:
	class ACineCameraActor*                       SpawnedCamera;                                     // 0x0588(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 TargetMesh;                                        // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnedLookAtTraget;                               // 0x0598(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A0[0x8];                                      // 0x05A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USparksLevelSequencePlayer* SparksCreateLevelSequencePlayer(class UObject* WorldContextObject, class ULevelSequence* LevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, class ASparksLevelSequenceActor** OutActor, class USkeletalMeshComponent* TargetActor, const struct FSparksCameraShot& Shot);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksLevelSequencePlayer">();
	}
	static class USparksLevelSequencePlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksLevelSequencePlayer>();
	}
};

// Class SparksCameraDirectorRuntime.SparksPerformanceMap
// 0x0010 (0x0038 - 0x0028)
class USparksPerformanceMap final : public UObject
{
public:
	TArray<struct FSparksPerformanceMapSection>   Timeline;                                          // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void AddSection(float StartMS, const struct FGameplayTag& PrimaryTag, const struct FGameplayTagContainer& SecondaryTags);
	void FixupSectionTimeLengths();
	int32 InsertTimeline(class USparksPerformanceMap* Map, int32* OutFirstIndex, int32* OutLastIndex, bool bOverwrite);

	int32 GetNextSectionIndexAtTime(float TimeMS) const;
	int32 GetSectionIndexAtTime(float TimeMS) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksPerformanceMap">();
	}
	static class USparksPerformanceMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksPerformanceMap>();
	}
};

}

