#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MPItemShop_VaultWorld

#include "Basic.hpp"

#include "MPItemShop_VaultWorld_classes.hpp"
#include "MPItemShop_VaultWorld_parameters.hpp"


namespace SDK
{

// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMPItemShop_VaultWorld_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.TransitionForward__UpdateFunc
// (BlueprintEvent)

void AMPItemShop_VaultWorld_C::TransitionForward__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "TransitionForward__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.TransitionForward__FinishedFunc
// (BlueprintEvent)

void AMPItemShop_VaultWorld_C::TransitionForward__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "TransitionForward__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.TransitionBackgroundForward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FXTransitionFade                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Mid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::TransitionBackgroundForward(double Forward, double FXTransitionFade, class UMaterialInstanceDynamic* Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "TransitionBackgroundForward");

	Params::MPItemShop_VaultWorld_C_TransitionBackgroundForward Parms{};

	Parms.Forward = Forward;
	Parms.FXTransitionFade = FXTransitionFade;
	Parms.Mid = Mid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.TransitionBackgroundBackward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Backward                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FXTransitionFade                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Mid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::TransitionBackgroundBackward(double Backward, double FXTransitionFade, class UMaterialInstanceDynamic* Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "TransitionBackgroundBackward");

	Params::MPItemShop_VaultWorld_C_TransitionBackgroundBackward Parms{};

	Parms.Backward = Backward;
	Parms.FXTransitionFade = FXTransitionFade;
	Parms.Mid = Mid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.StopTransitions
// (Public, BlueprintCallable, BlueprintEvent)

void AMPItemShop_VaultWorld_C::StopTransitions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "StopTransitions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.SetupBackgroundMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*&                      TextureBackground                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         Mid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFloor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FirstTimeSetup                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::SetupBackgroundMaterial(class UTexture2D*& TextureBackground, class UMaterialInstanceDynamic* Mid, bool IsFloor, bool FirstTimeSetup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "SetupBackgroundMaterial");

	Params::MPItemShop_VaultWorld_C_SetupBackgroundMaterial Parms{};

	Parms.TextureBackground = TextureBackground;
	Parms.Mid = Mid;
	Parms.IsFloor = IsFloor;
	Parms.FirstTimeSetup = FirstTimeSetup;

	UObject::ProcessEvent(Func, &Parms);

	TextureBackground = Parms.TextureBackground;
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.Set Background from Child Actor
// (Public, BlueprintCallable, BlueprintEvent)

void AMPItemShop_VaultWorld_C::Set_Background_from_Child_Actor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "Set Background from Child Actor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMPItemShop_VaultWorld_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnUpdateDisplay
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowFloor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShowEffects                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::OnUpdateDisplay(bool bShowFloor, bool bShowEffects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "OnUpdateDisplay");

	Params::MPItemShop_VaultWorld_C_OnUpdateDisplay Parms{};

	Parms.bShowFloor = bShowFloor;
	Parms.bShowEffects = bShowEffects;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnTransitionBackground
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPlayForward                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBackgroundIntensityLevel               IntensityTransition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::OnTransitionBackground(bool bPlayForward, EBackgroundIntensityLevel IntensityTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "OnTransitionBackground");

	Params::MPItemShop_VaultWorld_C_OnTransitionBackground Parms{};

	Parms.bPlayForward = bPlayForward;
	Parms.IntensityTransition = IntensityTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnSetupTextureBackground
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class UTexture2D*                 LoadedBackgroundTexture                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVaultWorldBackgroundData& BackgroundInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMPItemShop_VaultWorld_C::OnSetupTextureBackground(const class UTexture2D* LoadedBackgroundTexture, const struct FVaultWorldBackgroundData& BackgroundInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "OnSetupTextureBackground");

	Params::MPItemShop_VaultWorld_C_OnSetupTextureBackground Parms{};

	Parms.LoadedBackgroundTexture = LoadedBackgroundTexture;
	Parms.BackgroundInfo = std::move(BackgroundInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnSetupMaterialBackground
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class UMaterialInterface*         LoadedBackgroundMaterial                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVaultWorldBackgroundData& BackgroundInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AMPItemShop_VaultWorld_C::OnSetupMaterialBackground(const class UMaterialInterface* LoadedBackgroundMaterial, const struct FVaultWorldBackgroundData& BackgroundInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "OnSetupMaterialBackground");

	Params::MPItemShop_VaultWorld_C_OnSetupMaterialBackground Parms{};

	Parms.LoadedBackgroundMaterial = LoadedBackgroundMaterial;
	Parms.BackgroundInfo = std::move(BackgroundInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnNewSceneBackgroundChildActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortStaticMeshActor*             NewActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::OnNewSceneBackgroundChildActor(class AFortStaticMeshActor* NewActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "OnNewSceneBackgroundChildActor");

	Params::MPItemShop_VaultWorld_C_OnNewSceneBackgroundChildActor Parms{};

	Parms.NewActor = NewActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.OnInitialBackgroundTransition
// (Event, Protected, BlueprintEvent)

void AMPItemShop_VaultWorld_C::OnInitialBackgroundTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "OnInitialBackgroundTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.HandleTextureBackground
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*&                      TextureBackground                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::HandleTextureBackground(class UTexture2D*& TextureBackground)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "HandleTextureBackground");

	Params::MPItemShop_VaultWorld_C_HandleTextureBackground Parms{};

	Parms.TextureBackground = TextureBackground;

	UObject::ProcessEvent(Func, &Parms);

	TextureBackground = Parms.TextureBackground;
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.HandleMaterialBackground
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UMaterialInterface*         MaterialBackground                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::HandleMaterialBackground(const class UMaterialInterface* MaterialBackground)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "HandleMaterialBackground");

	Params::MPItemShop_VaultWorld_C_HandleMaterialBackground Parms{};

	Parms.MaterialBackground = MaterialBackground;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.FloorVisibility__UpdateFunc
// (BlueprintEvent)

void AMPItemShop_VaultWorld_C::FloorVisibility__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "FloorVisibility__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.FloorVisibility__FinishedFunc
// (BlueprintEvent)

void AMPItemShop_VaultWorld_C::FloorVisibility__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "FloorVisibility__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.ExecuteUbergraph_MPItemShop_VaultWorld
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::ExecuteUbergraph_MPItemShop_VaultWorld(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "ExecuteUbergraph_MPItemShop_VaultWorld");

	Params::MPItemShop_VaultWorld_C_ExecuteUbergraph_MPItemShop_VaultWorld Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.AssignFloorMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               SourceMaterial                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::AssignFloorMaterial(class UMaterialInterface* SourceMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "AssignFloorMaterial");

	Params::MPItemShop_VaultWorld_C_AssignFloorMaterial Parms{};

	Parms.SourceMaterial = SourceMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MPItemShop_VaultWorld.MPItemShop_VaultWorld_C.AssignBackgroundMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               SourceMaterial                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AMPItemShop_VaultWorld_C::AssignBackgroundMaterial(class UMaterialInterface* SourceMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MPItemShop_VaultWorld_C", "AssignBackgroundMaterial");

	Params::MPItemShop_VaultWorld_C_AssignBackgroundMaterial Parms{};

	Parms.SourceMaterial = SourceMaterial;

	UObject::ProcessEvent(Func, &Parms);
}

}

