#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tweening

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum Tweening.ETweenSplineAlignmentOption
// NumValues: 0x0004
enum class ETweenSplineAlignmentOption : uint8
{
	NoAlignment                              = 0,
	AlignWithSpline                          = 1,
	AlignWithTween                           = 2,
	ETweenSplineAlignmentOption_MAX          = 3,
};

// Enum Tweening.ETweenPlayDirection
// NumValues: 0x0003
enum class ETweenPlayDirection : uint8
{
	Forward                                  = 0,
	Backward                                 = 1,
	ETweenPlayDirection_MAX                  = 2,
};

// Enum Tweening.ETweenInitializationPoint
// NumValues: 0x0003
enum class ETweenInitializationPoint : uint8
{
	AfterDelay                               = 0,
	OnPlay                                   = 1,
	ETweenInitializationPoint_MAX            = 2,
};

// Enum Tweening.ETweenLoopType
// NumValues: 0x0004
enum class ETweenLoopType : uint8
{
	None                                     = 0,
	Repeat                                   = 1,
	PingPong                                 = 2,
	ETweenLoopType_MAX                       = 3,
};

// Enum Tweening.ETweenResetDestination
// NumValues: 0x0003
enum class ETweenResetDestination : uint8
{
	Beginning                                = 0,
	End                                      = 1,
	ETweenResetDestination_MAX               = 2,
};

// Enum Tweening.ETweenBuiltInEasing
// NumValues: 0x0020
enum class ETweenBuiltInEasing : uint8
{
	Linear                                   = 0,
	SinIn                                    = 1,
	SinOut                                   = 2,
	SinInOut                                 = 3,
	QuadIn                                   = 4,
	QuadOut                                  = 5,
	QuadInOut                                = 6,
	CubicIn                                  = 7,
	CubicOut                                 = 8,
	CubicInOut                               = 9,
	QuartIn                                  = 10,
	QuartOut                                 = 11,
	QuartInOut                               = 12,
	QuintIn                                  = 13,
	QuintOut                                 = 14,
	QuintInOut                               = 15,
	ExpoIn                                   = 16,
	ExpoOut                                  = 17,
	ExpoInOut                                = 18,
	CircIn                                   = 19,
	CircOut                                  = 20,
	CircInOut                                = 21,
	BackIn                                   = 22,
	BackOut                                  = 23,
	BackInOut                                = 24,
	ElasticIn                                = 25,
	ElasticOut                               = 26,
	ElasticInOut                             = 27,
	BounceIn                                 = 28,
	BounceOut                                = 29,
	BounceInOut                              = 30,
	ETweenBuiltInEasing_MAX                  = 31,
};

// ScriptStruct Tweening.TweenOptionalFloat
// 0x0008 (0x0008 - 0x0000)
struct FTweenOptionalFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificValue;                                 // 0x0004(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenOptionalVector2D
// 0x0018 (0x0018 - 0x0000)
struct FTweenOptionalVector2D final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificValue;                                 // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenOptionalVector
// 0x0020 (0x0020 - 0x0000)
struct FTweenOptionalVector final
{
public:
	struct FVector                                Value;                                             // 0x0000(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificValue;                                 // 0x0018(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenOptionalVector4
// 0x0030 (0x0030 - 0x0000)
struct FTweenOptionalVector4 final
{
public:
	struct FVector4                               Value;                                             // 0x0000(0x0020)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificValue;                                 // 0x0020(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenOptionalLinearColor
// 0x0014 (0x0014 - 0x0000)
struct FTweenOptionalLinearColor final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificValue;                                 // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenOptionalRotator
// 0x0020 (0x0020 - 0x0000)
struct FTweenOptionalRotator final
{
public:
	struct FRotator                               Value;                                             // 0x0000(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseSpecificValue;                                 // 0x0018(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenDelayOptions
// 0x000C (0x000C - 0x0000)
struct FTweenDelayOptions final
{
public:
	float                                         DelayAtBeginning;                                  // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelayAtEnd;                                        // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETweenInitializationPoint                     InitializationPoint;                               // 0x0008(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct Tweening.TweenLoopOptions
// 0x0008 (0x0008 - 0x0000)
struct FTweenLoopOptions final
{
public:
	ETweenLoopType                                LoopType;                                          // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoopCount;                                         // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct Tweening.TweenSequenceEntry
// 0x0020 (0x0020 - 0x0000)
struct FTweenSequenceEntry final
{
public:
	class UTweenSequence*                         EntrySequence;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

