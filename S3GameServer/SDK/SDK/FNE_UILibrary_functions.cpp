#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FNE_UILibrary

#include "Basic.hpp"

#include "FNE_UILibrary_classes.hpp"
#include "FNE_UILibrary_parameters.hpp"


namespace SDK
{

// Function FNE_UILibrary.FNE_ModularButton.RegisterModularBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFNE_UIBlock*                     bLock                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_ModularButton::RegisterModularBlock(class UFNE_UIBlock* bLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_ModularButton", "RegisterModularBlock");

	Params::FNE_ModularButton_RegisterModularBlock Parms{};

	Parms.bLock = bLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_ModularButton.RequestInstantTransitionOnBlocks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFNE_UIBlockInstantTransitionState      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_ModularButton::RequestInstantTransitionOnBlocks(EFNE_UIBlockInstantTransitionState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_ModularButton", "RequestInstantTransitionOnBlocks");

	Params::FNE_ModularButton_RequestInstantTransitionOnBlocks Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_ModularButton.RequestTransitionOnBlocks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFNE_UIBlockVisualState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_ModularButton::RequestTransitionOnBlocks(EFNE_UIBlockVisualState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_ModularButton", "RequestTransitionOnBlocks");

	Params::FNE_ModularButton_RequestTransitionOnBlocks Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_ModularButton.SetBlocksTiming
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFNE_UIBlockTiming&        Timing                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFNE_ModularButton::SetBlocksTiming(const struct FFNE_UIBlockTiming& Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_ModularButton", "SetBlocksTiming");

	Params::FNE_ModularButton_SetBlocksTiming Parms{};

	Parms.Timing = std::move(Timing);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_ModularButton.UnregisterAllModularBlocks
// (Final, Native, Public, BlueprintCallable)

void UFNE_ModularButton::UnregisterAllModularBlocks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_ModularButton", "UnregisterAllModularBlocks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_ModularButton.UnregisterModularBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFNE_UIBlock*                     bLock                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_ModularButton::UnregisterModularBlock(class UFNE_UIBlock* bLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_ModularButton", "UnregisterModularBlock");

	Params::FNE_ModularButton_UnregisterModularBlock Parms{};

	Parms.bLock = bLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_UIBlock.GetTransitionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFNE_UIBlockVisualState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFNE_UIBlock::GetTransitionTime(EFNE_UIBlockVisualState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "GetTransitionTime");

	Params::FNE_UIBlock_GetTransitionTime Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FNE_UILibrary.FNE_UIBlock.OnInstantTransitionToDeselected
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnInstantTransitionToDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnInstantTransitionToDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnInstantTransitionToDisabled
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnInstantTransitionToDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnInstantTransitionToDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnInstantTransitionToEnabled
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnInstantTransitionToEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnInstantTransitionToEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnInstantTransitionToLocked
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnInstantTransitionToLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnInstantTransitionToLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnInstantTransitionToSelected
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnInstantTransitionToSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnInstantTransitionToSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnInstantTransitionToUnlocked
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnInstantTransitionToUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnInstantTransitionToUnlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionDeselectedFocusedRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionDeselectedFocusedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionDeselectedFocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionDeselectedIdleRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionDeselectedIdleRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionDeselectedIdleRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionDisabledRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionDisabledRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionDisabledRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionEnabledRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionEnabledRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionEnabledRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionFocusedRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionFocusedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionFocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionHoveredRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionHoveredRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionHoveredRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionPressedRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionPressedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionPressedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionReleasedRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionReleasedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionReleasedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionSelectedRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionSelectedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionSelectedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionUnfocusedRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionUnfocusedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionUnfocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.OnTransitionUnhoveredRequested
// (Event, Protected, BlueprintEvent)

void UFNE_UIBlock::OnTransitionUnhoveredRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "OnTransitionUnhoveredRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FNE_UILibrary.FNE_UIBlock.PlayTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPlayForward                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_UIBlock::PlayTransition(class UWidgetAnimation* Animation, const bool bPlayForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "PlayTransition");

	Params::FNE_UIBlock_PlayTransition Parms{};

	Parms.Animation = Animation;
	Parms.bPlayForward = bPlayForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_UIBlock.RequestInstantTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFNE_UIBlockInstantTransitionState      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_UIBlock::RequestInstantTransition(EFNE_UIBlockInstantTransitionState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "RequestInstantTransition");

	Params::FNE_UIBlock_RequestInstantTransition Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_UIBlock.RequestTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFNE_UIBlockVisualState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_UIBlock::RequestTransition(EFNE_UIBlockVisualState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "RequestTransition");

	Params::FNE_UIBlock_RequestTransition Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_UIBlock.SetBlockTiming
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FFNE_UIBlockTiming&        Timing                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFNE_UIBlock::SetBlockTiming(const struct FFNE_UIBlockTiming& Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_UIBlock", "SetBlockTiming");

	Params::FNE_UIBlock_SetBlockTiming Parms{};

	Parms.Timing = std::move(Timing);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_UIBlueprintFunctionLibrary.PlayAnimationDuringTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             PlayTime                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bPlayForward                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFNE_UIBlueprintFunctionLibrary::PlayAnimationDuringTime(class UUserWidget* Widget, class UWidgetAnimation* Animation, const float PlayTime, const bool bPlayForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FNE_UIBlueprintFunctionLibrary", "PlayAnimationDuringTime");

	Params::FNE_UIBlueprintFunctionLibrary_PlayAnimationDuringTime Parms{};

	Parms.Widget = Widget;
	Parms.Animation = Animation;
	Parms.PlayTime = PlayTime;
	Parms.bPlayForward = bPlayForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_CTAButton.BP_SetSecondaryText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      ButtonSecondaryText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFNE_CTAButton::BP_SetSecondaryText(const class FText& ButtonSecondaryText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_CTAButton", "BP_SetSecondaryText");

	Params::FNE_CTAButton_BP_SetSecondaryText Parms{};

	Parms.ButtonSecondaryText = std::move(ButtonSecondaryText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FNE_UILibrary.FNE_CTAButton.BP_SetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      ButtonText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFNE_CTAButton::BP_SetText(const class FText& ButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_CTAButton", "BP_SetText");

	Params::FNE_CTAButton_BP_SetText Parms{};

	Parms.ButtonText = std::move(ButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FNE_UILibrary.FNE_CTAButton.SetSecondaryText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      ButtonSecondaryText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFNE_CTAButton::SetSecondaryText(const class FText& ButtonSecondaryText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_CTAButton", "SetSecondaryText");

	Params::FNE_CTAButton_SetSecondaryText Parms{};

	Parms.ButtonSecondaryText = std::move(ButtonSecondaryText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_CTAButton.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      ButtonText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFNE_CTAButton::SetText(const class FText& ButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_CTAButton", "SetText");

	Params::FNE_CTAButton_SetText Parms{};

	Parms.ButtonText = std::move(ButtonText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FNE_UILibrary.FNE_StylableButton.BP_SetSecondaryText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      ButtonSecondaryText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFNE_StylableButton::BP_SetSecondaryText(const class FText& ButtonSecondaryText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_StylableButton", "BP_SetSecondaryText");

	Params::FNE_StylableButton_BP_SetSecondaryText Parms{};

	Parms.ButtonSecondaryText = std::move(ButtonSecondaryText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FNE_UILibrary.FNE_StylableButton.BP_SetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      ButtonText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFNE_StylableButton::BP_SetText(const class FText& ButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FNE_StylableButton", "BP_SetText");

	Params::FNE_StylableButton_BP_SetText Parms{};

	Parms.ButtonText = std::move(ButtonText);

	UObject::ProcessEvent(Func, &Parms);
}

}

