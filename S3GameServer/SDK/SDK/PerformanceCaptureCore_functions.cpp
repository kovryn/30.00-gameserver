#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerformanceCaptureCore

#include "Basic.hpp"

#include "PerformanceCaptureCore_classes.hpp"
#include "PerformanceCaptureCore_parameters.hpp"


namespace SDK
{

// Function PerformanceCaptureCore.CaptureCharacter.GetCustomRetargetProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRetargetProfile                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRetargetProfile ACaptureCharacter::GetCustomRetargetProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CaptureCharacter", "GetCustomRetargetProfile");

	Params::CaptureCharacter_GetCustomRetargetProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PerformanceCaptureCore.CaptureCharacter.SetCustomRetargetProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FRetargetProfile&          InProfile                                              (Parm, NativeAccessSpecifierPublic)

void ACaptureCharacter::SetCustomRetargetProfile(const struct FRetargetProfile& InProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CaptureCharacter", "SetCustomRetargetProfile");

	Params::CaptureCharacter_SetCustomRetargetProfile Parms{};

	Parms.InProfile = std::move(InProfile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CaptureCharacter.SetForceAllSkeletalMeshesToFollowLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InFollowLeader                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACaptureCharacter::SetForceAllSkeletalMeshesToFollowLeader(bool InFollowLeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CaptureCharacter", "SetForceAllSkeletalMeshesToFollowLeader");

	Params::CaptureCharacter_SetForceAllSkeletalMeshesToFollowLeader Parms{};

	Parms.InFollowLeader = InFollowLeader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CaptureCharacter.SetRetargetAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UIKRetargeter*                    InRetargetAsset                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACaptureCharacter::SetRetargetAsset(class UIKRetargeter* InRetargetAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CaptureCharacter", "SetRetargetAsset");

	Params::CaptureCharacter_SetRetargetAsset Parms{};

	Parms.InRetargetAsset = InRetargetAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CaptureCharacter.SetSourcePerformer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACapturePerformer*                InPerformer                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACaptureCharacter::SetSourcePerformer(class ACapturePerformer* InPerformer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CaptureCharacter", "SetSourcePerformer");

	Params::CaptureCharacter_SetSourcePerformer Parms{};

	Parms.InPerformer = InPerformer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CapturePerformer.GetEvaluateLiveLinkData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACapturePerformer::GetEvaluateLiveLinkData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePerformer", "GetEvaluateLiveLinkData");

	Params::CapturePerformer_GetEvaluateLiveLinkData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PerformanceCaptureCore.CapturePerformer.SetEvaluateLiveLinkData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEvaluateLinkLink                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACapturePerformer::SetEvaluateLiveLinkData(bool bEvaluateLinkLink)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePerformer", "SetEvaluateLiveLinkData");

	Params::CapturePerformer_SetEvaluateLiveLinkData Parms{};

	Parms.bEvaluateLinkLink = bEvaluateLinkLink;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CapturePerformer.SetLiveLinkSubject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLiveLinkSubjectName&      Subject                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACapturePerformer::SetLiveLinkSubject(const struct FLiveLinkSubjectName& Subject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePerformer", "SetLiveLinkSubject");

	Params::CapturePerformer_SetLiveLinkSubject Parms{};

	Parms.Subject = std::move(Subject);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CapturePerformer.SetMocapMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    MocapMesh                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACapturePerformer::SetMocapMesh(class USkeletalMesh* MocapMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePerformer", "SetMocapMesh");

	Params::CapturePerformer_SetMocapMesh Parms{};

	Parms.MocapMesh = MocapMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.CapturePerformer.GetLiveLinkSubject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLiveLinkSubjectName             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLiveLinkSubjectName ACapturePerformer::GetLiveLinkSubject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CapturePerformer", "GetLiveLinkSubject");

	Params::CapturePerformer_GetLiveLinkSubject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PerformanceCaptureCore.PerformerComponent.GetEvaluateLiveLinkData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPerformerComponent::GetEvaluateLiveLinkData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerformerComponent", "GetEvaluateLiveLinkData");

	Params::PerformerComponent_GetEvaluateLiveLinkData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PerformanceCaptureCore.PerformerComponent.SetEvaluateLiveLinkData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEvaluateLinkLink                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerformerComponent::SetEvaluateLiveLinkData(bool bEvaluateLinkLink)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerformerComponent", "SetEvaluateLiveLinkData");

	Params::PerformerComponent_SetEvaluateLiveLinkData Parms{};

	Parms.bEvaluateLinkLink = bEvaluateLinkLink;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.PerformerComponent.SetLiveLinkSubject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FLiveLinkSubjectName&      Subject                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPerformerComponent::SetLiveLinkSubject(const struct FLiveLinkSubjectName& Subject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerformerComponent", "SetLiveLinkSubject");

	Params::PerformerComponent_SetLiveLinkSubject Parms{};

	Parms.Subject = std::move(Subject);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.PerformerComponent.GetLiveLinkSubject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLiveLinkSubjectName             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLiveLinkSubjectName UPerformerComponent::GetLiveLinkSubject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PerformerComponent", "GetLiveLinkSubject");

	Params::PerformerComponent_GetLiveLinkSubject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PerformanceCaptureCore.RetargetComponent.GetCustomRetargetProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRetargetProfile                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRetargetProfile URetargetComponent::GetCustomRetargetProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RetargetComponent", "GetCustomRetargetProfile");

	Params::RetargetComponent_GetCustomRetargetProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PerformanceCaptureCore.RetargetComponent.SetControlledMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InControlledMesh                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URetargetComponent::SetControlledMesh(class USkeletalMeshComponent* InControlledMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RetargetComponent", "SetControlledMesh");

	Params::RetargetComponent_SetControlledMesh Parms{};

	Parms.InControlledMesh = InControlledMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.RetargetComponent.SetCustomRetargetProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FRetargetProfile&          InProfile                                              (Parm, NativeAccessSpecifierPublic)

void URetargetComponent::SetCustomRetargetProfile(const struct FRetargetProfile& InProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RetargetComponent", "SetCustomRetargetProfile");

	Params::RetargetComponent_SetCustomRetargetProfile Parms{};

	Parms.InProfile = std::move(InProfile);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.RetargetComponent.SetRetargetAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UIKRetargeter*                    InRetargetAsset                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URetargetComponent::SetRetargetAsset(class UIKRetargeter* InRetargetAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RetargetComponent", "SetRetargetAsset");

	Params::RetargetComponent_SetRetargetAsset Parms{};

	Parms.InRetargetAsset = InRetargetAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PerformanceCaptureCore.RetargetComponent.SetSourcePerformerMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InPerformerMesh                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URetargetComponent::SetSourcePerformerMesh(class USkeletalMeshComponent* InPerformerMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RetargetComponent", "SetSourcePerformerMesh");

	Params::RetargetComponent_SetSourcePerformerMesh Parms{};

	Parms.InPerformerMesh = InPerformerMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

