#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimCoreUI

#include "Basic.hpp"

#include "PilgrimCoreUI_classes.hpp"
#include "PilgrimCoreUI_parameters.hpp"


namespace SDK
{

// Function PilgrimCoreUI.PilgrimPlayerInfoWidgetBase.HookUpVoiceIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortVoiceChatStatusIcon*         Icon                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateAthena*           Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayerInfoWidgetBase::HookUpVoiceIcon(class UFortVoiceChatStatusIcon* Icon, class AFortPlayerStateAthena* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayerInfoWidgetBase", "HookUpVoiceIcon");

	Params::PilgrimPlayerInfoWidgetBase_HookUpVoiceIcon Parms{};

	Parms.Icon = Icon;
	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimCoreUI.PilgrimPostGameProgressWidget.GetMatchXP
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimPostGameProgressWidget::GetMatchXP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPostGameProgressWidget", "GetMatchXP");

	Params::PilgrimPostGameProgressWidget_GetMatchXP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimCoreUI.PilgrimPostGameProgressWidget.GetTotalXP
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimPostGameProgressWidget::GetTotalXP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPostGameProgressWidget", "GetTotalXP");

	Params::PilgrimPostGameProgressWidget_GetTotalXP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimCoreUI.PilgrimPresetSwitcher.GetSelectedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutSelectedLaneNum                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSelectedIndex                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPresetSwitcher::GetSelectedItems(int32* OutSelectedLaneNum, int32* OutSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPresetSwitcher", "GetSelectedItems");

	Params::PilgrimPresetSwitcher_GetSelectedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSelectedLaneNum != nullptr)
		*OutSelectedLaneNum = Parms.OutSelectedLaneNum;

	if (OutSelectedIndex != nullptr)
		*OutSelectedIndex = Parms.OutSelectedIndex;
}


// Function PilgrimCoreUI.PilgrimPresetSwitcher.InitializeForLanes
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   NewNumLanes                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UFortInputMappingContext*>&InputMappingContexts                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimPresetSwitcher::InitializeForLanes(int32 NewNumLanes, const TArray<class UFortInputMappingContext*>& InputMappingContexts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPresetSwitcher", "InitializeForLanes");

	Params::PilgrimPresetSwitcher_InitializeForLanes Parms{};

	Parms.NewNumLanes = NewNumLanes;
	Parms.InputMappingContexts = std::move(InputMappingContexts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimCoreUI.PilgrimSongFilterVM.Initialize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                InOwningController                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InSortTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InFilterTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimSongFilterVM::Initialize(class APlayerController* InOwningController, const struct FGameplayTagContainer& InSortTags, const struct FGameplayTagContainer& InFilterTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimSongFilterVM", "Initialize");

	Params::PilgrimSongFilterVM_Initialize Parms{};

	Parms.InOwningController = InOwningController;
	Parms.InSortTags = std::move(InSortTags);
	Parms.InFilterTags = std::move(InFilterTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

