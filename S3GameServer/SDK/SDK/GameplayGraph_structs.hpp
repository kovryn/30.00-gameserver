#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayGraph

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum GameplayGraph.EGraphElementType
// NumValues: 0x0005
enum class EGraphElementType : uint32
{
	Node                                     = 0,
	Edge                                     = 1,
	Island                                   = 2,
	Unknown                                  = 3,
	EGraphElementType_MAX                    = 4,
};

// Enum GameplayGraph.EGraphIslandOperations
// NumValues: 0x0007
enum class EGraphIslandOperations : uint32
{
	None                                     = 0,
	Add                                      = 1,
	Split                                    = 2,
	Merge                                    = 4,
	Destroy                                  = 8,
	All                                      = 15,
	EGraphIslandOperations_MAX               = 16,
};

// Enum GameplayGraph.EGraphIslandConnectivityChange
// NumValues: 0x0005
enum class EGraphIslandConnectivityChange : uint32
{
	VertexAdd                                = 0,
	SplitFrom                                = 1,
	SplitTo                                  = 2,
	Other                                    = 3,
	EGraphIslandConnectivityChange_MAX       = 4,
};

// ScriptStruct GameplayGraph.GraphProperties
// 0x0001 (0x0001 - 0x0000)
struct FGraphProperties final
{
public:
	bool                                          bGenerateIslands;                                  // 0x0000(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct GameplayGraph.GraphUniqueIndex
// 0x0014 (0x0014 - 0x0000)
struct FGraphUniqueIndex final
{
public:
	struct FGuid                                  UniqueIndex;                                       // 0x0000(0x0010)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsTemporary;                                      // 0x0010(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct GameplayGraph.GraphHandle
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGraphHandle
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGraphUniqueIndex                      UniqueIndex;                                       // 0x0008(0x0014)(SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGraph>                  WeakGraph;                                         // 0x001C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct GameplayGraph.GraphVertexHandle
// 0x0000 (0x0028 - 0x0028)
struct FGraphVertexHandle final : public FGraphHandle
{
};

// ScriptStruct GameplayGraph.SerializedEdgeData
// 0x0050 (0x0050 - 0x0000)
struct FSerializedEdgeData final
{
public:
	struct FGraphVertexHandle                     Node1;                                             // 0x0000(0x0028)(SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGraphVertexHandle                     Node2;                                             // 0x0028(0x0028)(SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct GameplayGraph.SerializedIslandData
// 0x0010 (0x0010 - 0x0000)
struct FSerializedIslandData final
{
public:
	TArray<struct FGraphVertexHandle>             Vertices;                                          // 0x0000(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct GameplayGraph.GraphIslandHandle
// 0x0000 (0x0028 - 0x0028)
struct FGraphIslandHandle final : public FGraphHandle
{
};

// ScriptStruct GameplayGraph.SerializableGraph
// 0x0078 (0x0078 - 0x0000)
struct FSerializableGraph
{
public:
	struct FGraphProperties                       Properties;                                        // 0x0000(0x0001)(SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGraphVertexHandle>             Vertices;                                          // 0x0008(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FSerializedEdgeData>            Edges;                                             // 0x0018(0x0010)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TMap<struct FGraphIslandHandle, struct FSerializedIslandData> Islands;                           // 0x0028(0x0050)(SaveGame, NativeAccessSpecifierPublic)
};

}

