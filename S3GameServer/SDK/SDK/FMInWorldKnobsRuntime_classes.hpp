#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMInWorldKnobsRuntime

#include "Basic.hpp"

#include "FMDeviceCablesRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FMInWorldKnobsRuntime_structs.hpp"
#include "FabricRuntime_structs.hpp"
#include "FabricRuntime_classes.hpp"


namespace SDK
{

// Class FMInWorldKnobsRuntime.FabricChildActorTickSubsystem
// 0x0018 (0x00E8 - 0x00D0)
class UFabricChildActorTickSubsystem final : public UFortManagedTickSubsystem
{
public:
	uint8                                         Pad_D0[0x8];                                       // 0x00D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TWeakObjectPtr<class UFabricChildActorComponent>> ChildActorComponentsPendingSpawn;       // 0x00D8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricChildActorTickSubsystem">();
	}
	static class UFabricChildActorTickSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricChildActorTickSubsystem>();
	}
};

// Class FMInWorldKnobsRuntime.FabricChildActorComponent
// 0x0080 (0x02F0 - 0x0270)
class UFabricChildActorComponent : public UChildActorComponent
{
public:
	uint8                                         Pad_270[0x10];                                     // 0x0270(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMDeviceCableModulatorPortComponent*   InWorldKnobModulatorPort;                          // 0x0280(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseScreenGrid;                                    // 0x0288(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ScreenGridPosition;                                // 0x0290(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FModulatorPortSaveData                 ModulatorPortSaveData;                             // 0x02A0(0x0020)(Edit, DisableEditOnTemplate, SaveGame, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x20];                                     // 0x02C0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     CableManagerClassForModulatorPorts;                // 0x02E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFMDeviceCableModulatorPortComponent* CreateModulatorPortIfNeeded();
	void OnModulatorPortConnected(class UFMDeviceCablePortComponent* ConnectedPort);
	void OnModulatorPortDisconnected(class UFMDeviceCablePortComponent* DisconnectedPort);

	class AFabricButtonBase* GetChildActorAsFabricButton() const;
	TScriptInterface<class IFabricInteractable> GetChildActorAsFabricInteractable() const;
	class AFMInWorldKnobActorBase* GetChildActorAsInWorldKnobActorBase() const;
	class FString GetKnobOptionKey() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricChildActorComponent">();
	}
	static class UFabricChildActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricChildActorComponent>();
	}
};

// Class FMInWorldKnobsRuntime.FabricScreenComponent
// 0x00A0 (0x02C0 - 0x0220)
class UFabricScreenComponent final : public USceneComponent
{
public:
	TMulticastInlineDelegate<void()>              OnWidgetCreated;                                   // 0x0220(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UFabricWidget* FabricWidget)> OnWidgetAdded;                 // 0x0230(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_240[0x18];                                     // 0x0240(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UFabricScreenWidget>     ScreenWidget;                                      // 0x0258(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UWidgetComponent>        ScreenWidgetComponent;                             // 0x0260(0x0008)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UFMInWorldKnobActorCopyComponent*, struct FScreenWidgetLayoutInfo> CopyComponentsToWidget; // 0x0268(0x0050)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Initialize(class UWidgetComponent* InScreenWidgetComponent, int32 InWidth, int32 InHeight, class UFabricScreenLayoutDataAsset* ScreenLayout);
	void OnCopiedKnobActorSet(class UFMInWorldKnobActorCopyComponent* CopyComponent, class AFMInWorldKnobActorBase* NewKnobActor);
	void SetScreenSize(int32 InWidth, int32 InHeight);

	struct FVector ConvertGridPositionToUnrealLocation(const struct FVector2D& GridPosition) const;
	struct FVector2D ConvertUnrealLocationToGridPosition(const struct FVector& UnrealPosition) const;
	int32 GetScreenGridHeight() const;
	int32 GetScreenGridWidth() const;
	struct FVector SnapUnrealLocationToScreenGrid(const struct FVector& UnrealPosition) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricScreenComponent">();
	}
	static class UFabricScreenComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricScreenComponent>();
	}
};

// Class FMInWorldKnobsRuntime.FabricScreenLayoutDataAsset
// 0x0018 (0x0048 - 0x0030)
class UFabricScreenLayoutDataAsset final : public UDataAsset
{
public:
	TArray<struct FFabricScreenLayout>            Layout;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UFabricScreenWidget>        FabricScreenWidgetClass;                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricScreenLayoutDataAsset">();
	}
	static class UFabricScreenLayoutDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricScreenLayoutDataAsset>();
	}
};

// Class FMInWorldKnobsRuntime.FabricUserOptionPresetAsset
// 0x0010 (0x0040 - 0x0030)
class UFabricUserOptionPresetAsset final : public UDataAsset
{
public:
	struct FFabricUserOptionPresetCollection      UserOptionPreset;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricUserOptionPresetAsset">();
	}
	static class UFabricUserOptionPresetAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricUserOptionPresetAsset>();
	}
};

// Class FMInWorldKnobsRuntime.FabricUserOptionSaveModulatable
// 0x0030 (0x0358 - 0x0328)
class UFabricUserOptionSaveModulatable final : public UFabricModulatable
{
public:
	uint8                                         Pad_328[0x30];                                     // 0x0328(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricUserOptionSaveModulatable">();
	}
	static class UFabricUserOptionSaveModulatable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricUserOptionSaveModulatable>();
	}
};

// Class FMInWorldKnobsRuntime.FabricUserOptionSaveComponent
// 0x0168 (0x0208 - 0x00A0)
class UFabricUserOptionSaveComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         UserOptionsToSave;                                 // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxSaveSlots;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SaveIndexParam;                                    // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFabricUserOptionPresetAsset*>   PresetAssets;                                      // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FString                                 PresetIndexParam;                                  // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ApplyIndexImmediatelyToggleParam;                  // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnActiveOverridesChanged;                          // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ABuildingActor*                         Owner;                                             // 0x0110(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFabricUserOptionSaveModulatable*       UserOptionSaveModulatable;                         // 0x0118(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFabricUserOptionSaveData>      Presets;                                           // 0x0128(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFabricUserOptionSaveData>      Saves;                                             // 0x0138(0x0010)(ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	TSet<class FString>                           FloatUserOptions;                                  // 0x0148(0x0050)(Protected, NativeAccessSpecifierProtected)
	int32                                         ActiveSaveIndex;                                   // 0x0198(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ActivePresetIndex;                                 // 0x019C(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A0[0x68];                                     // 0x01A0(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsApplyingOverrides();
	void OnAnyOptionUpdated();
	void SetMusicClock(class UMusicClockComponent* MusicClockComponent);
	void SetPreset(int32 PresetIndex);
	void SetSaveSlot(int32 SaveSlotIndex);

	class FString GetOverrideForParam(const class FString& Param) const;
	bool HasOverrideForParam(const class FString& Param) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricUserOptionSaveComponent">();
	}
	static class UFabricUserOptionSaveComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricUserOptionSaveComponent>();
	}
};

// Class FMInWorldKnobsRuntime.FMInWorldCableOptionsComponent
// 0x0080 (0x0120 - 0x00A0)
class UFMInWorldCableOptionsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x80];                                      // 0x00A0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAnyOptionChanged();
	void OnCableConnected(class UFMDeviceCablePortComponent* SourcePort, class UFMDeviceCablePortComponent* ConnectedPort);
	void OnCableDisconncted(class UFMDeviceCablePortComponent* SourcePort, class UFMDeviceCablePortComponent* DisconnectedPort);
	void OnOptionsLoaded();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMInWorldCableOptionsComponent">();
	}
	static class UFMInWorldCableOptionsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMInWorldCableOptionsComponent>();
	}
};

// Class FMInWorldKnobsRuntime.FMInWorldKnobActorBase
// 0x01A0 (0x0430 - 0x0290)
class AFMInWorldKnobActorBase final : public AActor
{
public:
	uint8                                         Pad_290[0x20];                                     // 0x0290(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& Value, class UObject* ModulatorObject)> OnModulatedPropertyValueChanged; // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Value, class UPlaylistUserOptionBase* Option)> OnKnobRuntimeValueChanged; // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Value, class UPlaylistUserOptionBase* Option, class APlayerController* PlayerController)> OnKnobSerializedValueChanged; // 0x02D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bConnected, class UObject* ModulatorObject)> OnFloatProviderConnectionChanged; // 0x02E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 OptionKey;                                         // 0x02F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   OverriddenTitle;                                   // 0x0300(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                   OverriddenDescription;                             // 0x0310(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                          bCanBeModulated;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bKnobEnabled;                                      // 0x0321(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bKnobDisplayOnly;                                  // 0x0322(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_323[0x5];                                      // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        ModulatorPortParent;                               // 0x0328(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFMDeviceCableModulatorPortComponent*   ModulatorPort;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0338(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaylistUserOptionBase*                MyUserOption;                                      // 0x0360(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TWeakObjectPtr<class UFabricFloatProviderBase>> CurrentFloatProviders;                    // 0x0370(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x50];                                     // 0x0380(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        HitComponent;                                      // 0x03D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class APlayerController>       InteractingController;                             // 0x03D8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFabricInteractableType                       InteractableType;                                  // 0x03E0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UFabricInteractableViewModel> WidgetViewModel;                              // 0x03E4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           OverrideLabels;                                    // 0x03F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPrivate)
	TArray<class FText>                           OptionLabels;                                      // 0x0400(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPrivate)
	TArray<class FString>                         OptionValues;                                      // 0x0410(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPrivate)
	int32                                         SerializedOptionIndex;                             // 0x0420(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CurrentOptionIndex;                                // 0x0424(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ClampedKnobValue;                                  // 0x0428(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTrackingInput;                                    // 0x042C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsVisibilityBound;                                // 0x042D(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_42E[0x2];                                      // 0x042E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CopyAttributesFromOtherKnob(class AFMInWorldKnobActorBase* OtherKnob);
	void CopyAttributesFromOtherKnobInternal(class AFMInWorldKnobActorBase* OtherKnob);
	void EnsureProperCollision();
	class FText GetCurrentValueLabel();
	void HitComponentUpdated(class USceneComponent* NewHitComponent);
	void KnobValueChanged(int32 NewIndex, bool SnapToSelection, class APlayerController* PlayerController);
	void OnFloatProviderEnabledChanged(bool bEnabled, class UFabricFloatProviderBase* FloatProvider);
	void OnFloatProviderFloatUpdated(float NewFloat, class UFabricFloatProviderBase* FloatProvider);
	void OnKnobIsVisible(bool bInIsVisible);
	void OnReceiveFloatProvidersFromPort(const TArray<class UFabricFloatProviderBase*>& FloatProvider);
	void RecalculateModulation();
	void ReceiveOnWidgetViewModelSet();
	void ResetToDefaultValue(class APlayerController* PlayerController);
	void SetCurrentKnobPosition(float KnobPosition);
	void SetKnobDisplayOnly(bool bDisplayOnly);
	void SetKnobEnabled(bool bEnabled);
	void SetNumberOptions(int32 NumberOptions);
	void SetOverrideOptionLabels(const TArray<class FText>& Labels);
	void SetSelectedIndex(int32 Index_0, bool SnapToSelection);
	void SetTitle(const class FText& Title);
	void SetWidgetViewModel(class UFabricInteractableViewModel* ViewModel);
	void StartTrackingInput(class APlayerController* PlayerController);
	void StopTrackingInput();
	void UpdateDisplayOnlyVisuals(bool bDisplayOnly);
	void UpdateEnabledVisuals(bool bEnabled);
	void UpdateFocusVisuals(bool bFocused);
	void UpdateInteractableVisuals(bool bInteractable);

	bool GetConsumeInteractionFromChildInteractable(class APlayerController* PlayerController) const;
	class UClass* GetCopyClassInternal() const;
	TSubclassOf<class UUserWidget> GetCopyWidgetClassInternal() const;
	int32 GetCurrentOptionIndex() const;
	bool GetCurrentValueAsBool() const;
	uint8 GetCurrentValueAsEnum() const;
	float GetCurrentValueAsFloat() const;
	int32 GetCurrentValueAsInt() const;
	class FName GetCurrentValueAsName() const;
	class FString GetCurrentValueAsString() const;
	class USceneComponent* GetHitComponent() const;
	class APlayerController* GetInteractingController() const;
	int32 GetNumberOptions() const;
	class UFabricInteractableViewModel* GetWidgetViewModel() const;
	bool HasActiveContinuousFloatProvider() const;
	bool HasActiveFloatProvider() const;
	bool HasEnabledFloatProvider() const;
	bool IsOverriddenByPort() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMInWorldKnobActorBase">();
	}
	static class AFMInWorldKnobActorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFMInWorldKnobActorBase>();
	}
};

// Class FMInWorldKnobsRuntime.FMInWorldKnobActorCopyComponent
// 0x0110 (0x0400 - 0x02F0)
class UFMInWorldKnobActorCopyComponent final : public UFabricChildActorComponent
{
public:
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& Value, class UObject* ModulatorObject)> OnModulatedPropertyValueChanged; // 0x0300(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Value, class UPlaylistUserOptionBase* Option)> OnKnobRuntimeValueChanged; // 0x0310(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Value, class UPlaylistUserOptionBase* Option, class APlayerController* PlayerController)> OnKnobSerializedValueChanged; // 0x0320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bConnected, class UObject* ModulatorObject)> OnFloatProviderConnectionChanged; // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UFMInWorldKnobActorCopyComponent* CopyComponent, class AFMInWorldKnobActorBase* NewKnobActor)> OnKnobActorSet; // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class AFMInWorldKnobActorBase>    DefaultKnobActorClass;                             // 0x0350(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFMInWorldKnobActorBase*                InWorldKnobActor;                                  // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 OptionKey;                                         // 0x0360(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   OverriddenTitle;                                   // 0x0370(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                          bCanBeModulated;                                   // 0x0380(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bKnobEnabled;                                      // 0x0381(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaylistUserOptionBase*                OuterUserOption;                                   // 0x0388(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_390[0x30];                                     // 0x0390(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaylistUserOptionBase*                CopiedUserOption;                                  // 0x03C0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C8[0x38];                                     // 0x03C8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearCopiedInWorldKnob();
	void OnInWorldKnobFloatProviderConnectionChanged(bool bConnected, class UObject* ModulatorObject);
	void OnInWorldKnobModulatedPropertyValueChanged(const class FString& Value, class UObject* ModulatorObject);
	void OnInWorldKnobRuntimeValueChanged(const class FString& Value, class UPlaylistUserOptionBase* Option);
	void OnInWorldKnobSerializedValueChanged(const class FString& Value, class UPlaylistUserOptionBase* Option, class APlayerController* PlayerController);
	void SetCopiedInWorldKnob(class UObject* InWorldKnobObject);

	class FString GetCurrentKnobValueBP() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMInWorldKnobActorCopyComponent">();
	}
	static class UFMInWorldKnobActorCopyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMInWorldKnobActorCopyComponent>();
	}
};

// Class FMInWorldKnobsRuntime.InWorldKnobInterface
// 0x0000 (0x0000 - 0x0000)
class IInWorldKnobInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InWorldKnobInterface">();
	}
	static class IInWorldKnobInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IInWorldKnobInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FMInWorldKnobsRuntime.FMInWorldKnobOptionsComponent
// 0x0208 (0x02A8 - 0x00A0)
class UFMInWorldKnobOptionsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnInitialKnobValuesLoaded;                         // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAllKnobsLoaded;                                  // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAnyKnobRuntimeValueChanged;                      // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAnyKnobSerializedValueChanged;                   // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSet<class UObject*>                          InWorldKnobInterfaceObjects;                       // 0x00E8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                        ReplicatedInWorldKnobInterfaceObjects;             // 0x0138(0x0010)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                        ReplicatedFabricInteractableObjects;               // 0x0148(0x0010)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UFMDeviceCableModulatorPortComponent*> ReplicatedModulatorPorts;                    // 0x0158(0x0010)(ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class ABuildingActor*                         BuildingActorOwner;                                // 0x0168(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                 OwnerClass;                                        // 0x0170(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFabricUserOptionSaveComponent*         SaveComponent;                                     // 0x0178(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, class UPlaylistUserOptionBase*> PropertiesEditedByUserOptions;               // 0x0180(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FString, class UObject*>           OptionKeyToInWorldKnobObject;                      // 0x01D0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FString, class UFMDeviceCableModulatorPortComponent*> OptionKeyToModulatorPort;       // 0x0220(0x0050)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UFabricModulatable*>             PendingFabricModulatables;                         // 0x0270(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FTimerHandle                           ActorSaveRequestTimer;                             // 0x0280(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_288[0x20];                                     // 0x0288(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ActorHasValidControllerBP(class AActor* Actor, class AFortPlayerPawn** OutFortPlayerPawn, class APlayerController** OutPlayerController);
	void OnAnyOptionUpdated();
	void OnInWorldKnobRuntimeOptionChanged(const class FString& Value, class UPlaylistUserOptionBase* Option);
	void OnInWorldKnobSerializedOptionChanged(const class FString& Value, class UPlaylistUserOptionBase* Option, class APlayerController* PlayerController);
	void OnOptionsLoaded();
	void OnRep_ReplicatedFabricInteractableObjects();
	void OnRep_ReplicatedInWorldKnobInterfaceObjects();
	void OnRep_ReplicatedModulatorPorts();
	void OnSaveOverridesChanged();

	bool AreAllKnobsLoadedForNotify() const;
	bool CanMakeUserOptionChanges() const;
	bool OwnsInWorldKnobObject(class UObject* InWorldKnobObject) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMInWorldKnobOptionsComponent">();
	}
	static class UFMInWorldKnobOptionsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMInWorldKnobOptionsComponent>();
	}
};

// Class FMInWorldKnobsRuntime.PlaylistUserOptionFMOutgoingCableConnection
// 0x0030 (0x01E8 - 0x01B8)
class UPlaylistUserOptionFMOutgoingCableConnection final : public UPlaylistUserOptionBase
{
public:
	struct FFMOutgoingCableConnection             DefaultValue;                                      // 0x01B8(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaylistUserOptionFMOutgoingCableConnection">();
	}
	static class UPlaylistUserOptionFMOutgoingCableConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaylistUserOptionFMOutgoingCableConnection>();
	}
};

}

