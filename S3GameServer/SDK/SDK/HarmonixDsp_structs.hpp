#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixDsp

#include "Basic.hpp"


namespace SDK
{

// Enum HarmonixDsp.EFusionPatchAudioLoadResult
// NumValues: 0x0004
enum class EFusionPatchAudioLoadResult : uint8
{
	Success                                  = 0,
	Fail                                     = 1,
	Cancelled                                = 2,
	EFusionPatchAudioLoadResult_MAX          = 3,
};

// Enum HarmonixDsp.EAdsrTarget
// NumValues: 0x0005
enum class EAdsrTarget : uint8
{
	Volume                                   = 0,
	FilterFreq                               = 1,
	Num                                      = 2,
	Invalid                                  = 3,
	EAdsrTarget_MAX                          = 4,
};

// Enum HarmonixDsp.ESpeakerChannelAssignment
// NumValues: 0x0016
enum class ESpeakerChannelAssignment : uint8
{
	LeftFront                                = 0,
	RightFront                               = 1,
	Center                                   = 2,
	LFE                                      = 3,
	LeftSurround                             = 4,
	RightSurround                            = 5,
	LeftRear                                 = 6,
	RightRear                                = 7,
	FrontPair                                = 8,
	CenterAndLFE                             = 9,
	SurroundPair                             = 10,
	RearPair                                 = 11,
	AmbisonicW                               = 12,
	AmbisonicX                               = 13,
	AmbisonicY                               = 14,
	AmbisonicZ                               = 15,
	AmbisonicWXPair                          = 16,
	AmbisonicYZPair                          = 17,
	UnspecifiedMono                          = 18,
	Num                                      = 19,
	Invalid                                  = 20,
	ESpeakerChannelAssignment_MAX            = 21,
};

// Enum HarmonixDsp.EBiquadFilterType
// NumValues: 0x0009
enum class EBiquadFilterType : uint32
{
	LowPass                                  = 0,
	HighPass                                 = 1,
	BandPass                                 = 2,
	Peaking                                  = 3,
	LowShelf                                 = 4,
	HighShelf                                = 5,
	Num                                      = 6,
	None                                     = 7,
	EBiquadFilterType_MAX                    = 8,
};

// Enum HarmonixDsp.EDelayStereoType
// NumValues: 0x0007
enum class EDelayStereoType : uint8
{
	Default                                  = 0,
	CustomSpread                             = 1,
	PingPongForceLR                          = 2,
	PingPongSum                              = 3,
	PingPongIndividual                       = 4,
	Num                                      = 5,
	EDelayStereoType_MAX                     = 6,
};

// Enum HarmonixDsp.EDelayFilterType
// NumValues: 0x0005
enum class EDelayFilterType : uint8
{
	LowPass                                  = 0,
	HighPass                                 = 1,
	BandPass                                 = 2,
	Num                                      = 3,
	EDelayFilterType_MAX                     = 4,
};

// Enum HarmonixDsp.EDistortionTypeV1
// NumValues: 0x0007
enum class EDistortionTypeV1 : uint32
{
	Clean                                    = 0,
	Warm                                     = 1,
	Dirty                                    = 2,
	Soft                                     = 3,
	Asymmetric                               = 4,
	Num                                      = 5,
	EDistortionTypeV1_MAX                    = 6,
};

// Enum HarmonixDsp.EDistortionTypeV2
// NumValues: 0x000A
enum class EDistortionTypeV2 : uint32
{
	Clean                                    = 0,
	Warm                                     = 1,
	Clip                                     = 2,
	Soft                                     = 3,
	Asymmetric                               = 4,
	Cruncher                                 = 5,
	CaptCrunch                               = 6,
	Rectifier                                = 7,
	Num                                      = 8,
	EDistortionTypeV2_MAX                    = 9,
};

// Enum HarmonixDsp.EKeyzoneSelectMode
// NumValues: 0x0007
enum class EKeyzoneSelectMode : uint8
{
	Layers                                   = 0,
	Random                                   = 1,
	RandomWithRepetition                     = 2,
	Cycle                                    = 3,
	Num                                      = 4,
	Invalid                                  = 5,
	EKeyzoneSelectMode_MAX                   = 6,
};

// Enum HarmonixDsp.EWaveShape
// NumValues: 0x0009
enum class EWaveShape : uint8
{
	Sine                                     = 0,
	Square                                   = 1,
	SawUp                                    = 2,
	SawDown                                  = 3,
	Triangle                                 = 4,
	Random                                   = 5,
	Num                                      = 6,
	None                                     = 7,
	EWaveShape_MAX                           = 8,
};

// Enum HarmonixDsp.ELfoTarget
// NumValues: 0x0006
enum class ELfoTarget : uint8
{
	Pan                                      = 0,
	Pitch                                    = 1,
	FilterFreq                               = 2,
	Num                                      = 3,
	None                                     = 4,
	ELfoTarget_MAX                           = 5,
};

// Enum HarmonixDsp.EModulatorTarget
// NumValues: 0x0005
enum class EModulatorTarget : uint8
{
	StartPoint                               = 0,
	Pitch                                    = 1,
	Num                                      = 2,
	None                                     = 3,
	EModulatorTarget_MAX                     = 4,
};

// Enum HarmonixDsp.EPannerMode
// NumValues: 0x0008
enum class EPannerMode : uint8
{
	LegacyStereo                             = 0,
	Stereo                                   = 1,
	Surround                                 = 2,
	PolarSurround                            = 3,
	DirectAssignment                         = 4,
	Num                                      = 5,
	Invalid                                  = 6,
	EPannerMode_MAX                          = 7,
};

// Enum HarmonixDsp.EPortamentoMode
// NumValues: 0x0005
enum class EPortamentoMode : uint8
{
	Legato                                   = 0,
	Persistent                               = 1,
	Num                                      = 2,
	None                                     = 3,
	EPortamentoMode_MAX                      = 4,
};

// Enum HarmonixDsp.ETimeSyncOption
// NumValues: 0x0005
enum class ETimeSyncOption : uint8
{
	None                                     = 0,
	TempoSync                                = 1,
	SpeedScale                               = 2,
	Num                                      = 3,
	ETimeSyncOption_MAX                      = 4,
};

// Enum HarmonixDsp.EParameterType
// NumValues: 0x0010
enum class EParameterType : uint8
{
	Bool                                     = 0,
	Double                                   = 1,
	Float                                    = 2,
	Int8                                     = 3,
	Int16                                    = 4,
	Int32                                    = 5,
	Int64                                    = 6,
	Name                                     = 7,
	String                                   = 8,
	UInt8                                    = 9,
	UInt16                                   = 10,
	UInt32                                   = 11,
	UInt64                                   = 12,
	Num                                      = 13,
	Invalid                                  = 14,
	EParameterType_MAX                       = 15,
};

// Enum HarmonixDsp.EVocoderBandConfig
// NumValues: 0x000A
enum class EVocoderBandConfig : uint8
{
	k4                                       = 0,
	k8                                       = 1,
	k16                                      = 2,
	k32                                      = 3,
	k64                                      = 4,
	k128                                     = 5,
	k256                                     = 6,
	Num                                      = 7,
	None                                     = 8,
	EVocoderBandConfig_MAX                   = 9,
};

// ScriptStruct HarmonixDsp.BitCrusherSettings
// 0x0014 (0x0014 - 0x0000)
struct FBitCrusherSettings final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputGain;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutputGain;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WetGain;                                           // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Crush;                                             // 0x0010(0x0002)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        SampleHoldFactor;                                  // 0x0012(0x0002)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.PitchShifterNameRedirect
// 0x0008 (0x0008 - 0x0000)
struct FPitchShifterNameRedirect final
{
public:
	class FName                                   OldName;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NewName;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.HarmonixFFTAnalyzerResults
// 0x0010 (0x0010 - 0x0000)
struct FHarmonixFFTAnalyzerResults final
{
public:
	TArray<float>                                 Spectrum;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.AdsrSettings
// 0x0120 (0x0120 - 0x0000)
struct FAdsrSettings final
{
public:
	EAdsrTarget                                   Target;                                            // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnabled;                                         // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackTime;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecayTime;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SustainLevel;                                      // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseTime;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Depth;                                             // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttackCurve;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecayCurve;                                        // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseCurve;                                      // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xFC];                                      // 0x0024(0x00FC)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixDsp.AdsrSettingsArray
// 0x0240 (0x0240 - 0x0000)
struct FAdsrSettingsArray final
{
public:
	struct FAdsrSettings                          Array[0x2];                                        // 0x0000(0x0120)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.BiquadFilterSettings
// 0x0018 (0x0018 - 0x0000)
struct FBiquadFilterSettings final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EBiquadFilterType                             Type;                                              // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x4];                                        // 0x0008(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Freq;                                              // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Q;                                                 // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesignedDBGain;                                    // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.DelaySettings
// 0x003C (0x003C - 0x0000)
struct FDelaySettings final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimeSyncOption                               TimeSyncOption;                                    // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSeconds;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tempo;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DryGain;                                           // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WetGain;                                           // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FeedbackGain;                                      // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EQEnabled;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelayFilterType                              EQType;                                            // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EQFreq;                                            // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EQQ;                                               // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          LfoEnabled;                                        // 0x0024(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETimeSyncOption                               LfoTimeSyncOption;                                 // 0x0025(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LfoRate;                                           // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LfoDepth;                                          // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelayStereoType                              StereoType;                                        // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PanLeft;                                           // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PanRight;                                          // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.DistortionFilterSettings
// 0x0020 (0x0020 - 0x0000)
struct FDistortionFilterSettings final
{
public:
	bool                                          FilterPreClip;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBiquadFilterSettings                  Filter;                                            // 0x0004(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         NumPasses;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.DistortionSettingsV1
// 0x0078 (0x0078 - 0x0000)
struct FDistortionSettingsV1 final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputGainDb;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutputGainDb;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DCAdjust;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDistortionTypeV1                             Type;                                              // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Oversample;                                        // 0x0014(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDistortionFilterSettings              Filters[0x3];                                      // 0x0018(0x0020)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.DistortionSettingsV2
// 0x0080 (0x0080 - 0x0000)
struct FDistortionSettingsV2 final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputGainDb;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutputGainDb;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DryGain;                                           // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WetGain;                                           // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DCAdjust;                                          // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDistortionTypeV2                             Type;                                              // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Oversample;                                        // 0x001C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDistortionFilterSettings              Filters[0x3];                                      // 0x0020(0x0020)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.HarmonixAudioAnalyzerOutputSettings
// 0x0010 (0x0010 - 0x0000)
struct FHarmonixAudioAnalyzerOutputSettings final
{
public:
	float                                         RiseMs;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallMs;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDecibels;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RangeDecibels;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.HarmonixFFTAnalyzerSettings
// 0x0024 (0x0024 - 0x0000)
struct FHarmonixFFTAnalyzerSettings final
{
public:
	int32                                         FFTSize;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinFrequencyHz;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxFrequencyHz;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MelScaleBinning;                                   // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumResultBins;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHarmonixAudioAnalyzerOutputSettings   OutputSettings;                                    // 0x0014(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.PannerDetails
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FPannerDetails final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixDsp.PitchShifterName
// 0x0004 (0x0004 - 0x0000)
struct FPitchShifterName final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.TypedParameter
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FTypedParameter final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixDsp.TimeStretchConfig
// 0x0060 (0x0060 - 0x0000)
struct FTimeStretchConfig final
{
public:
	bool                                          bMaintainTime;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPitchShifterName                      PitchShifter;                                      // 0x0004(0x0004)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FTypedParameter>     PitchShifterOptions;                               // 0x0008(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bSyncTempo;                                        // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OriginalTempo;                                     // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.StreamingChannelParams
// 0x0014 (0x0014 - 0x0000)
struct FStreamingChannelParams final
{
public:
	int32                                         StreamIndex;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Gain;                                              // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPannerDetails                         Pan;                                               // 0x0008(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.StreamingChannelParamsArray
// 0x0010 (0x0010 - 0x0000)
struct FStreamingChannelParamsArray final
{
public:
	TArray<struct FStreamingChannelParams>        ChannelParams;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.TrackChannelInfo
// 0x0070 (0x0070 - 0x0000)
struct FTrackChannelInfo final
{
public:
	int32                                         RealTrackIndex;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Routing;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStreamingChannelParams>        Channels;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, struct FStreamingChannelParamsArray> PresetChannels;                           // 0x0020(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.KeyzoneSettings
// 0x00D0 (0x00D0 - 0x0000)
struct FKeyzoneSettings final
{
public:
	class USoundWave*                             SoundWave;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int8                                          RootNote;                                          // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          MinNote;                                           // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          MaxNote;                                           // 0x001A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          MinVelocity;                                       // 0x001B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          MaxVelocity;                                       // 0x001C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         SampleIndex;                                       // 0x001D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Priority;                                          // 0x001E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPannerDetails                         Pan;                                               // 0x0020(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         FineTuneCents;                                     // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Gain;                                              // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnpitched;                                        // 0x0034(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVelocityToGain;                                   // 0x0035(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimeStretchConfig                     TimeStretchConfig;                                 // 0x0038(0x0060)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bIsNoteOffZone;                                    // 0x0098(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomWeight;                                      // 0x009C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SampleStartOffset;                                 // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SampleEndOffset;                                   // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrackChannelInfo>              TrackMap;                                          // 0x00A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          UseSingletonVoicePool;                             // 0x00B8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x17];                                      // 0x00B9(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixDsp.PortamentoSettings
// 0x0008 (0x0008 - 0x0000)
struct FPortamentoSettings final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPortamentoMode                               Mode;                                              // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Seconds;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.LfoSettings
// 0x0018 (0x0018 - 0x0000)
struct FLfoSettings final
{
public:
	ELfoTarget                                    Target;                                            // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsEnabled;                                         // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWaveShape                                    Shape;                                             // 0x0002(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldRetrigger;                                   // 0x0003(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BeatSync;                                          // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Freq;                                              // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Depth;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialPhase;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TempoBPM;                                          // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.ModulatorSettings
// 0x000C (0x000C - 0x0000)
struct FModulatorSettings final
{
public:
	EModulatorTarget                              Target;                                            // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Range;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Depth;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.LfoSettingsArray
// 0x0030 (0x0030 - 0x0000)
struct FLfoSettingsArray final
{
public:
	struct FLfoSettings                           Array[0x2];                                        // 0x0000(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.ModulatorSettingsArray
// 0x0018 (0x0018 - 0x0000)
struct FModulatorSettingsArray final
{
public:
	struct FModulatorSettings                     Array[0x2];                                        // 0x0000(0x000C)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.FusionPatchSettings
// 0x0588 (0x0588 - 0x0000)
struct FFusionPatchSettings final
{
public:
	float                                         VolumeDb;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPannerDetails                         PannerDetails;                                     // 0x0004(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DownPitchBendCents;                                // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpPitchBendCents;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FineTuneCents;                                     // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartPointOffsetMs;                                // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxVoices;                                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EKeyzoneSelectMode                            KeyzoneSelectMode;                                 // 0x0024(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPortamentoSettings                    Portamento;                                        // 0x0028(0x0008)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FBiquadFilterSettings                  Filter;                                            // 0x0030(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAdsrSettings                          Adsr[0x2];                                         // 0x0048(0x0120)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLfoSettings                           LFO[0x2];                                          // 0x0288(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FModulatorSettings                     Randomizer[0x2];                                   // 0x02B8(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FModulatorSettings                     VelocityModulator[0x2];                            // 0x02D0(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAdsrSettingsArray                     Adsrs;                                             // 0x02E8(0x0240)(Deprecated, NoDestructor, NativeAccessSpecifierPublic)
	struct FLfoSettingsArray                      Lfos;                                              // 0x0528(0x0030)(Deprecated, NoDestructor, NativeAccessSpecifierPublic)
	struct FModulatorSettingsArray                Randomizers;                                       // 0x0558(0x0018)(Deprecated, NoDestructor, NativeAccessSpecifierPublic)
	struct FModulatorSettingsArray                VelocityModulators;                                // 0x0570(0x0018)(Deprecated, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.FusionPatchData
// 0x05A8 (0x05A8 - 0x0000)
struct FFusionPatchData final
{
public:
	TArray<struct FKeyzoneSettings>               Keyzones;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FFusionPatchSettings                   Settings;                                          // 0x0010(0x0588)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FFusionPatchSettings>           Presets;                                           // 0x0598(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
};

// ScriptStruct HarmonixDsp.FusionVoiceConfig
// 0x0018 (0x0018 - 0x0000)
struct FFusionVoiceConfig final
{
public:
	uint32                                        NumTotalVoices;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        SoftVoiceLimit;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FormantDbCorrectionPerHalfStepUp;                  // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FormantDbCorrectionPerHalfStepDown;                // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FormantDbCorrectionMaxUp;                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FormantDbCorrectionMaxDown;                        // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.StreamingTrackParams
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FStreamingTrackParams final
{
public:
	uint8                                         Pad_0[0x38];                                       // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixDsp.VocoderBandConfig
// 0x000C (0x000C - 0x0000)
struct FVocoderBandConfig final
{
public:
	int32                                         BandCount;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FrequencyRatio;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixDsp.VocoderBand
// 0x0008 (0x0008 - 0x0000)
struct FVocoderBand final
{
public:
	float                                         Gain;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Solo;                                              // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixDsp.VocoderSettings
// 0x0050 (0x0050 - 0x0000)
struct FVocoderSettings final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ModulatorIndex;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChannelCount;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SampleRate;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVocoderBandConfig                            BandConfig;                                        // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Soloing;                                           // 0x0011(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FrameCount;                                        // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CarrierGain;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ModulatorGain;                                     // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CarrierThin;                                       // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ModulatorThin;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Attack;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Release;                                           // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HighEmphasis;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Wet;                                               // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutputGain;                                        // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVocoderBand>                   Bands;                                             // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

}

