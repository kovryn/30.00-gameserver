#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomControlsRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK
{

// Enum CustomControlsRuntime.EPlaceFireMissed
// NumValues: 0x000A
enum class EPlaceFireMissed : uint8
{
	None                                     = 0,
	Left                                     = 1,
	Right                                    = 2,
	Up                                       = 3,
	Down                                     = 4,
	UpLeft                                   = 5,
	UpRight                                  = 6,
	DownLeft                                 = 7,
	DownRight                                = 8,
	EPlaceFireMissed_MAX                     = 9,
};

// Enum CustomControlsRuntime.ECustomControlsFacingMode
// NumValues: 0x0004
enum class ECustomControlsFacingMode : uint8
{
	Movement                                 = 0,
	TwinStick                                = 1,
	Fixed                                    = 2,
	ECustomControlsFacingMode_MAX            = 3,
};

// Enum CustomControlsRuntime.ECustomControlsTwinStickMouseAimMode
// NumValues: 0x0003
enum class ECustomControlsTwinStickMouseAimMode : uint8
{
	TargetCursor                             = 0,
	DialAiming                               = 1,
	ECustomControlsTwinStickMouseAimMode_MAX = 2,
};

// Enum CustomControlsRuntime.ECustomControlsAttackType
// NumValues: 0x0005
enum class ECustomControlsAttackType : uint8
{
	None                                     = 0,
	Ranged                                   = 1,
	Melee                                    = 2,
	Throw                                    = 3,
	ECustomControlsAttackType_MAX            = 4,
};

// Enum CustomControlsRuntime.ECustomControlsTargetingType
// NumValues: 0x0005
enum class ECustomControlsTargetingType : uint8
{
	None                                     = 0,
	Aiming                                   = 1,
	Windup                                   = 2,
	MeleeLockOn                              = 3,
	ECustomControlsTargetingType_MAX         = 4,
};

// Enum CustomControlsRuntime.ECustomControlsWeaponType
// NumValues: 0x0005
enum class ECustomControlsWeaponType : uint8
{
	None                                     = 0,
	Ranged                                   = 1,
	Melee                                    = 2,
	Other                                    = 3,
	ECustomControlsWeaponType_MAX            = 4,
};

// Enum CustomControlsRuntime.ECustomControlsLockOnMode
// NumValues: 0x0006
enum class ECustomControlsLockOnMode : uint8
{
	Never                                    = 0,
	Always                                   = 1,
	Shooting                                 = 2,
	Aiming                                   = 3,
	ShootingOrAiming                         = 4,
	ECustomControlsLockOnMode_MAX            = 5,
};

// ScriptStruct CustomControlsRuntime.InteractionPointOptions
// 0x0010 (0x0010 - 0x0000)
struct FInteractionPointOptions final
{
public:
	EInteractionOrigin                            InteractionOrigin;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractDistance;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InteractHighlightDistance;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InteractExtentRadius;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct CustomControlsRuntime.CustomControlsState
// 0x0004 (0x0004 - 0x0000)
struct FCustomControlsState final
{
public:
	bool                                          bHasFocusTarget;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECustomControlsAttackType                     AttackType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECustomControlsTargetingType                  TargetingType;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECustomControlsWeaponType                     WeaponType;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct CustomControlsRuntime.FortMovementMode_CCThirdPersonCreationData
// 0x0028 (0x0030 - 0x0008)
struct FFortMovementMode_CCThirdPersonCreationData final : public FFortMovementMode_BaseExtCreationData
{
public:
	float                                         SpeedMultiplier;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedMultiplierWhenShooting;                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedMultiplierWhenAiming;                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationRateMultiplier;                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationRateWhenShootingMultiplier;                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationRateWhenAimingMultiplier;                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECustomControlsLockOnMode                     LockOnMode;                                        // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FixedFacingYaw;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TacticalSprintRotationRateYaw;                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkydivingRotationRatePitch;                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

