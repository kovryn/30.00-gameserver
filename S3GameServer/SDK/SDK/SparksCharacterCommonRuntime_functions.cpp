#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCharacterCommonRuntime

#include "Basic.hpp"

#include "SparksCharacterCommonRuntime_classes.hpp"
#include "SparksCharacterCommonRuntime_parameters.hpp"


namespace SDK
{

// Function SparksCharacterCommonRuntime.SparksAnimationSubsystem.GetLoadedSparksAnimations
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class USparksInstrumentAnimations*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USparksInstrumentAnimations* USparksAnimationSubsystem::GetLoadedSparksAnimations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksAnimationSubsystem", "GetLoadedSparksAnimations");

	Params::SparksAnimationSubsystem_GetLoadedSparksAnimations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.BP_OnSetInstrumentPSC
// (Event, Public, BlueprintEvent)
// Parameters:
// class USparksInstrumentAnimPlayerStateComponent*OldInstrumentPSC                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USparksInstrumentAnimPlayerStateComponent*NewInstrumentPSC                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksBaseLayerAnimInstance::BP_OnSetInstrumentPSC(class USparksInstrumentAnimPlayerStateComponent* OldInstrumentPSC, class USparksInstrumentAnimPlayerStateComponent* NewInstrumentPSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksBaseLayerAnimInstance", "BP_OnSetInstrumentPSC");

	Params::SparksBaseLayerAnimInstance_BP_OnSetInstrumentPSC Parms{};

	Parms.OldInstrumentPSC = OldInstrumentPSC;
	Parms.NewInstrumentPSC = NewInstrumentPSC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.SetIsRoaming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsRoaming                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksBaseLayerAnimInstance::SetIsRoaming(bool bInIsRoaming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksBaseLayerAnimInstance", "SetIsRoaming");

	Params::SparksBaseLayerAnimInstance_SetIsRoaming Parms{};

	Parms.bInIsRoaming = bInIsRoaming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.GetAnimatableState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESparksAnimatableState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksAnimatableState USparksBaseLayerAnimInstance::GetAnimatableState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksBaseLayerAnimInstance", "GetAnimatableState");

	Params::SparksBaseLayerAnimInstance_GetAnimatableState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksBaseLayerAnimInstance.GetIsRoaming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksBaseLayerAnimInstance::GetIsRoaming() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksBaseLayerAnimInstance", "GetIsRoaming");

	Params::SparksBaseLayerAnimInstance_GetIsRoaming Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimInstance.BP_OnCosmeticInstrumentTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ESparksInstrumentType                   NewInstrument                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimInstance::BP_OnCosmeticInstrumentTypeChanged(ESparksInstrumentType NewInstrument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimInstance", "BP_OnCosmeticInstrumentTypeChanged");

	Params::SparksInstrumentAnimInstance_BP_OnCosmeticInstrumentTypeChanged Parms{};

	Parms.NewInstrument = NewInstrument;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimInstance.BP_OnLipSyncAssetChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TSoftObjectPtr<class UAnimSequence>&NewLipSyncAsset                                        (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimInstance::BP_OnLipSyncAssetChanged(const TSoftObjectPtr<class UAnimSequence>& NewLipSyncAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimInstance", "BP_OnLipSyncAssetChanged");

	Params::SparksInstrumentAnimInstance_BP_OnLipSyncAssetChanged Parms{};

	Parms.NewLipSyncAsset = NewLipSyncAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimInstance.BP_OnMidiEventDriverChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TScriptInterface<class IMidiEventDriverInterface>&NewMidiEventDriver                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimInstance::BP_OnMidiEventDriverChanged(const TScriptInterface<class IMidiEventDriverInterface>& NewMidiEventDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimInstance", "BP_OnMidiEventDriverChanged");

	Params::SparksInstrumentAnimInstance_BP_OnMidiEventDriverChanged Parms{};

	Parms.NewMidiEventDriver = NewMidiEventDriver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimInstance.BP_OnSetInstrumentPSC
// (Event, Public, BlueprintEvent)
// Parameters:
// class USparksInstrumentAnimPlayerStateComponent*OldInstrumentPSC                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USparksInstrumentAnimPlayerStateComponent*NewInstrumentPSC                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimInstance::BP_OnSetInstrumentPSC(class USparksInstrumentAnimPlayerStateComponent* OldInstrumentPSC, class USparksInstrumentAnimPlayerStateComponent* NewInstrumentPSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimInstance", "BP_OnSetInstrumentPSC");

	Params::SparksInstrumentAnimInstance_BP_OnSetInstrumentPSC Parms{};

	Parms.OldInstrumentPSC = OldInstrumentPSC;
	Parms.NewInstrumentPSC = NewInstrumentPSC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksCharacterCommonRuntime.SparksGuitarAnimInstance.GetFretNumberFromMidiNote
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// const uint8                             MidiNote                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USparksGuitarAnimInstance::GetFretNumberFromMidiNote(const uint8 MidiNote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SparksGuitarAnimInstance", "GetFretNumberFromMidiNote");

	Params::SparksGuitarAnimInstance_GetFretNumberFromMidiNote Parms{};

	Parms.MidiNote = MidiNote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimations.GetAnimClassForInstrument
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESparksInstrumentType                   Instrument                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class USparksInstrumentAnimInstance>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class USparksInstrumentAnimInstance> USparksInstrumentAnimations::GetAnimClassForInstrument(ESparksInstrumentType Instrument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimations", "GetAnimClassForInstrument");

	Params::SparksInstrumentAnimations_GetAnimClassForInstrument Parms{};

	Parms.Instrument = Instrument;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.CanSwapToInstrument
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESparksInstrumentType                   NewInstrumentType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksInstrumentAnimPlayerStateComponent::CanSwapToInstrument(ESparksInstrumentType NewInstrumentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "CanSwapToInstrument");

	Params::SparksInstrumentAnimPlayerStateComponent_CanSwapToInstrument Parms{};

	Parms.NewInstrumentType = NewInstrumentType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.HandlePawnFinishedCharacterCustomization
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::HandlePawnFinishedCharacterCustomization(class AFortPlayerPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "HandlePawnFinishedCharacterCustomization");

	Params::SparksInstrumentAnimPlayerStateComponent_HandlePawnFinishedCharacterCustomization Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.HandlePlayerPawnSet
// (Final, Native, Private)
// Parameters:
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::HandlePlayerPawnSet(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "HandlePlayerPawnSet");

	Params::SparksInstrumentAnimPlayerStateComponent_HandlePlayerPawnSet Parms{};

	Parms.Player = Player;
	Parms.NewPawn = NewPawn;
	Parms.OldPawn = OldPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.LinkInstrumentAnimationLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USparksInstrumentAnimations*      Animations                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::LinkInstrumentAnimationLayer(class USparksInstrumentAnimations* Animations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "LinkInstrumentAnimationLayer");

	Params::SparksInstrumentAnimPlayerStateComponent_LinkInstrumentAnimationLayer Parms{};

	Parms.Animations = Animations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.OverridePlayspace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::OverridePlayspace(class ASparksMusicPlayspace* Playspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "OverridePlayspace");

	Params::SparksInstrumentAnimPlayerStateComponent_OverridePlayspace Parms{};

	Parms.Playspace = Playspace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetAnimatableState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESparksAnimatableState                  NewAnimatableState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SetAnimatableState(ESparksAnimatableState NewAnimatableState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SetAnimatableState");

	Params::SparksInstrumentAnimPlayerStateComponent_SetAnimatableState Parms{};

	Parms.NewAnimatableState = NewAnimatableState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetCanPlayMidiAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewCanPlayMidiAnimations                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SetCanPlayMidiAnimations(bool bNewCanPlayMidiAnimations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SetCanPlayMidiAnimations");

	Params::SparksInstrumentAnimPlayerStateComponent_SetCanPlayMidiAnimations Parms{};

	Parms.bNewCanPlayMidiAnimations = bNewCanPlayMidiAnimations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetCosmeticInstrumentType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESparksInstrumentType                   NewCosmeticInstrumentType                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SetCosmeticInstrumentType(ESparksInstrumentType NewCosmeticInstrumentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SetCosmeticInstrumentType");

	Params::SparksInstrumentAnimPlayerStateComponent_SetCosmeticInstrumentType Parms{};

	Parms.NewCosmeticInstrumentType = NewCosmeticInstrumentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetLipSyncAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UAnimSequence>     NewLipSyncAsset                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SetLipSyncAsset(TSoftObjectPtr<class UAnimSequence> NewLipSyncAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SetLipSyncAsset");

	Params::SparksInstrumentAnimPlayerStateComponent_SetLipSyncAsset Parms{};

	Parms.NewLipSyncAsset = NewLipSyncAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetMidiEventDriver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IMidiEventDriverInterface>NewMidiEventDriver                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SetMidiEventDriver(TScriptInterface<class IMidiEventDriverInterface> NewMidiEventDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SetMidiEventDriver");

	Params::SparksInstrumentAnimPlayerStateComponent_SetMidiEventDriver Parms{};

	Parms.NewMidiEventDriver = NewMidiEventDriver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SetMusicClock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMusicClockComponent*             NewMusicClock                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SetMusicClock(class UMusicClockComponent* NewMusicClock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SetMusicClock");

	Params::SparksInstrumentAnimPlayerStateComponent_SetMusicClock Parms{};

	Parms.NewMusicClock = NewMusicClock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.SwapCosmeticInstrument
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESparksInstrumentType                   NewInstrumentType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USparksInstrumentAnimPlayerStateComponent::SwapCosmeticInstrument(ESparksInstrumentType NewInstrumentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "SwapCosmeticInstrument");

	Params::SparksInstrumentAnimPlayerStateComponent_SwapCosmeticInstrument Parms{};

	Parms.NewInstrumentType = NewInstrumentType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.UnlinkInstrumentAnimationLayer
// (Final, Native, Public, BlueprintCallable)

void USparksInstrumentAnimPlayerStateComponent::UnlinkInstrumentAnimationLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "UnlinkInstrumentAnimationLayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.CanPlayMidiAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksInstrumentAnimPlayerStateComponent::CanPlayMidiAnimations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "CanPlayMidiAnimations");

	Params::SparksInstrumentAnimPlayerStateComponent_CanPlayMidiAnimations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetAnimatableState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESparksAnimatableState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksAnimatableState USparksInstrumentAnimPlayerStateComponent::GetAnimatableState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetAnimatableState");

	Params::SparksInstrumentAnimPlayerStateComponent_GetAnimatableState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetCosmeticInstrumentType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESparksInstrumentType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksInstrumentType USparksInstrumentAnimPlayerStateComponent::GetCosmeticInstrumentType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetCosmeticInstrumentType");

	Params::SparksInstrumentAnimPlayerStateComponent_GetCosmeticInstrumentType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetCurrentTrackName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName USparksInstrumentAnimPlayerStateComponent::GetCurrentTrackName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetCurrentTrackName");

	Params::SparksInstrumentAnimPlayerStateComponent_GetCurrentTrackName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetInstrumentAnimations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USparksInstrumentAnimations*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USparksInstrumentAnimations* USparksInstrumentAnimPlayerStateComponent::GetInstrumentAnimations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetInstrumentAnimations");

	Params::SparksInstrumentAnimPlayerStateComponent_GetInstrumentAnimations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetLinkedInstrumentAnimationLayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USparksBaseLayerAnimInstance*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USparksBaseLayerAnimInstance* USparksInstrumentAnimPlayerStateComponent::GetLinkedInstrumentAnimationLayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetLinkedInstrumentAnimationLayer");

	Params::SparksInstrumentAnimPlayerStateComponent_GetLinkedInstrumentAnimationLayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetLipSyncAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UAnimSequence>     ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UAnimSequence> USparksInstrumentAnimPlayerStateComponent::GetLipSyncAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetLipSyncAsset");

	Params::SparksInstrumentAnimPlayerStateComponent_GetLipSyncAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetMidiEventDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IMidiEventDriverInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IMidiEventDriverInterface> USparksInstrumentAnimPlayerStateComponent::GetMidiEventDriver() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetMidiEventDriver");

	Params::SparksInstrumentAnimPlayerStateComponent_GetMidiEventDriver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetMusicClock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMusicClockComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMusicClockComponent* USparksInstrumentAnimPlayerStateComponent::GetMusicClock() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetMusicClock");

	Params::SparksInstrumentAnimPlayerStateComponent_GetMusicClock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetRecentOrFirstInstrument
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESparksInstrumentType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksInstrumentType USparksInstrumentAnimPlayerStateComponent::GetRecentOrFirstInstrument() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetRecentOrFirstInstrument");

	Params::SparksInstrumentAnimPlayerStateComponent_GetRecentOrFirstInstrument Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetSparksPlayspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASparksMusicPlayspace*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASparksMusicPlayspace* USparksInstrumentAnimPlayerStateComponent::GetSparksPlayspace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetSparksPlayspace");

	Params::SparksInstrumentAnimPlayerStateComponent_GetSparksPlayspace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.GetTrackInstrumentType
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ESparksInstrumentType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESparksInstrumentType USparksInstrumentAnimPlayerStateComponent::GetTrackInstrumentType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "GetTrackInstrumentType");

	Params::SparksInstrumentAnimPlayerStateComponent_GetTrackInstrumentType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.IsInstrumentAnimationLayerLinked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksInstrumentAnimPlayerStateComponent::IsInstrumentAnimationLayerLinked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "IsInstrumentAnimationLayerLinked");

	Params::SparksInstrumentAnimPlayerStateComponent_IsInstrumentAnimationLayerLinked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.IsUsable
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksInstrumentAnimPlayerStateComponent::IsUsable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "IsUsable");

	Params::SparksInstrumentAnimPlayerStateComponent_IsUsable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.PlayerHasCosmeticInstrument
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESparksInstrumentType                   InstrumentType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksInstrumentAnimPlayerStateComponent::PlayerHasCosmeticInstrument(ESparksInstrumentType InstrumentType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "PlayerHasCosmeticInstrument");

	Params::SparksInstrumentAnimPlayerStateComponent_PlayerHasCosmeticInstrument Parms{};

	Parms.InstrumentType = InstrumentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SparksCharacterCommonRuntime.SparksInstrumentAnimPlayerStateComponent.PlayerHasTrackInstrument
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESparksInstrumentType                   InstrumentType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USparksInstrumentAnimPlayerStateComponent::PlayerHasTrackInstrument(ESparksInstrumentType InstrumentType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SparksInstrumentAnimPlayerStateComponent", "PlayerHasTrackInstrument");

	Params::SparksInstrumentAnimPlayerStateComponent_PlayerHasTrackInstrument Parms{};

	Parms.InstrumentType = InstrumentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

