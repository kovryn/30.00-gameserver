#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioWidgets

#include "Basic.hpp"

#include "AudioWidgets_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "SlateCore_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Class AudioWidgets.AudioMaterialButton
// 0x00A8 (0x0208 - 0x0160)
class UAudioMaterialButton final : public UWidget
{
public:
	struct FAudioMaterialButtonStyle              WidgetStyle;                                       // 0x0160(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsPressed)> OnButtonPressedChangedEvent;                     // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsPressed;                                        // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F1[0x17];                                     // 0x01F1(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetIsPressed(bool InPressed);

	bool GetIsPressed() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialButton">();
	}
	static class UAudioMaterialButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialButton>();
	}
};

// Class AudioWidgets.AudioMaterialEnvelope
// 0x0088 (0x01E8 - 0x0160)
class UAudioMaterialEnvelope final : public UWidget
{
public:
	struct FAudioMaterialEnvelopeStyle            WidgetStyle;                                       // 0x0160(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FAudioMaterialEnvelopeSettings         EnvelopeSettings;                                  // 0x01B0(0x0024)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x14];                                     // 0x01D4(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialEnvelope">();
	}
	static class UAudioMaterialEnvelope* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialEnvelope>();
	}
};

// Class AudioWidgets.AudioMaterialKnob
// 0x01E0 (0x0340 - 0x0160)
class UAudioMaterialKnob final : public UWidget
{
public:
	struct FAudioMaterialKnobStyle                WidgetStyle;                                       // 0x0160(0x01A0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Value)>   OnKnobValueChanged;                                // 0x0300(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TuneSpeed;                                         // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FineTuneSpeed;                                     // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLocked;                                           // 0x031C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMouseUsesStep;                                    // 0x031D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31E[0x2];                                      // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StepSize;                                          // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_324[0x1C];                                     // 0x0324(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetValue();
	void SetFineTuneSpeed(float InValue);
	void SetLocked(bool InLocked);
	void SetMouseUsesStep(bool InUsesStep);
	void SetStepSize(float InValue);
	void SetTuneSpeed(float InValue);
	void SetValue(float InValue);

	float GetFineTuneSpeed() const;
	bool GetIsLocked() const;
	bool GetMouseUsesStep() const;
	float GetStepSize() const;
	float GetTuneSpeed() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialKnob">();
	}
	static class UAudioMaterialKnob* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialKnob>();
	}
};

// Class AudioWidgets.AudioMaterialMeter
// 0x0120 (0x0280 - 0x0160)
class UAudioMaterialMeter final : public UWidget
{
public:
	struct FAudioMaterialMeterStyle               WidgetStyle;                                       // 0x0160(0x00F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EOrientation                                  orientation;                                       // 0x0250(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             MeterChannelInfoDelegate;                          // 0x0254(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_260[0x10];                                     // 0x0260(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMeterChannelInfo>              MeterChannelInfo;                                  // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	void SetMeterChannelInfo(const TArray<struct FMeterChannelInfo>& InMeterChannelInfo);

	TArray<struct FMeterChannelInfo> GetMeterChannelInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialMeter">();
	}
	static class UAudioMaterialMeter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialMeter>();
	}
};

// Class AudioWidgets.AudioMaterialSlider
// 0x01A0 (0x0300 - 0x0160)
class UAudioMaterialSlider final : public UWidget
{
public:
	struct FAudioMaterialSliderStyle              WidgetStyle;                                       // 0x0160(0x0160)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Value)>   OnValueChanged;                                    // 0x02C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrientation                                  orientation;                                       // 0x02D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TuneSpeed;                                         // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FineTuneSpeed;                                     // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLocked;                                           // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMouseUsesStep;                                    // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StepSize;                                          // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x18];                                     // 0x02E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetFineTuneSpeed(const float InValue);
	void SetLocked(bool bInLocked);
	void SetMouseUsesStep(bool bInUsesStep);
	void SetStepSize(float InValue);
	void SetTuneSpeed(const float InValue);
	void SetValue(float InValue);

	float GetFineTuneSpeed() const;
	bool GetIsLocked() const;
	bool GetMouseUsesStep() const;
	float GetStepSize() const;
	float GetTuneSpeed() const;
	float GetValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialSlider">();
	}
	static class UAudioMaterialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialSlider>();
	}
};

// Class AudioWidgets.AudioMaterialKnobWidgetStyle
// 0x01A0 (0x01D0 - 0x0030)
class UAudioMaterialKnobWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FAudioMaterialKnobStyle                KnobStyle;                                         // 0x0030(0x01A0)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialKnobWidgetStyle">();
	}
	static class UAudioMaterialKnobWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialKnobWidgetStyle>();
	}
};

// Class AudioWidgets.AudioMaterialMeterWidgetStyle
// 0x00F0 (0x0120 - 0x0030)
class UAudioMaterialMeterWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FAudioMaterialMeterStyle               MeterStyle;                                        // 0x0030(0x00F0)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialMeterWidgetStyle">();
	}
	static class UAudioMaterialMeterWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialMeterWidgetStyle>();
	}
};

// Class AudioWidgets.AudioMaterialButtonWidgetStyle
// 0x0080 (0x00B0 - 0x0030)
class UAudioMaterialButtonWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FAudioMaterialButtonStyle              ButtonStyle;                                       // 0x0030(0x0080)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialButtonWidgetStyle">();
	}
	static class UAudioMaterialButtonWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialButtonWidgetStyle>();
	}
};

// Class AudioWidgets.AudioMaterialSliderWidgetStyle
// 0x0160 (0x0190 - 0x0030)
class UAudioMaterialSliderWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FAudioMaterialSliderStyle              SliderStyle;                                       // 0x0030(0x0160)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialSliderWidgetStyle">();
	}
	static class UAudioMaterialSliderWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialSliderWidgetStyle>();
	}
};

// Class AudioWidgets.AudioMaterialEnvelopeWidgetStyle
// 0x0050 (0x0080 - 0x0030)
class UAudioMaterialEnvelopeWidgetStyle final : public USlateWidgetStyleContainerBase
{
public:
	struct FAudioMaterialEnvelopeStyle            EnvelopeStyle;                                     // 0x0030(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMaterialEnvelopeWidgetStyle">();
	}
	static class UAudioMaterialEnvelopeWidgetStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMaterialEnvelopeWidgetStyle>();
	}
};

// Class AudioWidgets.AudioMeter
// 0x0530 (0x0690 - 0x0160)
class UAudioMeter final : public UWidget
{
public:
	TArray<struct FMeterChannelInfo>              MeterChannelInfo;                                  // 0x0160(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TDelegate<void()>                             MeterChannelInfoDelegate;                          // 0x0170(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAudioMeterStyle                       WidgetStyle;                                       // 0x0180(0x0480)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EOrientation                                  orientation;                                       // 0x0600(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_601[0x3];                                      // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x0604(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterBackgroundColor;                              // 0x0614(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterValueColor;                                   // 0x0624(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterPeakColor;                                    // 0x0634(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterClippingColor;                                // 0x0644(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterScaleColor;                                   // 0x0654(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           MeterScaleLabelColor;                              // 0x0664(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_674[0x1C];                                     // 0x0674(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetBackgroundColor(const struct FLinearColor& InValue);
	void SetMeterBackgroundColor(const struct FLinearColor& InValue);
	void SetMeterChannelInfo(const TArray<struct FMeterChannelInfo>& InMeterChannelInfo);
	void SetMeterClippingColor(const struct FLinearColor& InValue);
	void SetMeterPeakColor(const struct FLinearColor& InValue);
	void SetMeterScaleColor(const struct FLinearColor& InValue);
	void SetMeterScaleLabelColor(const struct FLinearColor& InValue);
	void SetMeterValueColor(const struct FLinearColor& InValue);

	TArray<struct FMeterChannelInfo> GetMeterChannelInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioMeter">();
	}
	static class UAudioMeter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioMeter>();
	}
};

// Class AudioWidgets.AudioOscilloscope
// 0x04F0 (0x0650 - 0x0160)
class UAudioOscilloscope final : public UWidget
{
public:
	struct FAudioOscilloscopePanelStyle           OscilloscopeStyle;                                 // 0x0160(0x0470)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAudioBus*                              AudioBus;                                          // 0x05D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTimeWindowMs;                                   // 0x05D8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeWindowMs;                                      // 0x05DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnalysisPeriodMs;                                  // 0x05E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowTimeGrid;                                     // 0x05E4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EXAxisLabelsUnit                              TimeGridLabelsUnit;                                // 0x05E5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowAmplitudeGrid;                                // 0x05E6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowAmplitudeLabels;                              // 0x05E7(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EYAxisLabelsUnit                              AmplitudeGridLabelsUnit;                           // 0x05E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioOscilloscopeTriggerMode                 TriggerMode;                                       // 0x05E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5EA[0x2];                                      // 0x05EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TriggerThreshold;                                  // 0x05EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioPanelLayoutType                         PanelLayoutType;                                   // 0x05F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F1[0x3];                                      // 0x05F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChannelToAnalyze;                                  // 0x05F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F8[0x58];                                     // 0x05F8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanTriggeringBeSet();
	void StartProcessing();
	void StopProcessing();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioOscilloscope">();
	}
	static class UAudioOscilloscope* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioOscilloscope>();
	}
};

// Class AudioWidgets.AudioRadialSlider
// 0x0200 (0x0360 - 0x0160)
class alignas(0x10) UAudioRadialSlider : public UWidget
{
public:
	float                                         Value;                                             // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             ValueDelegate;                                     // 0x0164(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioRadialSliderLayout                      WidgetLayout;                                      // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CenterBackgroundColor;                             // 0x0174(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderProgressColor;                               // 0x0184(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderBarColor;                                    // 0x0194(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              HandStartEndRatio;                                 // 0x01A8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   UnitsText;                                         // 0x01B8(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FLinearColor                           TextLabelBackgroundColor;                          // 0x01C8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowLabelOnlyOnHover;                              // 0x01D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowUnitsText;                                     // 0x01D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsUnitsTextReadOnly;                               // 0x01DA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValueTextReadOnly;                               // 0x01DB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SliderThickness;                                   // 0x01DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              OutputRange;                                       // 0x01E0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Value)>   OnValueChanged;                                    // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_200[0x160];                                    // 0x0200(0x0160)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetOutputValue(const float InSliderValue);
	float GetSliderValue(const float OutputValue);
	void SetCenterBackgroundColor(const struct FLinearColor& InValue);
	void SetHandStartEndRatio(const struct FVector2D& InHandStartEndRatio);
	void SetOutputRange(const struct FVector2D& InOutputRange);
	void SetShowLabelOnlyOnHover(const bool bShowLabelOnlyOnHover);
	void SetShowUnitsText(const bool bShowUnitsText);
	void SetSliderBarColor(const struct FLinearColor& InValue);
	void SetSliderProgressColor(const struct FLinearColor& InValue);
	void SetSliderThickness(const float InThickness);
	void SetTextLabelBackgroundColor(const struct FSlateColor& InColor);
	void SetUnitsText(const class FText& Units);
	void SetUnitsTextReadOnly(const bool bIsReadOnly);
	void SetValueTextReadOnly(const bool bIsReadOnly);
	void SetWidgetLayout(EAudioRadialSliderLayout InLayout);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioRadialSlider">();
	}
	static class UAudioRadialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioRadialSlider>();
	}
};

// Class AudioWidgets.AudioVolumeRadialSlider
// 0x0000 (0x0360 - 0x0360)
class UAudioVolumeRadialSlider final : public UAudioRadialSlider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioVolumeRadialSlider">();
	}
	static class UAudioVolumeRadialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioVolumeRadialSlider>();
	}
};

// Class AudioWidgets.AudioFrequencyRadialSlider
// 0x0000 (0x0360 - 0x0360)
class UAudioFrequencyRadialSlider final : public UAudioRadialSlider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioFrequencyRadialSlider">();
	}
	static class UAudioFrequencyRadialSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioFrequencyRadialSlider>();
	}
};

// Class AudioWidgets.AudioSliderBase
// 0x07B0 (0x0910 - 0x0160)
class alignas(0x10) UAudioSliderBase : public UWidget
{
public:
	float                                         Value;                                             // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UnitsText;                                         // 0x0168(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FLinearColor                           TextLabelBackgroundColor;                          // 0x0178(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             TextLabelBackgroundColorDelegate;                  // 0x0188(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowLabelOnlyOnHover;                              // 0x0194(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowUnitsText;                                     // 0x0195(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsUnitsTextReadOnly;                               // 0x0196(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValueTextReadOnly;                               // 0x0197(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             ValueDelegate;                                     // 0x0198(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderBackgroundColor;                             // 0x01A4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SliderBackgroundColorDelegate;                     // 0x01B4(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderBarColor;                                    // 0x01C0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SliderBarColorDelegate;                            // 0x01D0(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SliderThumbColor;                                  // 0x01DC(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             SliderThumbColorDelegate;                          // 0x01EC(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           WidgetBackgroundColor;                             // 0x01F8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             WidgetBackgroundColorDelegate;                     // 0x0208(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrientation                                  orientation;                                       // 0x0214(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float Value)>   OnValueChanged;                                    // 0x0218(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_228[0x6E8];                                    // 0x0228(0x06E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetLinValue(const float OutputValue);
	float GetOutputValue(const float InSliderValue);
	float GetSliderValue(const float OutputValue);
	void SetShowLabelOnlyOnHover(const bool bShowLabelOnlyOnHover);
	void SetShowUnitsText(const bool bShowUnitsText);
	void SetSliderBackgroundColor(const struct FLinearColor& InValue);
	void SetSliderBarColor(const struct FLinearColor& InValue);
	void SetSliderThumbColor(const struct FLinearColor& InValue);
	void SetTextLabelBackgroundColor(const struct FSlateColor& InColor);
	void SetUnitsText(const class FText& Units);
	void SetUnitsTextReadOnly(const bool bIsReadOnly);
	void SetValueTextReadOnly(const bool bIsReadOnly);
	void SetWidgetBackgroundColor(const struct FLinearColor& InValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioSliderBase">();
	}
	static class UAudioSliderBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioSliderBase>();
	}
};

// Class AudioWidgets.AudioSlider
// 0x0010 (0x0920 - 0x0910)
class UAudioSlider : public UAudioSliderBase
{
public:
	TWeakObjectPtr<class UCurveFloat>             LinToOutputCurve;                                  // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UCurveFloat>             OutputToLinCurve;                                  // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioSlider">();
	}
	static class UAudioSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioSlider>();
	}
};

// Class AudioWidgets.AudioVolumeSlider
// 0x0000 (0x0920 - 0x0920)
class UAudioVolumeSlider final : public UAudioSlider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioVolumeSlider">();
	}
	static class UAudioVolumeSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioVolumeSlider>();
	}
};

// Class AudioWidgets.AudioFrequencySlider
// 0x0010 (0x0920 - 0x0910)
class UAudioFrequencySlider final : public UAudioSliderBase
{
public:
	struct FVector2D                              OutputRange;                                       // 0x0910(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioFrequencySlider">();
	}
	static class UAudioFrequencySlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioFrequencySlider>();
	}
};

// Class AudioWidgets.AudioVectorscope
// 0x0210 (0x0370 - 0x0160)
class UAudioVectorscope final : public UWidget
{
public:
	struct FAudioVectorscopePanelStyle            VectorscopeStyle;                                  // 0x0160(0x01A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UAudioBus*                              AudioBus;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGrid;                                         // 0x0308(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GridDivisions;                                     // 0x030C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDisplayPersistenceMs;                           // 0x0310(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplayPersistenceMs;                              // 0x0314(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0318(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioPanelLayoutType                         PanelLayoutType;                                   // 0x031C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31D[0x53];                                     // 0x031D(0x0053)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartProcessing();
	void StopProcessing();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AudioVectorscope">();
	}
	static class UAudioVectorscope* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAudioVectorscope>();
	}
};

}

