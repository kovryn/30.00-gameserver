#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MotorboatRuntime

#include "Basic.hpp"

#include "MotorboatRuntime_classes.hpp"
#include "MotorboatRuntime_parameters.hpp"


namespace SDK
{

// Function MotorboatRuntime.FortMeatballVehicle.CacheAudioPointers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortVehicleAudioVoice*           InAudioEngineUp                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortVehicleAudioVoice*           InAudioEngineDown                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortVehicleAudioVoice*           InAudioWakeTurn                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortVehicleAudioVoice*           InAudioWakeSpeed                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortVehicleAudioVoice*           InAudioScrape                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortVehicleAudioVoice*           InAudioEngineOutOfFuel                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMeatballVehicle::CacheAudioPointers(class UFortVehicleAudioVoice* InAudioEngineUp, class UFortVehicleAudioVoice* InAudioEngineDown, class UFortVehicleAudioVoice* InAudioWakeTurn, class UFortVehicleAudioVoice* InAudioWakeSpeed, class UFortVehicleAudioVoice* InAudioScrape, class UFortVehicleAudioVoice* InAudioEngineOutOfFuel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "CacheAudioPointers");

	Params::FortMeatballVehicle_CacheAudioPointers Parms{};

	Parms.InAudioEngineUp = InAudioEngineUp;
	Parms.InAudioEngineDown = InAudioEngineDown;
	Parms.InAudioWakeTurn = InAudioWakeTurn;
	Parms.InAudioWakeSpeed = InAudioWakeSpeed;
	Parms.InAudioScrape = InAudioScrape;
	Parms.InAudioEngineOutOfFuel = InAudioEngineOutOfFuel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.CacheGroundFXComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNiagaraComponent*                InGroundFXComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMeatballVehicle::CacheGroundFXComponent(class UNiagaraComponent* InGroundFXComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "CacheGroundFXComponent");

	Params::FortMeatballVehicle_CacheGroundFXComponent Parms{};

	Parms.InGroundFXComponent = InGroundFXComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.LandShakeEnd
// (Final, Native, Protected, BlueprintCallable)

void AFortMeatballVehicle::LandShakeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "LandShakeEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.OnBoostFailed
// (Event, Protected, BlueprintEvent)

void AFortMeatballVehicle::OnBoostFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "OnBoostFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MotorboatRuntime.FortMeatballVehicle.OnBoostFinished
// (Event, Protected, BlueprintEvent)

void AFortMeatballVehicle::OnBoostFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "OnBoostFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MotorboatRuntime.FortMeatballVehicle.OnBoostReady
// (Event, Protected, BlueprintEvent)

void AFortMeatballVehicle::OnBoostReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "OnBoostReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MotorboatRuntime.FortMeatballVehicle.OnBoostStarted
// (Event, Protected, BlueprintEvent)

void AFortMeatballVehicle::OnBoostStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "OnBoostStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MotorboatRuntime.FortMeatballVehicle.ShowCooldownCue
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMeatballVehicle::ShowCooldownCue(class AFortPlayerPawn* Pawn, float duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "ShowCooldownCue");

	Params::FortMeatballVehicle_ShowCooldownCue Parms{};

	Parms.Pawn = Pawn;
	Parms.duration = duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MotorboatRuntime.FortMeatballVehicle.SmashedThroughBuildingPiece
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   ImpactPoint                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ImpactNormal                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ABuildingActor*             BuildingHitActor                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMeatballVehicle::SmashedThroughBuildingPiece(const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, const class ABuildingActor* BuildingHitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "SmashedThroughBuildingPiece");

	Params::FortMeatballVehicle_SmashedThroughBuildingPiece Parms{};

	Parms.ImpactPoint = std::move(ImpactPoint);
	Parms.ImpactNormal = std::move(ImpactNormal);
	Parms.BuildingHitActor = BuildingHitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MotorboatRuntime.FortMeatballVehicle.StopDriverCameraShake
// (Final, Native, Protected, BlueprintCallable)

void AFortMeatballVehicle::StopDriverCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "StopDriverCameraShake");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.StopLandRumble
// (Final, Native, Protected, BlueprintCallable)

void AFortMeatballVehicle::StopLandRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "StopLandRumble");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.StopTurnRumble
// (Final, Native, Protected, BlueprintCallable)

void AFortMeatballVehicle::StopTurnRumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "StopTurnRumble");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.UpdateSnowAndDirtParams
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   NormalizedForwardSpeed                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMeatballVehicle::UpdateSnowAndDirtParams(float NormalizedForwardSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "UpdateSnowAndDirtParams");

	Params::FortMeatballVehicle_UpdateSnowAndDirtParams Parms{};

	Parms.NormalizedForwardSpeed = NormalizedForwardSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MotorboatRuntime.FortMeatballVehicle.GetBoostCharge
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortMeatballVehicle::GetBoostCharge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "GetBoostCharge");

	Params::FortMeatballVehicle_GetBoostCharge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MotorboatRuntime.FortMeatballVehicle.GetSeatOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortMeatballVehicle::GetSeatOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "GetSeatOffset");

	Params::FortMeatballVehicle_GetSeatOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MotorboatRuntime.FortMeatballVehicle.GetSeatRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat AFortMeatballVehicle::GetSeatRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMeatballVehicle", "GetSeatRotation");

	Params::FortMeatballVehicle_GetSeatRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

