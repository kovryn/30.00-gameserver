#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoRidableRuntime

#include "Basic.hpp"

#include "JunoRidableRuntime_classes.hpp"


namespace SDK
{

// Function JunoRidableRuntime.JunoRidableCheatManager.JunoStartRiding
// (BlueprintAuthorityOnly, Exec, Native, Public)

void UJunoRidableCheatManager::JunoStartRiding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoRidableCheatManager", "JunoStartRiding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoRidableRuntime.JunoRidableCheatManager.JunoStopRiding
// (BlueprintAuthorityOnly, Exec, Native, Public)

void UJunoRidableCheatManager::JunoStopRiding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoRidableCheatManager", "JunoStopRiding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoRidableRuntime.JunoRidableCheatManager.JunoStopRidingDelayedResetRiderComponent
// (Final, Native, Protected)

void UJunoRidableCheatManager::JunoStopRidingDelayedResetRiderComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoRidableCheatManager", "JunoStopRidingDelayedResetRiderComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoRidableRuntime.JunoRidableCheatManager.NativeAddToCheatManager
// (Final, Native, Protected, BlueprintCallable)

void UJunoRidableCheatManager::NativeAddToCheatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoRidableCheatManager", "NativeAddToCheatManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

