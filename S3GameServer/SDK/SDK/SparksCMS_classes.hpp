#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCMS

#include "Basic.hpp"

#include "SparksCMS_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class SparksCMS.CatalogData
// 0x0188 (0x01B0 - 0x0028)
class UCatalogData final : public UObject
{
public:
	bool                                          bFromHotfix;                                       // 0x0028(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0xF];                                       // 0x0029(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSparksSongCatalogEntry                DataEntry;                                         // 0x0038(0x0168)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UCatalogData* Song, bool bSucceeded)> OnSongConsolidated;    // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void ClearConsolidatedData();
	void ConsolidateData();
	bool IsFromHotfix();

	struct FGameplayTag GetTagForAgeRating() const;
	bool IsEnabled() const;
	bool IsEnabledForJam() const;
	bool IsEnabledForPilgrim() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CatalogData">();
	}
	static class UCatalogData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCatalogData>();
	}
};

// Class SparksCMS.SparksSongCatalog
// 0x0170 (0x01A0 - 0x0030)
class USparksSongCatalog final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UCatalogData*>      CatalogByUid;                                      // 0x0088(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FString, class UCatalogData*>      CatalogByShortName;                                // 0x00D8(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FString, class UCatalogData*>      CatalogByTemplateId;                               // 0x0128(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UCatalogData*>                   CatalogObjectPool;                                 // 0x0178(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UUpdateManager*                         HFManager;                                         // 0x0188(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(bool bSucceeded)> OnSongCatalogRetrieved;                          // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	class UCatalogData* GetSongByShortName(const class FString& InShortName);
	class UCatalogData* GetSongByTemplateID(const class FString& InTemplateId);
	class UCatalogData* GetSongByUID(const class FString& InUID);
	void GetSongList(ESongSortMethod SortMethod, ESongSortDirection SortDirection, const struct FGameplayTagQuery& TagQuery, TArray<class UCatalogData*>& OutResults);
	void OnCalendarActiveEventsChanged(const TArray<class FString>& ActiveEventFlags);
	void RequestSongCatalog();
	void SetCMSSuffix(const class FString& InCMSSuffix);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksSongCatalog">();
	}
	static class USparksSongCatalog* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksSongCatalog>();
	}
};

}

