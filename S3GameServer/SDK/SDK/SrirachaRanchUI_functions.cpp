#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SrirachaRanchUI

#include "Basic.hpp"

#include "SrirachaRanchUI_classes.hpp"
#include "SrirachaRanchUI_parameters.hpp"


namespace SDK
{

// Function SrirachaRanchUI.RadioStation.OnLoadingImageComplete
// (Final, Native, Private)

void URadioStation::OnLoadingImageComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioStation", "OnLoadingImageComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.FortMobileActionButtonBehavior_ToggleRadio.HandleRadioPlaying
// (Final, Native, Private)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       Source                                                 (Parm, NativeAccessSpecifierPublic)

void UFortMobileActionButtonBehavior_ToggleRadio::HandleRadioPlaying(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMobileActionButtonBehavior_ToggleRadio", "HandleRadioPlaying");

	Params::FortMobileActionButtonBehavior_ToggleRadio_HandleRadioPlaying Parms{};

	Parms.Radio = Radio;
	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.FortMobileActionButtonBehavior_ToggleRadio.HandleRadioStopped
// (Final, Native, Private)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       Source                                                 (Parm, NativeAccessSpecifierPublic)

void UFortMobileActionButtonBehavior_ToggleRadio::HandleRadioStopped(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMobileActionButtonBehavior_ToggleRadio", "HandleRadioStopped");

	Params::FortMobileActionButtonBehavior_ToggleRadio_HandleRadioStopped Parms{};

	Parms.Radio = Radio;
	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioMenuPicker.HandleMetadataChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FFortMediaInBandMetadata&  MediaMetadata                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void URadioMenuPicker::HandleMetadataChanged(const struct FFortMediaInBandMetadata& MediaMetadata)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioMenuPicker", "HandleMetadataChanged");

	Params::RadioMenuPicker_HandleMetadataChanged Parms{};

	Parms.MediaMetadata = std::move(MediaMetadata);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioMenuPicker.OnLoadingStationImageComplete
// (Final, Native, Private)
// Parameters:
// class URadioStation*                    RadioMenuStation                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URadioMenuPicker::OnLoadingStationImageComplete(class URadioStation* RadioMenuStation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioMenuPicker", "OnLoadingStationImageComplete");

	Params::RadioMenuPicker_OnLoadingStationImageComplete Parms{};

	Parms.RadioMenuStation = RadioMenuStation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.GetRadioStatusOnScreenTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float URadioPlayerWidgetBase::GetRadioStatusOnScreenTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "GetRadioStatusOnScreenTime");

	Params::RadioPlayerWidgetBase_GetRadioStatusOnScreenTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.IsMetadataEmpty
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FFortMediaInBandMetadata&  MediaMetadata                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URadioPlayerWidgetBase::IsMetadataEmpty(const struct FFortMediaInBandMetadata& MediaMetadata)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "IsMetadataEmpty");

	Params::RadioPlayerWidgetBase_IsMetadataEmpty Parms{};

	Parms.MediaMetadata = std::move(MediaMetadata);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.NativeChangedSeatVehicle
// (Final, Native, Protected)
// Parameters:
// const int32                             SeatIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::NativeChangedSeatVehicle(const int32 SeatIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "NativeChangedSeatVehicle");

	Params::RadioPlayerWidgetBase_NativeChangedSeatVehicle Parms{};

	Parms.SeatIndex = SeatIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.NativeEnteredVehicle
// (Final, Native, Protected)

void URadioPlayerWidgetBase::NativeEnteredVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "NativeEnteredVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.NativeExitedVehicle
// (Final, Native, Protected)

void URadioPlayerWidgetBase::NativeExitedVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "NativeExitedVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnControllerGainedNewFortPawn
// (Final, Native, Protected)
// Parameters:
// class AFortPawn*                        FortPawn                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnControllerGainedNewFortPawn(class AFortPawn* FortPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnControllerGainedNewFortPawn");

	Params::RadioPlayerWidgetBase_OnControllerGainedNewFortPawn Parms{};

	Parms.FortPawn = FortPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnFailedToOpenSource
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       Source                                                 (Parm, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnFailedToOpenSource(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnFailedToOpenSource");

	Params::RadioPlayerWidgetBase_OnFailedToOpenSource Parms{};

	Parms.Radio = Radio;
	Parms.Source = std::move(Source);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnLoadingNewSource
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       Source                                                 (Parm, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnLoadingNewSource(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnLoadingNewSource");

	Params::RadioPlayerWidgetBase_OnLoadingNewSource Parms{};

	Parms.Radio = Radio;
	Parms.Source = std::move(Source);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnMetadataChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FFortMediaInBandMetadata&  MediaMetadata                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnMetadataChanged(const struct FFortMediaInBandMetadata& MediaMetadata)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnMetadataChanged");

	Params::RadioPlayerWidgetBase_OnMetadataChanged Parms{};

	Parms.MediaMetadata = std::move(MediaMetadata);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnRadioStopped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       LastSource                                             (Parm, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnRadioStopped(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& LastSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnRadioStopped");

	Params::RadioPlayerWidgetBase_OnRadioStopped Parms{};

	Parms.Radio = Radio;
	Parms.LastSource = std::move(LastSource);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnSourceFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       Source                                                 (Parm, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnSourceFinished(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnSourceFinished");

	Params::RadioPlayerWidgetBase_OnSourceFinished Parms{};

	Parms.Radio = Radio;
	Parms.Source = std::move(Source);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.OnSourcePlaying
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStreamingRadioPlayerComponent*   Radio                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAthenaRadioStation&       Source                                                 (Parm, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::OnSourcePlaying(class UStreamingRadioPlayerComponent* Radio, const struct FAthenaRadioStation& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "OnSourcePlaying");

	Params::RadioPlayerWidgetBase_OnSourcePlaying Parms{};

	Parms.Radio = Radio;
	Parms.Source = std::move(Source);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SrirachaRanchUI.RadioPlayerWidgetBase.SetControllable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanControl                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URadioPlayerWidgetBase::SetControllable(bool bCanControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadioPlayerWidgetBase", "SetControllable");

	Params::RadioPlayerWidgetBase_SetControllable Parms{};

	Parms.bCanControl = bCanControl;

	UObject::ProcessEvent(Func, &Parms);
}

}

