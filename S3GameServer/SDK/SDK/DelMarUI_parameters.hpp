#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarUI

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "DelMarUI_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "DelMarCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DelMarUI.DelMarUserWidget.BP_Hide
// 0x0001 (0x0001 - 0x0000)
struct DelMarUserWidget_BP_Hide final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUserWidget.BP_Show
// 0x0001 (0x0001 - 0x0000)
struct DelMarUserWidget_BP_Show final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUserWidget.GetUIStateChartManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarUserWidget_GetUIStateChartManager final
{
public:
	class UUIStateChartManager*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUserWidget.HandleWidgetTransitionerStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarUserWidget_HandleWidgetTransitionerStatusChanged final
{
public:
	class UWidgetTransitioner*                    InTransitioner;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWidgetTransitionerStatus                     InStatus;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarUserWidget.SetDisplayEnabled
// 0x0002 (0x0002 - 0x0000)
struct DelMarUserWidget_SetDisplayEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipAnimation;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUserWidget.GetWidgetTransitioner
// 0x0008 (0x0008 - 0x0000)
struct DelMarUserWidget_GetWidgetTransitioner final
{
public:
	class UWidgetTransitioner*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUserWidget.IsDisplayEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarUserWidget_IsDisplayEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarCountdownTimerWidget.SetInitialCountdownTime
// 0x0008 (0x0008 - 0x0000)
struct DelMarCountdownTimerWidget_SetInitialCountdownTime final
{
public:
	double                                        InTime;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarCountdownTimerWidget.GetTimeRemainingSeconds
// 0x0008 (0x0008 - 0x0000)
struct DelMarCountdownTimerWidget_GetTimeRemainingSeconds final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarCreativeUIDirector.OnVehicleAnyWheelsOnGroundChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarCreativeUIDirector_OnVehicleAnyWheelsOnGroundChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnyWheelsOnGround;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarDriverCameraWidget.GetAnimationNames
// 0x0010 (0x0010 - 0x0000)
struct DelMarDriverCameraWidget_GetAnimationNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarListViewModel.GetElementAt
// 0x0010 (0x0010 - 0x0000)
struct DelMarListViewModel_GetElementAt final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMVVMViewModelBase*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarListViewModel.GetElements
// 0x0010 (0x0010 - 0x0000)
struct DelMarListViewModel_GetElements final
{
public:
	TArray<class UMVVMViewModelBase*>             ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarViewModelBase.TryGetOwningLocalPlayer
// 0x0008 (0x0008 - 0x0000)
struct DelMarViewModelBase_TryGetOwningLocalPlayer final
{
public:
	class ULocalPlayer*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPlayerIndicatorsContainer.HandleIconOnlySettingChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerIndicatorsContainer_HandleIconOnlySettingChanged final
{
public:
	bool                                          bUseIconOnly;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPlayerIndicatorsContainer.HandleRacePlayersChanged
// 0x0050 (0x0050 - 0x0000)
struct DelMarPlayerIndicatorsContainer_HandleRacePlayersChanged final
{
public:
	TMap<int32, class UDelMarPlayerViewModel*>    RacePlayers;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPlayerIndicatorsContainer.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarPlayerIndicatorsContainer_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPlayerIndicatorWidget.BP_SetViewModel
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerIndicatorWidget_BP_SetViewModel final
{
public:
	class UDelMarPlayerViewModel*                 ViewModel;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPlayerIndicatorWidget.BP_UpdateIndicator
// 0x000C (0x000C - 0x0000)
struct DelMarPlayerIndicatorWidget_BP_UpdateIndicator final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Opacity;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRearIndicator;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarRearAlertVerticalHint                  VerticalHint;                                      // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarExpandableHudWidget.BP_HandlePlayerPreferencesAdded
// 0x0008 (0x0008 - 0x0000)
struct DelMarExpandableHudWidget_BP_HandlePlayerPreferencesAdded final
{
public:
	class UDelMarPlayerPreferencesComponent*      InPlayerPreferences;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarExpandableHudWidget.HandleToggleSettingChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarExpandableHudWidget_HandleToggleSettingChanged final
{
public:
	bool                                          bUseToggle;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarExpandableHudWidget.SetTargetInterpTransformY
// 0x0004 (0x0004 - 0x0000)
struct DelMarExpandableHudWidget_SetTargetInterpTransformY final
{
public:
	float                                         InTargetInterpTransformY;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPositionalTrackerWidget.UpdatePlayerPositions
// 0x0010 (0x0010 - 0x0000)
struct DelMarPositionalTrackerWidget_UpdatePlayerPositions final
{
public:
	TArray<class UDelMarPlayerViewModel*>         InPlayers;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarScreenBase.BP_Hide
// 0x0001 (0x0001 - 0x0000)
struct DelMarScreenBase_BP_Hide final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarScreenBase.BP_Show
// 0x0001 (0x0001 - 0x0000)
struct DelMarScreenBase_BP_Show final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarScreenBase.GetUIStateChartManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarScreenBase_GetUIStateChartManager final
{
public:
	class UUIStateChartManager*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarScreenBase.HandleWidgetTransitionerStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarScreenBase_HandleWidgetTransitionerStatusChanged final
{
public:
	class UWidgetTransitioner*                    InTransitioner;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWidgetTransitionerStatus                     InStatus;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarScreenBase.SetDisplayEnabled
// 0x0002 (0x0002 - 0x0000)
struct DelMarScreenBase_SetDisplayEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipAnimation;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarScreenBase.GetWidgetTransitioner
// 0x0008 (0x0008 - 0x0000)
struct DelMarScreenBase_GetWidgetTransitioner final
{
public:
	class UWidgetTransitioner*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarScreenBase.IsDisplayEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarScreenBase_IsDisplayEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPostRaceScreen.BP_OnReadyUpChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarPostRaceScreen_BP_OnReadyUpChanged final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPostRaceScreen.UpdateVote
// 0x0001 (0x0001 - 0x0000)
struct DelMarPostRaceScreen_UpdateVote final
{
public:
	EDelMarPostRaceVote                           NewVote;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPostRaceVoteWidget.BP_OnPostRaceVoteChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarPostRaceVoteWidget_BP_OnPostRaceVoteChanged final
{
public:
	EDelMarPostRaceVote                           Vote;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPostRaceVoteWidget.UpdateVote
// 0x0001 (0x0001 - 0x0000)
struct DelMarPostRaceVoteWidget_UpdateVote final
{
public:
	EDelMarPostRaceVote                           NewVote;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRichTextInputSwitcher.SetInputText
// 0x0030 (0x0030 - 0x0000)
struct DelMarRichTextInputSwitcher_SetInputText final
{
public:
	class FText                                   InTextKBM;                                         // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FText                                   InTextGamepad;                                     // 0x0010(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FText                                   InTextTouch;                                       // 0x0020(0x0010)(Parm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.SelectNextElement
// 0x0001 (0x0001 - 0x0000)
struct DelMarSelectionListViewModel_SelectNextElement final
{
public:
	bool                                          bAllowWrap;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.SelectPreviousElement
// 0x0001 (0x0001 - 0x0000)
struct DelMarSelectionListViewModel_SelectPreviousElement final
{
public:
	bool                                          bAllowWrap;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.SetSelectedElement
// 0x0008 (0x0008 - 0x0000)
struct DelMarSelectionListViewModel_SetSelectedElement final
{
public:
	class UMVVMViewModelBase*                     InSelectedElement;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.SetSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct DelMarSelectionListViewModel_SetSelectedIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.GetSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct DelMarSelectionListViewModel_GetSelectedIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.HasSelection
// 0x0001 (0x0001 - 0x0000)
struct DelMarSelectionListViewModel_HasSelection final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarSelectionListViewModel.SelectedElement
// 0x0008 (0x0008 - 0x0000)
struct DelMarSelectionListViewModel_SelectedElement final
{
public:
	class UMVVMViewModelBase*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchWidgetBase.GetPixelsPerInch
// 0x0004 (0x0004 - 0x0000)
struct DelMarTouchWidgetBase_GetPixelsPerInch final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchWidgetBase.OnActiveInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarTouchWidgetBase_OnActiveInputModeChanged final
{
public:
	ECommonInputMode                              NewInputMode;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchWidgetBase.OnInputInjectionEnded
// 0x0080 (0x0080 - 0x0000)
struct DelMarTouchWidgetBase_OnInputInjectionEnded final
{
public:
	struct FPointerEvent                          InGestureEvent;                                    // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EDelMarInputInjectionState                    InInjectedState;                                   // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarTouchWidgetBase.OnInputInjectionStarted
// 0x0080 (0x0080 - 0x0000)
struct DelMarTouchWidgetBase_OnInputInjectionStarted final
{
public:
	struct FPointerEvent                          InGestureEvent;                                    // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EDelMarInputInjectionState                    InInjectedState;                                   // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarTouchWidgetBase.OnTrackedInputEnded
// 0x0080 (0x0080 - 0x0000)
struct DelMarTouchWidgetBase_OnTrackedInputEnded final
{
public:
	struct FPointerEvent                          InGestureEvent;                                    // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bCancelled;                                        // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarTouchWidgetBase.OnTrackedInputStarted
// 0x0078 (0x0078 - 0x0000)
struct DelMarTouchWidgetBase_OnTrackedInputStarted final
{
public:
	struct FPointerEvent                          InGestureEvent;                                    // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchWidgetBase.OnTrackedInputUpdated
// 0x0078 (0x0078 - 0x0000)
struct DelMarTouchWidgetBase_OnTrackedInputUpdated final
{
public:
	struct FPointerEvent                          InGestureEvent;                                    // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchWidgetBase.GetHitboxGeometry
// 0x0038 (0x0038 - 0x0000)
struct DelMarTouchWidgetBase_GetHitboxGeometry final
{
public:
	struct FGeometry                              ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchWidgetBase.IsGestureInsideHitbox
// 0x0080 (0x0080 - 0x0000)
struct DelMarTouchWidgetBase_IsGestureInsideHitbox final
{
public:
	struct FPointerEvent                          InGestureEvent;                                    // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarTouchActionButton.CanSetState
// 0x0002 (0x0002 - 0x0000)
struct DelMarTouchActionButton_CanSetState final
{
public:
	EDelMarTouchActionButtonState                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchActionButton.SetBackgroundBrush
// 0x00C0 (0x00C0 - 0x0000)
struct DelMarTouchActionButton_SetBackgroundBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchActionButton.SetButtonState
// 0x0002 (0x0002 - 0x0000)
struct DelMarTouchActionButton_SetButtonState final
{
public:
	EDelMarTouchActionButtonState                 NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchActionButton.SetHighlightActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarTouchActionButton_SetHighlightActive final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchActionButton.SetIconBrush
// 0x00C0 (0x00C0 - 0x0000)
struct DelMarTouchActionButton_SetIconBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchActionButton.GetState
// 0x0001 (0x0001 - 0x0000)
struct DelMarTouchActionButton_GetState final
{
public:
	EDelMarTouchActionButtonState                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchActionButton.GetStateOnStopInputTracking
// 0x0002 (0x0002 - 0x0000)
struct DelMarTouchActionButton_GetStateOnStopInputTracking final
{
public:
	bool                                          bInputCancelled;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarTouchActionButtonState                 ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchRegion.FindButtonByInputAction
// 0x0010 (0x0010 - 0x0000)
struct DelMarTouchRegion_FindButtonByInputAction final
{
public:
	class UInputAction*                           InputAction;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDelMarTouchActionButton*               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTouchRegion.SetHighlightForInputAction
// 0x0008 (0x0008 - 0x0000)
struct DelMarTouchRegion_SetHighlightForInputAction final
{
public:
	class UInputAction*                           InputAction;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarAttachedWidgetSetEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarAttachedWidgetSetEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarCheckpointDebugWidgetSetVisible
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarCheckpointDebugWidgetSetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarDriverCameraSetHidden
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarDriverCameraSetHidden final
{
public:
	bool                                          bHidden;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarDriverCameraSetReactiveType
// 0x0004 (0x0004 - 0x0000)
struct DelMarUICheatManager_DelMarDriverCameraSetReactiveType final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarMapNameDebugWidgetSetVisible
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarMapNameDebugWidgetSetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarPlayerIndicatorsVisible
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarPlayerIndicatorsVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarRequestDialogByTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarUICheatManager_DelMarRequestDialogByTag final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarRubberbandingWidgetSetVisible
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarRubberbandingWidgetSetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarSetHint
// 0x0018 (0x0018 - 0x0000)
struct DelMarUICheatManager_DelMarSetHint final
{
public:
	class FText                                   HintText;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	float                                         RemoveAfterDelay;                                  // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarUICheatManager.DelMarTouchHUD
// 0x0010 (0x0010 - 0x0000)
struct DelMarUICheatManager_DelMarTouchHUD final
{
public:
	class FString                                 TouchHUDType;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarUISetVisible
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarUISetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarUseToggleForExpandableHudWidget
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarUseToggleForExpandableHudWidget final
{
public:
	bool                                          bUseToggle;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUICheatManager.DelMarVehicleDebugWidgetSetVisible
// 0x0001 (0x0001 - 0x0000)
struct DelMarUICheatManager_DelMarVehicleDebugWidgetSetVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.UIAnimationController.GetDuration
// 0x0004 (0x0004 - 0x0000)
struct UIAnimationController_GetDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.UIAnimationController.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct UIAnimationController_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.UITimelineAnimationController.CreateInstance
// 0x0018 (0x0018 - 0x0000)
struct UITimelineAnimationController_CreateInstance final
{
public:
	class UUserWidget*                            WidgetTarget_0;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Animation_0;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUITimelineAnimationController*         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.WidgetTransitioner.CreateInstance
// 0x0018 (0x0018 - 0x0000)
struct WidgetTransitioner_CreateInstance final
{
public:
	class UWidget*                                TargetWidget_0;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWidgetTransitionerInitialStatus              InitialStatus;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              HiddenVisibility_0;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              ShownVisibility_0;                                 // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AlwaysReverseInterruptedAnimations;                // 0x000B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetTransitioner*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.WidgetTransitioner.AddHintedTransitionIn
// 0x0018 (0x0018 - 0x0000)
struct WidgetTransitioner_AddHintedTransitionIn final
{
public:
	struct FGameplayTag                           InAnimationHint;                                   // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIAnimationController*                 InAnimationIn;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.WidgetTransitioner.AddHintedTransitionOut
// 0x0018 (0x0018 - 0x0000)
struct WidgetTransitioner_AddHintedTransitionOut final
{
public:
	struct FGameplayTag                           InAnimationHint;                                   // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIAnimationController*                 InAnimationOut;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.WidgetTransitioner.AddHintedTransitionPair
// 0x0018 (0x0018 - 0x0000)
struct WidgetTransitioner_AddHintedTransitionPair final
{
public:
	struct FGameplayTag                           InAnimationHint;                                   // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIAnimationController*                 InAnimation;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTransitionIn;                                   // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.WidgetTransitioner.BP_Hide
// 0x0028 (0x0028 - 0x0000)
struct WidgetTransitioner_BP_Hide final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AnimationHints;                                    // 0x0008(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.WidgetTransitioner.BP_Initialize
// 0x0018 (0x0018 - 0x0000)
struct WidgetTransitioner_BP_Initialize final
{
public:
	class UWidget*                                TargetWidget_0;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWidgetTransitionerInitialStatus              InitialStatus;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              HiddenVisibility_0;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              ShownVisibility_0;                                 // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AlwaysReverseInterruptedAnimations;                // 0x000B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetTransitioner*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.WidgetTransitioner.BP_Show
// 0x0028 (0x0028 - 0x0000)
struct WidgetTransitioner_BP_Show final
{
public:
	bool                                          bSkipAnimation;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AnimationHints;                                    // 0x0008(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.WidgetTransitioner.SetNormalTransitionIn
// 0x0010 (0x0010 - 0x0000)
struct WidgetTransitioner_SetNormalTransitionIn final
{
public:
	class UUIAnimationController*                 InAnimationIn;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.WidgetTransitioner.SetNormalTransitionOut
// 0x0010 (0x0010 - 0x0000)
struct WidgetTransitioner_SetNormalTransitionOut final
{
public:
	class UUIAnimationController*                 InAnimationOut;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.WidgetTransitioner.SetNormalTransitionPair
// 0x0010 (0x0010 - 0x0000)
struct WidgetTransitioner_SetNormalTransitionPair final
{
public:
	class UUIAnimationController*                 InAnimation;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTransitionIn;                                   // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.WidgetTransitioner.GetTransitionerStatus
// 0x0001 (0x0001 - 0x0000)
struct WidgetTransitioner_GetTransitionerStatus final
{
public:
	EWidgetTransitionerStatus                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.WidgetTransitioner.IsHidden
// 0x0001 (0x0001 - 0x0000)
struct WidgetTransitioner_IsHidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.SetEnhancedInputAction
// 0x0008 (0x0008 - 0x0000)
struct DelMarActionWidget_SetEnhancedInputAction final
{
public:
	class UInputAction*                           InInputAction;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.SetIconRimBrush
// 0x00C0 (0x00C0 - 0x0000)
struct DelMarActionWidget_SetIconRimBrush final
{
public:
	struct FSlateBrush                            InIconRimBrush;                                    // 0x0000(0x00C0)(Parm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.SetInputAction
// 0x0010 (0x0010 - 0x0000)
struct DelMarActionWidget_SetInputAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.SetInputActions
// 0x0010 (0x0010 - 0x0000)
struct DelMarActionWidget_SetInputActions final
{
public:
	TArray<struct FDataTableRowHandle>            NewInputActions;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.GetDisplayText
// 0x0010 (0x0010 - 0x0000)
struct DelMarActionWidget_GetDisplayText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.GetIcon
// 0x00C0 (0x00C0 - 0x0000)
struct DelMarActionWidget_GetIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00C0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarActionWidget.IsHeldAction
// 0x0001 (0x0001 - 0x0000)
struct DelMarActionWidget_IsHeldAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarLoadingScreenHelper.PrepareDelMarLoadingScreen
// 0x0008 (0x0008 - 0x0000)
struct DelMarLoadingScreenHelper_PrepareDelMarLoadingScreen final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarUIDirector.SetLoadingScreenVisibiliy
// 0x0001 (0x0001 - 0x0000)
struct DelMarUIDirector_SetLoadingScreenVisibiliy final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarAttachedWidgetComponent.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarAttachedWidgetComponent_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarStartlineCountdownWidget.BP_OnActiveIntervalsChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarStartlineCountdownWidget_BP_OnActiveIntervalsChanged final
{
public:
	int32                                         NumActiveIntervals;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarStartlineCountdownWidget.BP_OnCountdownStarted
// 0x0004 (0x0004 - 0x0000)
struct DelMarStartlineCountdownWidget_BP_OnCountdownStarted final
{
public:
	int32                                         TotalIntervals;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarStartlineCountdownWidget.BP_OnStartlineBoostActivated
// 0x0004 (0x0004 - 0x0000)
struct DelMarStartlineCountdownWidget_BP_OnStartlineBoostActivated final
{
public:
	float                                         PercentageMaxBonusSpeedEarned;                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarStartlineCountdownWidget.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarStartlineCountdownWidget_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  PC;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Old;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarStartlineCountdownWidget.GetNumActiveIntervals
// 0x0004 (0x0004 - 0x0000)
struct DelMarStartlineCountdownWidget_GetNumActiveIntervals final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarStartlineCountdownWidget.GetNumTotalIntervals
// 0x0004 (0x0004 - 0x0000)
struct DelMarStartlineCountdownWidget_GetNumTotalIntervals final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarCheckpointTrackerEntryWidget.BP_OnDisplayedCheckpointChanged
// 0x0020 (0x0020 - 0x0000)
struct DelMarCheckpointTrackerEntryWidget_BP_OnDisplayedCheckpointChanged final
{
public:
	struct FDelMarSectionData                     InSectionData;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bNewEntry;                                         // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarCheckpointTrackerWidget.UpdateCheckpoints
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheckpointTrackerWidget_UpdateCheckpoints final
{
public:
	TArray<struct FDelMarSectionData>             InCheckpoints;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarReadyUpWidget.BP_OnReadyUpChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarReadyUpWidget_BP_OnReadyUpChanged final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarReadyUpWidget.BP_ReadyUp
// 0x0001 (0x0001 - 0x0000)
struct DelMarReadyUpWidget_BP_ReadyUp final
{
public:
	bool                                          bReady;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTurboBonusZoneWidget.BP_OnTurboZoneStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarTurboBonusZoneWidget_BP_OnTurboZoneStateChanged final
{
public:
	EDelMarTurboZoneState                         NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarTurboBonusZoneWidget.HandleTurboStateChange
// 0x0001 (0x0001 - 0x0000)
struct DelMarTurboBonusZoneWidget_HandleTurboStateChange final
{
public:
	EDelMarTurboZoneState                         NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPositionalTrackerEntryWidget.RefreshPlayerInfo
// 0x0001 (0x0001 - 0x0000)
struct DelMarPositionalTrackerEntryWidget_RefreshPlayerInfo final
{
public:
	bool                                          IsTargetPlayer;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPositionalTrackerEntryWidget.SetDisplayedPlayer
// 0x0008 (0x0008 - 0x0000)
struct DelMarPositionalTrackerEntryWidget_SetDisplayedPlayer final
{
public:
	class UDelMarPlayerViewModel*                 InPlayerModel;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPostRaceRankedRecap.GetFailsafeDelayDuration
// 0x0004 (0x0004 - 0x0000)
struct DelMarPostRaceRankedRecap_GetFailsafeDelayDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarBoundActionButton.BP_OnActionProgress
// 0x0004 (0x0004 - 0x0000)
struct DelMarBoundActionButton_BP_OnActionProgress final
{
public:
	float                                         HoldPercentage;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarBoundActionButton.BP_SetText
// 0x0010 (0x0010 - 0x0000)
struct DelMarBoundActionButton_BP_SetText final
{
public:
	class FText                                   ButtonText;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarBladeMenuTriggerUIStateComponent.NativeHandleCursorModeChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarBladeMenuTriggerUIStateComponent_NativeHandleCursorModeChanged final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarGameplayContextUpdaterUIStateComponent.HandleSpectatorViewTargetChange
// 0x0018 (0x0018 - 0x0000)
struct DelMarGameplayContextUpdaterUIStateComponent_HandleSpectatorViewTargetChange final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarGameplayContextUpdaterUIStateComponent.HandleTouchControlsLayoutChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarGameplayContextUpdaterUIStateComponent_HandleTouchControlsLayoutChanged final
{
public:
	struct FGameplayTag                           Layout;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarLocalPlayerSettingsViewModel.HandleNameplatesSettingChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarLocalPlayerSettingsViewModel_HandleNameplatesSettingChanged final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarPlayerViewModel.GetPlayerState
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerViewModel_GetPlayerState final
{
public:
	class AFortPlayerState*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRaceViewModel.HandleFinalRacePositionsChanged
// 0x0060 (0x0060 - 0x0000)
struct DelMarRaceViewModel_HandleFinalRacePositionsChanged final
{
public:
	TArray<struct FDelMarFinalRacePositionEntry>  FinalRacePositions;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDelMarEvent_RunRecorded               RecordedRun;                                       // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRaceViewModel.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarRaceViewModel_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  PC;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Old;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleAnyWheelsOnGroundChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleViewModel_HandleAnyWheelsOnGroundChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarUI.DelMarVehicleViewModel.HandleDemolishPressDurationUpdated
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleDemolishPressDurationUpdated final
{
public:
	float                                         PressedDurationPercentage;                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleDriftSlipAngleRatioChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleDriftSlipAngleRatioChanged final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleMissedCheckpointCountdownInitiated
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleViewModel_HandleMissedCheckpointCountdownInitiated final
{
public:
	struct FDelMarEvent_MissedCheckpointDemoCountdown Event;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleOnThrottleInput
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleOnThrottleInput final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleOnVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleOnVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandlePotentialDriftBoostChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandlePotentialDriftBoostChanged final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleReturnToTrackCountdownInitiated
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleViewModel_HandleReturnToTrackCountdownInitiated final
{
public:
	struct FDelMarEvent_ReturnToTrackDemoCountdown Event;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleSpeedometerSpeedChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleSpeedometerSpeedChanged final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleStartlineBoostActivated
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleStartlineBoostActivated final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleToggleThrottleSettingChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleViewModel_HandleToggleThrottleSettingChanged final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleTurboBonusZoneChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleViewModel_HandleTurboBonusZoneChanged final
{
public:
	EDelMarTurboZoneState                         InTurboBonusZoneState;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleUnderthrustPercentChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleViewModel_HandleUnderthrustPercentChanged final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.HandleWrongwayIndication
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleViewModel_HandleWrongwayIndication final
{
public:
	struct FDelMarEvent_VehicleWrongwayStatus     Event;                                             // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarVehicleViewModel.Initialize
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleViewModel_Initialize final
{
public:
	class AFortPlayerState*                       InPlayerState;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementChangeVM.GetCurrentPlacement
// 0x0008 (0x0008 - 0x0000)
struct DelMarRankedPlacementChangeVM_GetCurrentPlacement final
{
public:
	class UDelMarRankedPlacementVM*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementChangeVM.GetInitialPlacement
// 0x0008 (0x0008 - 0x0000)
struct DelMarRankedPlacementChangeVM_GetInitialPlacement final
{
public:
	class UDelMarRankedPlacementVM*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementChangeVM.GetIsDataValid
// 0x0001 (0x0001 - 0x0000)
struct DelMarRankedPlacementChangeVM_GetIsDataValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementChangeVM.GetPositionDelta
// 0x0004 (0x0004 - 0x0000)
struct DelMarRankedPlacementChangeVM_GetPositionDelta final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementVM.GetIsDataValid
// 0x0001 (0x0001 - 0x0000)
struct DelMarRankedPlacementVM_GetIsDataValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementVM.GetIsUnranked
// 0x0001 (0x0001 - 0x0000)
struct DelMarRankedPlacementVM_GetIsUnranked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementVM.GetPlayerPosition
// 0x0004 (0x0004 - 0x0000)
struct DelMarRankedPlacementVM_GetPlayerPosition final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementVM.GetProgressTowardNextTier
// 0x0004 (0x0004 - 0x0000)
struct DelMarRankedPlacementVM_GetProgressTowardNextTier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementVM.GetTierIndex
// 0x0004 (0x0004 - 0x0000)
struct DelMarRankedPlacementVM_GetTierIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedPlacementVM.TierDisplayData
// 0x00D8 (0x00D8 - 0x0000)
struct DelMarRankedPlacementVM_TierDisplayData final
{
public:
	struct FFortHabaneroTier                      ReturnValue;                                       // 0x0000(0x00D8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarUI.DelMarRankedRecapVM.GetUnrankedTierData
// 0x00E0 (0x00E0 - 0x0000)
struct DelMarRankedRecapVM_GetUnrankedTierData final
{
public:
	struct FFortHabaneroTier                      OutUnrankedTierData;                               // 0x0000(0x00D8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

}

