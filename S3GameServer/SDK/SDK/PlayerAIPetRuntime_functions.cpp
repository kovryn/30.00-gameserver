#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAIPetRuntime

#include "Basic.hpp"

#include "PlayerAIPetRuntime_classes.hpp"
#include "PlayerAIPetRuntime_parameters.hpp"


namespace SDK
{

// Function PlayerAIPetRuntime.PlayerAIPetCheatManager.AttachPlayerPet
// (Final, Exec, Native, Public)

void UPlayerAIPetCheatManager::AttachPlayerPet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAIPetCheatManager", "AttachPlayerPet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.PlayerAIPetCheatManager.CustomPlayerPetCheat
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Param1                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Param2                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Param3                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerAIPetCheatManager::CustomPlayerPetCheat(const class FString& Command, const class FString& Param1, const class FString& Param2, const class FString& Param3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAIPetCheatManager", "CustomPlayerPetCheat");

	Params::PlayerAIPetCheatManager_CustomPlayerPetCheat Parms{};

	Parms.Command = std::move(Command);
	Parms.Param1 = std::move(Param1);
	Parms.Param2 = std::move(Param2);
	Parms.Param3 = std::move(Param3);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.PlayerAIPetCheatManager.DespawnPlayerPet
// (Final, Exec, Native, Public)

void UPlayerAIPetCheatManager::DespawnPlayerPet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAIPetCheatManager", "DespawnPlayerPet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.PlayerAIPetCheatManager.DetachPlayerPet
// (Final, Exec, Native, Public)

void UPlayerAIPetCheatManager::DetachPlayerPet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAIPetCheatManager", "DetachPlayerPet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.PlayerAIPetCheatManager.SpawnPlayerPet
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    PetToSpawn                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerAIPetCheatManager::SpawnPlayerPet(const class FString& PetToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAIPetCheatManager", "SpawnPlayerPet");

	Params::PlayerAIPetCheatManager_SpawnPlayerPet Parms{};

	Parms.PetToSpawn = std::move(PetToSpawn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.PlayerAIPetCheatManager.SpawnPlayerPetForAllPlayers
// (Final, Exec, Native, Public)
// Parameters:
// const class FString&                    PetToSpawn                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerAIPetCheatManager::SpawnPlayerPetForAllPlayers(const class FString& PetToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAIPetCheatManager", "SpawnPlayerPetForAllPlayers");

	Params::PlayerAIPetCheatManager_SpawnPlayerPetForAllPlayers Parms{};

	Parms.PetToSpawn = std::move(PetToSpawn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.FortAIPawnComponent_PlayerAIPet.OnPetSpawned
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIPawnComponent_PlayerAIPet::OnPetSpawned(class AFortPlayerPawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawnComponent_PlayerAIPet", "OnPetSpawned");

	Params::FortAIPawnComponent_PlayerAIPet_OnPetSpawned Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.FortAIPawnComponent_PlayerAIPet.SetCurrentPlayer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  NewPlayer                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIPawnComponent_PlayerAIPet::SetCurrentPlayer(class AFortPlayerPawn* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawnComponent_PlayerAIPet", "SetCurrentPlayer");

	Params::FortAIPawnComponent_PlayerAIPet_SetCurrentPlayer Parms{};

	Parms.NewPlayer = NewPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.FortControllerComponent_PlayerAIPet.AttachPet
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_PlayerAIPet::AttachPet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_PlayerAIPet", "AttachPet");

	Params::FortControllerComponent_PlayerAIPet_AttachPet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayerAIPetRuntime.FortControllerComponent_PlayerAIPet.CustomCheat
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Param1                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Param2                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Param3                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_PlayerAIPet::CustomCheat(const class FString& Command, const class FString& Param1, const class FString& Param2, const class FString& Param3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_PlayerAIPet", "CustomCheat");

	Params::FortControllerComponent_PlayerAIPet_CustomCheat Parms{};

	Parms.Command = std::move(Command);
	Parms.Param1 = std::move(Param1);
	Parms.Param2 = std::move(Param2);
	Parms.Param3 = std::move(Param3);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerAIPetRuntime.FortControllerComponent_PlayerAIPet.DespawnPet
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_PlayerAIPet::DespawnPet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_PlayerAIPet", "DespawnPet");

	Params::FortControllerComponent_PlayerAIPet_DespawnPet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayerAIPetRuntime.FortControllerComponent_PlayerAIPet.DetachPet
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortControllerComponent_PlayerAIPet::DetachPet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_PlayerAIPet", "DetachPet");

	Params::FortControllerComponent_PlayerAIPet_DetachPet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayerAIPetRuntime.FortControllerComponent_PlayerAIPet.SetCurrentPet
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class AFortAIPawn*                      NewPet                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_PlayerAIPet::SetCurrentPet(class AFortAIPawn* NewPet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_PlayerAIPet", "SetCurrentPet");

	Params::FortControllerComponent_PlayerAIPet_SetCurrentPet Parms{};

	Parms.NewPet = NewPet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayerAIPetRuntime.FortControllerComponent_PlayerAIPet.SpawnPet
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PetToSpawn                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortControllerComponent_PlayerAIPet::SpawnPet(const class FString& PetToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControllerComponent_PlayerAIPet", "SpawnPet");

	Params::FortControllerComponent_PlayerAIPet_SpawnPet Parms{};

	Parms.PetToSpawn = std::move(PetToSpawn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

