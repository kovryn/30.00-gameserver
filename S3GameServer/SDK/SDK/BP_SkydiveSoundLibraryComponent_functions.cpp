#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkydiveSoundLibraryComponent

#include "Basic.hpp"

#include "BP_SkydiveSoundLibraryComponent_classes.hpp"
#include "BP_SkydiveSoundLibraryComponent_parameters.hpp"


namespace SDK
{

// Function BP_SkydiveSoundLibraryComponent.BP_SkydiveSoundLibraryComponent_C.ExecuteUbergraph_BP_SkydiveSoundLibraryComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkydiveSoundLibraryComponent_C::ExecuteUbergraph_BP_SkydiveSoundLibraryComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkydiveSoundLibraryComponent_C", "ExecuteUbergraph_BP_SkydiveSoundLibraryComponent");

	Params::BP_SkydiveSoundLibraryComponent_C_ExecuteUbergraph_BP_SkydiveSoundLibraryComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkydiveSoundLibraryComponent.BP_SkydiveSoundLibraryComponent_C.OnEventPlayed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InEventName                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_SkydiveSoundLibraryComponent_C::OnEventPlayed(const struct FGameplayTag& InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkydiveSoundLibraryComponent_C", "OnEventPlayed");

	Params::BP_SkydiveSoundLibraryComponent_C_OnEventPlayed Parms{};

	Parms.InEventName = std::move(InEventName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkydiveSoundLibraryComponent.BP_SkydiveSoundLibraryComponent_C.OnSoundPlayed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InEventName                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkydiveSoundLibraryComponent_C::OnSoundPlayed(const struct FGameplayTag& InEventName, class UAudioComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkydiveSoundLibraryComponent_C", "OnSoundPlayed");

	Params::BP_SkydiveSoundLibraryComponent_C_OnSoundPlayed Parms{};

	Parms.InEventName = std::move(InEventName);
	Parms.InComponent = InComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkydiveSoundLibraryComponent.BP_SkydiveSoundLibraryComponent_C.OnSoundStopped
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InEventName                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   bStopped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkydiveSoundLibraryComponent_C::OnSoundStopped(const struct FGameplayTag& InEventName, class UAudioComponent* InComponent, bool* bStopped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkydiveSoundLibraryComponent_C", "OnSoundStopped");

	Params::BP_SkydiveSoundLibraryComponent_C_OnSoundStopped Parms{};

	Parms.InEventName = std::move(InEventName);
	Parms.InComponent = InComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bStopped != nullptr)
		*bStopped = Parms.bStopped;
}


// Function BP_SkydiveSoundLibraryComponent.BP_SkydiveSoundLibraryComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_SkydiveSoundLibraryComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkydiveSoundLibraryComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

