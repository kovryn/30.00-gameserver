#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoWheelsDemoRuntime

#include "Basic.hpp"

#include "JunoWheelsDemoRuntime_classes.hpp"
#include "JunoWheelsDemoRuntime_parameters.hpp"


namespace SDK
{

// Function JunoWheelsDemoRuntime.JunoWheelActor.AttachToUsingCachedData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InAttachComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AJunoWheelActor::AttachToUsingCachedData(class UPrimitiveComponent* InAttachComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "AttachToUsingCachedData");

	Params::JunoWheelActor_AttachToUsingCachedData Parms{};

	Parms.InAttachComponent = InAttachComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.BlueprintFillContextInfo
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInteractionType&          InteractType                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UFortInteractContextInfo*         ContextInfo                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::BlueprintFillContextInfo(const struct FInteractionType& InteractType, class UFortInteractContextInfo* ContextInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "BlueprintFillContextInfo");

	Params::JunoWheelActor_BlueprintFillContextInfo Parms{};

	Parms.InteractType = std::move(InteractType);
	Parms.ContextInfo = ContextInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.BlueprintOnInteract
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "BlueprintOnInteract");

	Params::JunoWheelActor_BlueprintOnInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.Die
// (Final, BlueprintAuthorityOnly, Native, Private, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              DeathReason                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      Killer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::Die(const struct FGameplayTag& DeathReason, class AController* Killer, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "Die");

	Params::JunoWheelActor_Die Parms{};

	Parms.DeathReason = std::move(DeathReason);
	Parms.Killer = Killer;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.GameplayCue_Damage
// (Final, Native, Public)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AJunoWheelActor::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "GameplayCue_Damage");

	Params::JunoWheelActor_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.GetActorRef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AJunoWheelActor::GetActorRef()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "GetActorRef");

	Params::JunoWheelActor_GetActorRef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.HandleDamaged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&EffectContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::HandleDamaged(float Damage, const struct FGameplayTagContainer& InTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "HandleDamaged");

	Params::JunoWheelActor_HandleDamaged Parms{};

	Parms.Damage = Damage;
	Parms.InTags = std::move(InTags);
	Parms.EffectContext = std::move(EffectContext);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.HandleOutOfHealth
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const float                             InDamage                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     InTags                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGameplayEffectContextHandle&InEffectContext                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*                      InEventInstigator                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::HandleOutOfHealth(const float InDamage, const struct FGameplayTagContainer& InTags, const struct FGameplayEffectContextHandle& InEffectContext, class AController* InEventInstigator, class AActor* InDamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "HandleOutOfHealth");

	Params::JunoWheelActor_HandleOutOfHealth Parms{};

	Parms.InDamage = InDamage;
	Parms.InTags = std::move(InTags);
	Parms.InEffectContext = std::move(InEffectContext);
	Parms.InEventInstigator = InEventInstigator;
	Parms.InDamageCauser = InDamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.K2_AddGameplayCueWithParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AJunoWheelActor::K2_AddGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "K2_AddGameplayCueWithParams");

	Params::JunoWheelActor_K2_AddGameplayCueWithParams Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.K2_ExecuteGameplayCueWithParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AJunoWheelActor::K2_ExecuteGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "K2_ExecuteGameplayCueWithParams");

	Params::JunoWheelActor_K2_ExecuteGameplayCueWithParams Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.K2_RemoveGameplayCue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayCueParameters&    GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AJunoWheelActor::K2_RemoveGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "K2_RemoveGameplayCue");

	Params::JunoWheelActor_K2_RemoveGameplayCue Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.OnHeldObjectPickedUp
// (Final, Native, Private)

void AJunoWheelActor::OnHeldObjectPickedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "OnHeldObjectPickedUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.OnLocalInteractStart
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AFortPlayerController*      FortPC                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::OnLocalInteractStart(const class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "OnLocalInteractStart");

	Params::JunoWheelActor_OnLocalInteractStart Parms{};

	Parms.FortPC = FortPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.OnLocalInteractStop
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class AFortPlayerController*      FortPC                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::OnLocalInteractStop(const class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "OnLocalInteractStop");

	Params::JunoWheelActor_OnLocalInteractStop Parms{};

	Parms.FortPC = FortPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.SetActorRef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewActorRef                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::SetActorRef(class AActor* NewActorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "SetActorRef");

	Params::JunoWheelActor_SetActorRef Parms{};

	Parms.NewActorRef = NewActorRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.SetAssociatedItem
// (Native, Public, BlueprintCallable)
// Parameters:
// const class UItemDefinitionBase*        ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::SetAssociatedItem(const class UItemDefinitionBase* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "SetAssociatedItem");

	Params::JunoWheelActor_SetAssociatedItem Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.SetControlChannel_AngularVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InChannelTag                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::SetControlChannel_AngularVelocity(const struct FGameplayTag& InChannelTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "SetControlChannel_AngularVelocity");

	Params::JunoWheelActor_SetControlChannel_AngularVelocity Parms{};

	Parms.InChannelTag = std::move(InChannelTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.SetControlChannel_Brake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InChannelTag                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::SetControlChannel_Brake(const struct FGameplayTag& InChannelTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "SetControlChannel_Brake");

	Params::JunoWheelActor_SetControlChannel_Brake Parms{};

	Parms.InChannelTag = std::move(InChannelTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.SetControlChannel_SteerAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              InChannelTag                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJunoWheelActor::SetControlChannel_SteerAngle(const struct FGameplayTag& InChannelTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "SetControlChannel_SteerAngle");

	Params::JunoWheelActor_SetControlChannel_SteerAngle Parms{};

	Parms.InChannelTag = std::move(InChannelTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.BlueprintCanInteract
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ETInteractionType                 InteractionType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AJunoWheelActor::BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "BlueprintCanInteract");

	Params::JunoWheelActor_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.BlueprintGetInteractionString
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AJunoWheelActor::BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "BlueprintGetInteractionString");

	Params::JunoWheelActor_BlueprintGetInteractionString Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.BlueprintGetInteractionTime
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// const class AFortPawn*                  InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutInteractionTime                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EInteractionBeingAttempted        InteractionBeingAttempted                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AJunoWheelActor::BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "BlueprintGetInteractionTime");

	Params::JunoWheelActor_BlueprintGetInteractionTime Parms{};

	Parms.InteractingPawn = InteractingPawn;
	Parms.InteractionBeingAttempted = InteractionBeingAttempted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInteractionTime != nullptr)
		*OutInteractionTime = Parms.OutInteractionTime;

	return Parms.ReturnValue;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AJunoWheelActor::GetHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "GetHealth");

	Params::JunoWheelActor_GetHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoWheelsDemoRuntime.JunoWheelActor.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AJunoWheelActor::GetMaxHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoWheelActor", "GetMaxHealth");

	Params::JunoWheelActor_GetMaxHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

