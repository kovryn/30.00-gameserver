#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SideloadedAnimationRuntime

#include "Basic.hpp"

#include "SideloadedAnimationRuntime_classes.hpp"
#include "SideloadedAnimationRuntime_parameters.hpp"


namespace SDK
{

// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.AddMetaData
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMetaData*                    MetaDataInstance                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimSequenceSideloaded::AddMetaData(class UAnimMetaData* MetaDataInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "AddMetaData");

	Params::AnimSequenceSideloaded_AddMetaData Parms{};

	Parms.MetaDataInstance = MetaDataInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.ClearSideloadData
// (Final, RequiredAPI, Native, Public, BlueprintCallable)

void UAnimSequenceSideloaded::ClearSideloadData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "ClearSideloadData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.SetSkeleton
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class USkeleton*                        InSkeleton                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnimSequenceSideloaded::SetSkeleton(class USkeleton* InSkeleton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "SetSkeleton");

	Params::AnimSequenceSideloaded_SetSkeleton Parms{};

	Parms.InSkeleton = InSkeleton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.SideloadData
// (Final, RequiredAPI, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    Memory                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimSequenceSideloaded::SideloadData(const TArray<uint8>& Memory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "SideloadData");

	Params::AnimSequenceSideloaded_SideloadData Parms{};

	Parms.Memory = std::move(Memory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.GetSideloadUserDataFloat
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAnimSequenceSideloaded::GetSideloadUserDataFloat(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "GetSideloadUserDataFloat");

	Params::AnimSequenceSideloaded_GetSideloadUserDataFloat Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.GetSideloadUserDataString
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAnimSequenceSideloaded::GetSideloadUserDataString(const class FString& Key) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "GetSideloadUserDataString");

	Params::AnimSequenceSideloaded_GetSideloadUserDataString Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SideloadedAnimationRuntime.AnimSequenceSideloaded.LoadDataFromFile
// (Final, RequiredAPI, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// const class FString&                    Location                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>&                          Memory                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnimSequenceSideloaded::LoadDataFromFile(const class FString& Location, TArray<uint8>& Memory) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimSequenceSideloaded", "LoadDataFromFile");

	Params::AnimSequenceSideloaded_LoadDataFromFile Parms{};

	Parms.Location = std::move(Location);
	Parms.Memory = std::move(Memory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Memory = std::move(Parms.Memory);

	return Parms.ReturnValue;
}

}

