#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarCore

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "DelMarCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "LinkId_structs.hpp"
#include "CosmeticsFrameworkLoadouts_structs.hpp"


namespace SDK::Params
{

// Function DelMarCore.DelMarAIController.HandleGroundedStateChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarAIController_HandleGroundedStateChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarAIService.HandlePlayerRegistered
// 0x0008 (0x0008 - 0x0000)
struct DelMarAIService_HandlePlayerRegistered final
{
public:
	class AFortPlayerState*                       RegisteredPlayerState;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAIService.HandlePlayerUnregistered
// 0x0010 (0x0010 - 0x0000)
struct DelMarAIService_HandlePlayerUnregistered final
{
public:
	class AFortPlayerState*                       UnregisteredPlayerState;                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetAsInactive;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarAIService.GetMaxNumberOfPlayers
// 0x0004 (0x0004 - 0x0000)
struct DelMarAIService_GetMaxNumberOfPlayers final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAIService.GetRegisteredAIBotControllers
// 0x0010 (0x0010 - 0x0000)
struct DelMarAIService_GetRegisteredAIBotControllers final
{
public:
	TArray<class ADelMarAIController*>            ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBTService_FindDriveGoal.HandleKickflipActivated
// 0x0001 (0x0001 - 0x0000)
struct DelMarBTService_FindDriveGoal_HandleKickflipActivated final
{
public:
	bool                                          bLeft;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBTService_FindDriveGoal.HandleVehicleAnyWheelsOnGroundStateChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarBTService_FindDriveGoal_HandleVehicleAnyWheelsOnGroundStateChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnyWheelsOnGround;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarBTTask_DriveTrack.HandleVehicleAnyWheelsOnGroundStateChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarBTTask_DriveTrack_HandleVehicleAnyWheelsOnGroundStateChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnyWheelsOnGround;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarBTTask_DriveTrack.TurboBonusZoneStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarBTTask_DriveTrack_TurboBonusZoneStateChanged final
{
public:
	EDelMarTurboZoneState                         NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.FinalizeRegisteredPlayerInitialization
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_FinalizeRegisteredPlayerInitialization final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.HandleRegisteredPlayerPawnSet
// 0x0018 (0x0018 - 0x0000)
struct DelMarRaceManager_HandleRegisteredPlayerPawnSet final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  OldPawn;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.NetMulticast_FinishRace
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_NetMulticast_FinishRace final
{
public:
	double                                        RaceFinishedTime;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.NetMulticast_ResetRace
// 0x0001 (0x0001 - 0x0000)
struct DelMarRaceManager_NetMulticast_ResetRace final
{
public:
	bool                                          bNextRound;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.NetMulticast_ResetRun
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_NetMulticast_ResetRun final
{
public:
	const class AFortPlayerState*                 InPlayerState;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayerTriggered;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarRaceManager.RegisterPlayerController
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_RegisterPlayerController final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.RegisterPlayerState
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_RegisterPlayerState final
{
public:
	class AFortPlayerState*                       InPlayerState;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.RequestCountdownForPlayer
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_RequestCountdownForPlayer final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.RequestStartRace
// 0x0001 (0x0001 - 0x0000)
struct DelMarRaceManager_RequestStartRace final
{
public:
	bool                                          bSkipCountdown;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.ResetRace
// 0x0001 (0x0001 - 0x0000)
struct DelMarRaceManager_ResetRace final
{
public:
	bool                                          bIsRoundReset;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.ResetRun
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_ResetRun final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayerTriggered;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarRaceManager.SetActiveRaceLevelConfig
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_SetActiveRaceLevelConfig final
{
public:
	class ADelMarRaceLevelConfig*                 InRaceLevelConfig;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.SetPlayerAsSpectator
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_SetPlayerAsSpectator final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.SetSpectatorAsPlayer
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_SetSpectatorAsPlayer final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.UnregisterAllPlayers
// 0x0001 (0x0001 - 0x0000)
struct DelMarRaceManager_UnregisterAllPlayers final
{
public:
	bool                                          bSetAsInactive;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.UnregisterPlayerController
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_UnregisterPlayerController final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetAsInactive;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarRaceManager.UnregisterPlayerState
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_UnregisterPlayerState final
{
public:
	class AFortPlayerState*                       InPlayerState;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetAsInactive;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarRaceManager.GetActiveRaceLevelConfig
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetActiveRaceLevelConfig final
{
public:
	class ADelMarRaceLevelConfig*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetActiveRacers
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_GetActiveRacers final
{
public:
	TArray<class AFortPlayerState*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetCurrentRaceMode
// 0x0001 (0x0001 - 0x0000)
struct DelMarRaceManager_GetCurrentRaceMode final
{
public:
	EDelMarRaceMode                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetCurrentSpawnMode
// 0x0001 (0x0001 - 0x0000)
struct DelMarRaceManager_GetCurrentSpawnMode final
{
public:
	EDelMarRaceSpawnMode                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetEliminationManagerComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetEliminationManagerComponent final
{
public:
	class UDelMarEliminationRaceManagerComponent* ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetManagedPlayerStatesArray
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_GetManagedPlayerStatesArray final
{
public:
	TArray<class AFortPlayerState*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetNumberOfLapsForRace
// 0x0004 (0x0004 - 0x0000)
struct DelMarRaceManager_GetNumberOfLapsForRace final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetNumInactiveRacers
// 0x0004 (0x0004 - 0x0000)
struct DelMarRaceManager_GetNumInactiveRacers final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetPositionalTracker
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetPositionalTracker final
{
public:
	class UDelMarPositionalTrackerComponent*      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetRaceConfig
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetRaceConfig final
{
public:
	class UDelMarRaceConfigComponent*             ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetRespawnManagerComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetRespawnManagerComponent final
{
public:
	class UDelMarRespawnManagerComponent*         ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetRubberbandingManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetRubberbandingManager final
{
public:
	class UDelMarRubberbandingManagerComponent*   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetSpectators
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_GetSpectators final
{
public:
	TArray<class AFortPlayerState*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.GetTimeManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceManager_GetTimeManager final
{
public:
	class UDelMarTimeManagerComponent*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManager.IsActiveRacer
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_IsActiveRacer final
{
public:
	const class AFortPlayerState*                 PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarRaceManager.IsSpectator
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManager_IsSpectator final
{
public:
	const class AFortPlayerState*                 PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarChallengeRaceManager.NetMulticast_StartOvertime
// 0x0008 (0x0008 - 0x0000)
struct DelMarChallengeRaceManager_NetMulticast_StartOvertime final
{
public:
	double                                        RaceFinishTimestamp;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateMachine.RequestState
// 0x0004 (0x0004 - 0x0000)
struct DelMarStateMachine_RequestState final
{
public:
	struct FGameplayTag                           StateTag;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateMachine.GetActiveStateByTag
// 0x0010 (0x0010 - 0x0000)
struct DelMarStateMachine_GetActiveStateByTag final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarState*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateMachine.GetCurrentState
// 0x0008 (0x0008 - 0x0000)
struct DelMarStateMachine_GetCurrentState final
{
public:
	class UDelMarState*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateMachine.GetCurrentStateTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarStateMachine_GetCurrentStateTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateMachine.GetRequestedStateTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarStateMachine_GetRequestedStateTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSpectatorControllerComponent.ServerSetSpectatorTarget
// 0x0008 (0x0008 - 0x0000)
struct DelMarSpectatorControllerComponent_ServerSetSpectatorTarget final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSpectatorControllerComponent.SetIsLateJoinSpectator
// 0x0001 (0x0001 - 0x0000)
struct DelMarSpectatorControllerComponent_SetIsLateJoinSpectator final
{
public:
	bool                                          bNewLateJoinSpectator;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSpectatorControllerComponent.SetSpectatorTarget
// 0x0008 (0x0008 - 0x0000)
struct DelMarSpectatorControllerComponent_SetSpectatorTarget final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSpectatorControllerComponent.IsLateJoinSpectator
// 0x0001 (0x0001 - 0x0000)
struct DelMarSpectatorControllerComponent_IsLateJoinSpectator final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.StartCountdownForPlayer
// 0x0018 (0x0018 - 0x0000)
struct DelMarTimeManagerComponent_StartCountdownForPlayer final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ServerCountdownStartTime;                          // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ServerRunStartTime;                                // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.StartCountdownForRace
// 0x0018 (0x0018 - 0x0000)
struct DelMarTimeManagerComponent_StartCountdownForRace final
{
public:
	double                                        ServerCountdownStartTime;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ServerRunStartTime;                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InServerCountdownIntervalTime;                     // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.GetRaceTimeRemaining
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeManagerComponent_GetRaceTimeRemaining final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.GetSecondsRemainingTillRaceStart
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeManagerComponent_GetSecondsRemainingTillRaceStart final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.GetSecondsSinceRaceStart
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeManagerComponent_GetSecondsSinceRaceStart final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.GetServerCountdownIntervalTime
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeManagerComponent_GetServerCountdownIntervalTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.GetServerRaceFinishTime
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeManagerComponent_GetServerRaceFinishTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeManagerComponent.GetServerRaceStartTime
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeManagerComponent_GetServerRaceStartTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCompetitiveRaceManager.HandleFinalRacePositionsUpdated
// 0x0060 (0x0060 - 0x0000)
struct DelMarCompetitiveRaceManager_HandleFinalRacePositionsUpdated final
{
public:
	TArray<struct FDelMarFinalRacePositionEntry>  FinalRacePositions;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDelMarEvent_RunRecorded               RecordedRun;                                       // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarConnectedHintComponent.HandleActorBeginOverlap
// 0x0010 (0x0010 - 0x0000)
struct DelMarConnectedHintComponent_HandleActorBeginOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarConnectedHintComponent.HandleActorEndOverlap
// 0x0010 (0x0010 - 0x0000)
struct DelMarConnectedHintComponent_HandleActorEndOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarConnectedHintComponent.PassNuxHintTypeToConnectedHintComponent
// 0x0004 (0x0004 - 0x0000)
struct DelMarConnectedHintComponent_PassNuxHintTypeToConnectedHintComponent final
{
public:
	struct FGameplayTag                           HintTypeTag;                                       // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCoreOobTubePositionalRenderingComponent.HandleAIPawnSpawned
// 0x0010 (0x0010 - 0x0000)
struct DelMarCoreOobTubePositionalRenderingComponent_HandleAIPawnSpawned final
{
public:
	class AAIController*                          BotController;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              BotPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCoreOobTubePositionalRenderingComponent.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarCoreOobTubePositionalRenderingComponent_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCoreSplineMeshComponent.OnBeginActorOverlap
// 0x0110 (0x0110 - 0x0000)
struct DelMarCoreSplineMeshComponent_OnBeginActorOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticsDatabase.GetItemsForSlot
// 0x0018 (0x0018 - 0x0000)
struct DelMarCosmeticsDatabase_GetItemsForSlot final
{
public:
	struct FGameplayTag                           Slot;                                              // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDelMarCosmeticItemDefinition*>  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticsDatabase.GetSlotInfos
// 0x0010 (0x0010 - 0x0000)
struct DelMarCosmeticsDatabase_GetSlotInfos final
{
public:
	TArray<struct FDelMarCosmeticSlotInfo>        ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarDriverInteractionComponent.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarDriverInteractionComponent_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGhostSessionComponent.IsSessionActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarGhostSessionComponent_IsSessionActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGhostPlaybackSessionComponent.SetPlaybackLog
// 0x0008 (0x0008 - 0x0000)
struct DelMarGhostPlaybackSessionComponent_SetPlaybackLog final
{
public:
	class UDelMarGhostReplayLog*                  InLog;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGhostPlaybackTrigger.BP_HandlePlaybackCompleted
// 0x0018 (0x0018 - 0x0000)
struct DelMarGhostPlaybackTrigger_BP_HandlePlaybackCompleted final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGhostPlaybackTrigger.OnBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct DelMarGhostPlaybackTrigger_OnBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGhostRecordingSessionComponent.SetRecordOffPhysicsDelegate
// 0x0001 (0x0001 - 0x0000)
struct DelMarGhostRecordingSessionComponent_SetRecordOffPhysicsDelegate final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGlobalLeaderboardControllerComponent.ClientNewPersonalBest
// 0x0048 (0x0048 - 0x0000)
struct DelMarGlobalLeaderboardControllerComponent_ClientNewPersonalBest final
{
public:
	struct FDelMarEvent_GlobalLeaderboardNewPersonalBest PersonalBestEvent;                          // 0x0000(0x0048)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGlobalLeaderboardControllerComponent.ServerNewPersonalBest
// 0x0048 (0x0048 - 0x0000)
struct DelMarGlobalLeaderboardControllerComponent_ServerNewPersonalBest final
{
public:
	struct FDelMarEvent_GlobalLeaderboardNewPersonalBest PersonalBestRetrievedEvent;                 // 0x0000(0x0048)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGuidedTutorialZoneActor.HandleVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarGuidedTutorialZoneActor_HandleVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGuidedTutorialZoneActor.OnBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct DelMarGuidedTutorialZoneActor_OnBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGuidedTutorialZoneActor.OnEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct DelMarGuidedTutorialZoneActor_OnEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarInputModifierHazard.OnBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct DelMarInputModifierHazard_OnBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPhysicsRateDevice.SetPhysicsRate
// 0x0001 (0x0001 - 0x0000)
struct DelMarPhysicsRateDevice_SetPhysicsRate final
{
public:
	EDelMarPhysicsRate                            PhysicsRate;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerActiveRaceManagerComponent.OnRep_ActiveRaceManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerActiveRaceManagerComponent_OnRep_ActiveRaceManager final
{
public:
	class ADelMarRaceManager*                     PreviousRaceManager;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerActiveRaceManagerComponent.SetActiveRaceManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerActiveRaceManagerComponent_SetActiveRaceManager final
{
public:
	class ADelMarRaceManager*                     RaceManager;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerActiveRaceManagerComponent.GetActiveRaceManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerActiveRaceManagerComponent_GetActiveRaceManager final
{
public:
	class ADelMarRaceManager*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandleDriftKickActivated
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandleDriftKickActivated final
{
public:
	float                                         DriftDirection;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarVehicleDriftState                      DriftState;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandleKickflipActivated
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandleKickflipActivated final
{
public:
	bool                                          bLeft;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandlePlayerResetRun
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandlePlayerResetRun final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandlePotentialDriftBoostChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandlePotentialDriftBoostChanged final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandleTurboBonusZoneChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandleTurboBonusZoneChanged final
{
public:
	EDelMarTurboZoneState                         BonusZoneState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandleUnderthrustPercentChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandleUnderthrustPercentChanged final
{
public:
	float                                         PercentageUnderthrustRemaining;                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandleVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandleVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerAnalyticsComponent.HandleWorldBonusSpeedStackGained
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerAnalyticsComponent_HandleWorldBonusSpeedStackGained final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.GetNumViewingSpectator
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerRaceDataComponent_GetNumViewingSpectator final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.GetViewingSpectators
// 0x0010 (0x0010 - 0x0000)
struct DelMarPlayerRaceDataComponent_GetViewingSpectators final
{
public:
	TArray<class APlayerState*>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.NetMulticast_CheckpointPassed_ParallelPath
// 0x0010 (0x0010 - 0x0000)
struct DelMarPlayerRaceDataComponent_NetMulticast_CheckpointPassed_ParallelPath final
{
public:
	struct FDelMarEvent_CheckpointPassed_ParallelPath CheckpointEvent;                               // 0x0000(0x0010)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.NetMulticast_CheckpointPassedOutOfOrder_ParallelPath
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerRaceDataComponent_NetMulticast_CheckpointPassedOutOfOrder_ParallelPath final
{
public:
	struct FDelMarEvent_CheckpointPassedOutOfOrder_ParallelPath InCheckpointPassedOutOfOrderEvent;   // 0x0000(0x0008)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.NetMulticast_LapCompleted
// 0x0020 (0x0020 - 0x0000)
struct DelMarPlayerRaceDataComponent_NetMulticast_LapCompleted final
{
public:
	struct FDelMarEvent_LapComplete               InLapEvent;                                        // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.NetMulticast_RaceCompleted
// 0x0010 (0x0010 - 0x0000)
struct DelMarPlayerRaceDataComponent_NetMulticast_RaceCompleted final
{
public:
	double                                        RunTime;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValidRun;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.NetMulticast_SectionCompleted_ParallelPath
// 0x0020 (0x0020 - 0x0000)
struct DelMarPlayerRaceDataComponent_NetMulticast_SectionCompleted_ParallelPath final
{
public:
	struct FDelMarEvent_SectionComplete_ParallelPath InSectionEvent;                                 // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerRaceDataComponent.NetMulticast_TeleportEntered
// 0x0008 (0x0008 - 0x0000)
struct DelMarPlayerRaceDataComponent_NetMulticast_TeleportEntered final
{
public:
	struct FDelMarEvent_TeleportEnteredEvent      InCheckpointTeleportingEvent;                      // 0x0000(0x0008)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerIdleComponent.OnPlayerDisconnected
// 0x0010 (0x0010 - 0x0000)
struct DelMarPlayerIdleComponent_OnPlayerDisconnected final
{
public:
	class AFortPlayerStateAthena*                 PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDisconnected;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarPlayerQuestDistanceTraveledComponent.HandleVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerQuestDistanceTraveledComponent_HandleVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerQuestMatchInfoComponent.HandleVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerQuestMatchInfoComponent_HandleVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarProxyGhostVisualComponent.HandlePartCustomizationUpdated
// 0x0004 (0x0004 - 0x0000)
struct DelMarProxyGhostVisualComponent_HandlePartCustomizationUpdated final
{
public:
	int32                                         MeshPartIndex;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarProxyGhostVisualComponent.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarProxyGhostVisualComponent_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceLevelConfig.SpawnRaceManager
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceLevelConfig_SpawnRaceManager final
{
public:
	bool                                          bFireInitializationEvent;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarRaceManager*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceLevelConfig.GetRaceManagerClass
// 0x0008 (0x0008 - 0x0000)
struct DelMarRaceLevelConfig_GetRaceManagerClass final
{
public:
	TSubclassOf<class ADelMarRaceManager>         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceLevelConfig.GetRaceModeTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarRaceLevelConfig_GetRaceModeTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManagerVerbComponent.HandleFinalRacePositionsChanged
// 0x0060 (0x0060 - 0x0000)
struct DelMarRaceManagerVerbComponent_HandleFinalRacePositionsChanged final
{
public:
	TArray<struct FDelMarFinalRacePositionEntry>  FinalRacePositions;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDelMarEvent_RunRecorded               RecordedRun;                                       // 0x0010(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManagerVerbComponent.HandlePlayerLapCompleted
// 0x0020 (0x0020 - 0x0000)
struct DelMarRaceManagerVerbComponent_HandlePlayerLapCompleted final
{
public:
	struct FDelMarEvent_LapComplete               LapCompleteEvent;                                  // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceManagerVerbComponent.HandlePlayerPositionsChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceManagerVerbComponent_HandlePlayerPositionsChanged final
{
public:
	TArray<class AFortPlayerState*>               RacePositions;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceMusicPlaylistComponent.SetMusicPlaylist
// 0x0010 (0x0010 - 0x0000)
struct DelMarRaceMusicPlaylistComponent_SetMusicPlaylist final
{
public:
	class UDelMarRaceMusicPlaylist*               SetPlaylist;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableMusic;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarSpeedUpDevice.OnBeginOverlap
// 0x0110 (0x0110 - 0x0000)
struct DelMarSpeedUpDevice_OnBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSpeedUpDevice.ShouldGrantSpeedEffect
// 0x0010 (0x0010 - 0x0000)
struct DelMarSpeedUpDevice_ShouldGrantSpeedEffect final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarTutorialInteractableSpline.BP_HandleAllSplineTriggersCompleted
// 0x0008 (0x0008 - 0x0000)
struct DelMarTutorialInteractableSpline_BP_HandleAllSplineTriggersCompleted final
{
public:
	class AActor*                                 FinalCompletedTrigger;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTutorialInteractableSpline.HandleColliderOverlap
// 0x0008 (0x0008 - 0x0000)
struct DelMarTutorialInteractableSpline_HandleColliderOverlap final
{
public:
	class ADelMarTutorialTriggerActor*            InTrigger;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTutorialInteractableSpline.GetHaveAllTriggersCompleted
// 0x0001 (0x0001 - 0x0000)
struct DelMarTutorialInteractableSpline_GetHaveAllTriggersCompleted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTutorialInteractableSpline.GetTriggerIndex
// 0x0010 (0x0010 - 0x0000)
struct DelMarTutorialInteractableSpline_GetTriggerIndex final
{
public:
	class ADelMarTutorialTriggerActor*            InTrigger;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarTutorialInteractableSpline.GetTriggerIndexAsRatio
// 0x0010 (0x0010 - 0x0000)
struct DelMarTutorialInteractableSpline_GetTriggerIndexAsRatio final
{
public:
	class ADelMarTutorialTriggerActor*            InTrigger;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarTutorialTriggerActor.BP_CanTriggerActor
// 0x0010 (0x0010 - 0x0000)
struct DelMarTutorialTriggerActor_BP_CanTriggerActor final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarTutorialTriggerActor.CanTriggerActor
// 0x0010 (0x0010 - 0x0000)
struct DelMarTutorialTriggerActor_CanTriggerActor final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarTutorialTriggerActor.HandleColliderOverlap
// 0x0110 (0x0110 - 0x0000)
struct DelMarTutorialTriggerActor_HandleColliderOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F0)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleAction_Drift.HandleDrift
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleAction_Drift_HandleDrift final
{
public:
	float                                         DriftDirection;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarVehicleDriftState                      DriftState;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleAction_KickFlip.HandleKickflip
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleAction_KickFlip_HandleKickflip final
{
public:
	bool                                          bLeftSide;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleCameraMode_V2.OnDriftKickActivated
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleCameraMode_V2_OnDriftKickActivated final
{
public:
	float                                         DriftDirection;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarVehicleDriftState                      DriftState;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleCameraMode_V2.OnStartlineBoostActivated
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleCameraMode_V2_OnStartlineBoostActivated final
{
public:
	float                                         StartlineBoostPerc;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleCameraMode_V2.OnTurboBonusZoneStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleCameraMode_V2_OnTurboBonusZoneStateChanged final
{
public:
	EDelMarTurboZoneState                         ZoneState;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleCameraMode_V2.OnWorldBonusSpeedStackGained
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleCameraMode_V2_OnWorldBonusSpeedStackGained final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleCameraMode_V2.OnWorldBonusSpeedStackLost
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleCameraMode_V2_OnWorldBonusSpeedStackLost final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.AnyWheelsOnGround
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_AnyWheelsOnGround final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.CanStrafeBeActivated
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_CanStrafeBeActivated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetAcceleration
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetAcceleration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetBaseForwardSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetBaseForwardSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetBaseTargetSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetBaseTargetSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetCosmeticComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleInterface_GetCosmeticComponent final
{
public:
	class UDelMarVehicleCosmeticComponent*        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetCurrentNumTurboCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetCurrentNumTurboCharges final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetCurrentTurboBonusZoneState
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_GetCurrentTurboBonusZoneState final
{
public:
	EDelMarTurboZoneState                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDraftingCurrentBonusSpeedPercentage
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDraftingCurrentBonusSpeedPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDraftingMaxBonusSpeedPercentage
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDraftingMaxBonusSpeedPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDraftingState
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_GetDraftingState final
{
public:
	EDelmarDraftingState                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDraftingTargetDegrees
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDraftingTargetDegrees final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDriftAngle
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDriftAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDriftBoostAppliedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDriftBoostAppliedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDriftDuration
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDriftDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetDriftSlipAngleRatio
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetDriftSlipAngleRatio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetForwardSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetForwardSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetKickflipActivationCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetKickflipActivationCharges final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetKickflipDistanceToSuctionSurface
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetKickflipDistanceToSuctionSurface final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetKickflipDuration
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetKickflipDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetLandingData
// 0x000C (0x000C - 0x0000)
struct DelMarVehicleInterface_GetLandingData final
{
public:
	struct FDelMarVehicleLandingData              ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetMaxNumTurboCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetMaxNumTurboCharges final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetNormalizedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetNormalizedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetNormalizedForwardSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetNormalizedForwardSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetOversteerAccumulationPercentage
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetOversteerAccumulationPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetPercentageTurboActiveTimeRemaining
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetPercentageTurboActiveTimeRemaining final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetPostProcessComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleInterface_GetPostProcessComponent final
{
public:
	class UPostProcessComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetPotentialDriftBoostPercentage
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetPotentialDriftBoostPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetQueuedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetQueuedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetReattachmentDirection
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleInterface_GetReattachmentDirection final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetRemainingTurboActiveSeconds
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetRemainingTurboActiveSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetSideSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetSideSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetSkeletalMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleInterface_GetSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetSpeedometerSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetSpeedometerSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetStableSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetStableSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetStartlineAppliedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetStartlineAppliedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetStartlineMaxEarnedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetStartlineMaxEarnedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetStartlinePercentageMaxBonusSpeedEarned
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetStartlinePercentageMaxBonusSpeedEarned final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetSteering
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetSteering final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetSteeringAngle
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetSteeringAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetStrafeCooldownPercentage
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetStrafeCooldownPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTargetDriftSide
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetTargetDriftSide final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTargetSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetTargetSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetThrottle
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetThrottle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTotalTimeSkydiving
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetTotalTimeSkydiving final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTrackPositionComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleInterface_GetTrackPositionComponent final
{
public:
	class UDelMarTrackPositionComponent*          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTurboAdditionalActiveSeconds
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetTurboAdditionalActiveSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTurboAppliedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetTurboAppliedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetTurboBonusZoneBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetTurboBonusZoneBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetUnderthrustActiveDuration
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetUnderthrustActiveDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetUnderthrustPercentageTankRemaining
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetUnderthrustPercentageTankRemaining final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetVehicleForwardState
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_GetVehicleForwardState final
{
public:
	EDelMarVehicleForwardState                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetVelocity
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleInterface_GetVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.GetWorldAppliedBonusSpeed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleInterface_GetWorldAppliedBonusSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.HasValidDraftingTarget
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_HasValidDraftingTarget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.InDriftBoostRange
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_InDriftBoostRange final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsAccelerating
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsAccelerating final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsAirFreestyling
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsAirFreestyling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsAllVehicleInputDisabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsAllVehicleInputDisabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsBraking
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsBraking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsDriftControlled
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsDriftControlled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsInvulnerabilityActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsInvulnerabilityActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsKickflipSuctionActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsKickflipSuctionActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsKickingWheels
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsKickingWheels final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsLosingAppliedBonusSpeed
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsLosingAppliedBonusSpeed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsReattaching
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsReattaching final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsSkyDiving
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsSkyDiving final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsStrafeActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsStrafeActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsStrafeDisabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsStrafeDisabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.IsStrafeLeft
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_IsStrafeLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleInterface.WheelsOnGround
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleInterface_WheelsOnGround final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleManager.BP_GetAllVehicles
// 0x0010 (0x0010 - 0x0000)
struct DelMarVehicleManager_BP_GetAllVehicles final
{
public:
	TArray<class ADelMarVehicle*>                 OutVehicles;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleManager.BP_GetVehiclesInRange
// 0x0030 (0x0030 - 0x0000)
struct DelMarVehicleManager_BP_GetVehiclesInRange final
{
public:
	struct FVector                                SourcePosition;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Range;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDo2DCheck;                                        // 0x001C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADelMarVehicle*>                 OutVehicles;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleManager.HandlePawnEnteredVehicle
// 0x0020 (0x0020 - 0x0000)
struct DelMarVehicleManager_HandlePawnEnteredVehicle final
{
public:
	TScriptInterface<class IFortVehicleInterface> Vehicle;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              Pawn;                                              // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SeatIndex;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleManager.HandlePawnExitedVehicle
// 0x0020 (0x0020 - 0x0000)
struct DelMarVehicleManager_HandlePawnExitedVehicle final
{
public:
	TScriptInterface<class IFortVehicleInterface> Vehicle;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              Pawn;                                              // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SeatIndex;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleManager.HandlePawnPlayerStateSet
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleManager_HandlePawnPlayerStateSet final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleManager.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleManager_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.AddTargetSpeedAdjustment
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_AddTargetSpeedAdjustment final
{
public:
	class FName                                   Source;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.AddWorldBonusSpeedStack
// 0x0028 (0x0028 - 0x0000)
struct DelMarVehicle_AddWorldBonusSpeedStack final
{
public:
	struct FDelMarWorldBonusSpeedStack            BonusSpeedStack;                                   // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.DemolishVehicle
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicle_DemolishVehicle final
{
public:
	struct FGameplayTag                           InCausedByTag;                                     // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.HandleFinishedCharacterCustomization
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_HandleFinishedCharacterCustomization final
{
public:
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.HandleNewPlayerState
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_HandleNewPlayerState final
{
public:
	class AFortPlayerPawn*                        Pawn;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.ResetTrackPosition
// 0x0010 (0x0010 - 0x0000)
struct DelMarVehicle_ResetTrackPosition final
{
public:
	class ADelMarTrackBase*                       Track;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackSegment;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicle.ServerAddReplicatedGameplayTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicle_ServerAddReplicatedGameplayTag final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x0004)(ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.ServerAddReplicatedGameplayTags
// 0x0020 (0x0020 - 0x0000)
struct DelMarVehicle_ServerAddReplicatedGameplayTags final
{
public:
	struct FGameplayTagContainer                  InTags;                                            // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.ServerDemolishVehicle
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicle_ServerDemolishVehicle final
{
public:
	struct FGameplayTag                           InCausedByTag;                                     // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.ServerRemoveReplicatedGameplayTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicle_ServerRemoveReplicatedGameplayTag final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x0004)(ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.ServerRemoveReplicatedGameplayTags
// 0x0020 (0x0020 - 0x0000)
struct DelMarVehicle_ServerRemoveReplicatedGameplayTags final
{
public:
	struct FGameplayTagContainer                  InTags;                                            // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.ServerSetLocalDriverHasReplicatedTheVehicle
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicle_ServerSetLocalDriverHasReplicatedTheVehicle final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.SetConfigOverrides
// 0x0098 (0x0098 - 0x0000)
struct DelMarVehicle_SetConfigOverrides final
{
public:
	struct FDelMarVehicleConfigOverrides          InConfigOverrides;                                 // 0x0000(0x0098)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.SetVehicleMesh
// 0x0010 (0x0010 - 0x0000)
struct DelMarVehicle_SetVehicleMesh final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          PhysicsAsset;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.GetAudioComponentGroup
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_GetAudioComponentGroup final
{
public:
	class UDelMarAudioComponentGroup*             ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.GetCosmeticComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_GetCosmeticComponent final
{
public:
	class UDelMarVehicleCosmeticComponent*        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.GetRaceManager
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_GetRaceManager final
{
public:
	class ADelMarRaceManager*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.GetTrackPositionComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_GetTrackPositionComponent final
{
public:
	class UDelMarTrackPositionComponent*          ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.IsInvulnerabilityActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicle_IsInvulnerabilityActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.IsRespawnEffectSignificant
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicle_IsRespawnEffectSignificant final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.IsWheelOnGround
// 0x0002 (0x0002 - 0x0000)
struct DelMarVehicle_IsWheelOnGround final
{
public:
	EDelMarVehicleWheelIndex                      WheelIndex;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicle.VehicleHasTag
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicle_VehicleHasTag final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleNetworkPhysicsComponent.OnPhysicsStateChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarVehicleNetworkPhysicsComponent_OnPhysicsStateChanged final
{
public:
	class UPrimitiveComponent*                    ChangedComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EComponentPhysicsStateChange                  StateChange;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleNetworkPhysicsComponent.OnRep_ReplicatedState
// 0x0290 (0x0290 - 0x0000)
struct DelMarVehicleNetworkPhysicsComponent_OnRep_ReplicatedState final
{
public:
	struct FDelMarVehicleReplicatedState          PrevReplicatedState;                               // 0x0000(0x0290)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleStateTagManagerComponent.HandleAnyWheelsOnGroundChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleStateTagManagerComponent_HandleAnyWheelsOnGroundChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> Vehicle;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWheelsOnGround;                                   // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleStateTagManagerComponent.HandleWorldBonusSpeedStackGained
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleStateTagManagerComponent_HandleWorldBonusSpeedStackGained final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleStateTagManagerComponent.HandleWorldBonusSpeedStackLost
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleStateTagManagerComponent_HandleWorldBonusSpeedStackLost final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleAnyWheelsOnGroundChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleVerbComponent_HandleAnyWheelsOnGroundChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> Vehicle;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWheelsOnGround;                                   // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleDriftDurationChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleVerbComponent_HandleDriftDurationChanged final
{
public:
	float                                         duration;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleKickflipped
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleVerbComponent_HandleKickflipped final
{
public:
	bool                                          bLeft;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandlePotentialDriftBoostChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleVerbComponent_HandlePotentialDriftBoostChanged final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleSpeedometerSpeedChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleVerbComponent_HandleSpeedometerSpeedChanged final
{
public:
	float                                         UpdatedSpeedometerSpeed;                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleStartlineBoostActivated
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleVerbComponent_HandleStartlineBoostActivated final
{
public:
	float                                         BoostPercent;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleTurboBonusZoneChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleVerbComponent_HandleTurboBonusZoneChanged final
{
public:
	EDelMarTurboZoneState                         BonusZoneState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleUnderthrustPercentChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleVerbComponent_HandleUnderthrustPercentChanged final
{
public:
	float                                         PercentageUnderthrustRemaining;                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleVehicleLanded
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleVerbComponent_HandleVehicleLanded final
{
public:
	float                                         LandingForce;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLandedKickflip;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleWorldBonusSpeedStackGained
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleVerbComponent_HandleWorldBonusSpeedStackGained final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleVerbComponent.HandleWorldBonusSpeedStackLost
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleVerbComponent_HandleWorldBonusSpeedStackLost final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioComponentGroup.GetMixModifiers
// 0x0008 (0x0008 - 0x0000)
struct DelMarAudioComponentGroup_GetMixModifiers final
{
public:
	class UDelMarAudioMixModifierExtension*       ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioComponentGroup.GetSubmixSends
// 0x0008 (0x0008 - 0x0000)
struct DelMarAudioComponentGroup_GetSubmixSends final
{
public:
	class UDelMarSubmixSendExtension*             ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioController.HandleVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarAudioController_HandleVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioController.PlaySound
// 0x0020 (0x0020 - 0x0000)
struct DelMarAudioController_PlaySound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InFadeInTime;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InTargetVolume;                                    // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAttenuation;                               // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAudioFaderCurve                              InFadeCurve;                                       // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ReturnValue;                                       // 0x0018(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioController.GetComponentGroup
// 0x0008 (0x0008 - 0x0000)
struct DelMarAudioController_GetComponentGroup final
{
public:
	class UDelMarAudioComponentGroup*             ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioController.IsVirtualized
// 0x0001 (0x0001 - 0x0000)
struct DelMarAudioController_IsVirtualized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioMixModifierExtension.AddMixGroup
// 0x0018 (0x0018 - 0x0000)
struct DelMarAudioMixModifierExtension_AddMixGroup final
{
public:
	struct FAudioMixModifierGroup                 InMixModifier;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioMixModifierExtension.RemoveMixGroup
// 0x0018 (0x0018 - 0x0000)
struct DelMarAudioMixModifierExtension_RemoveMixGroup final
{
public:
	struct FAudioMixModifierGroup                 InMixModifier;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarAudioMixModifierExtension.RemoveMixGroupByName
// 0x0004 (0x0004 - 0x0000)
struct DelMarAudioMixModifierExtension_RemoveMixGroupByName final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSubmixSendExtension.RemoveSend
// 0x0008 (0x0008 - 0x0000)
struct DelMarSubmixSendExtension_RemoveSend final
{
public:
	class USoundSubmixBase*                       InSubmix;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarSubmixSendExtension.SetSend
// 0x0010 (0x0010 - 0x0000)
struct DelMarSubmixSendExtension_SetSend final
{
public:
	class USoundSubmixBase*                       InSubmix;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InLevel;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTrackCount;                                       // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarNuxBlueprintFunctionLibrary.GetCurrentLapNumber
// 0x0010 (0x0010 - 0x0000)
struct DelMarNuxBlueprintFunctionLibrary_GetCurrentLapNumber final
{
public:
	const class ADelMarVehicle*                   Vehicle;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarNuxBlueprintFunctionLibrary.GetCurrentRankedInfoForVehicle
// 0x0020 (0x0020 - 0x0000)
struct DelMarNuxBlueprintFunctionLibrary_GetCurrentRankedInfoForVehicle final
{
public:
	const class ADelMarVehicle*                   Vehicle;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarRankedInfo                      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.BP_FirstPlaceChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheckpoint_BP_FirstPlaceChanged final
{
public:
	bool                                          bValidPrevFirstPlace;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.BP_LapFinished
// 0x000C (0x000C - 0x0000)
struct DelMarCheckpoint_BP_LapFinished final
{
public:
	int32                                         CompletedLap;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentLap;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalLaps;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.ClientSetCheckpointActive
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheckpoint_ClientSetCheckpointActive final
{
public:
	int32                                         CurrentLap;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalLaps;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.HandlePawnEnteredVehicle
// 0x0020 (0x0020 - 0x0000)
struct DelMarCheckpoint_HandlePawnEnteredVehicle final
{
public:
	TScriptInterface<class IFortVehicleInterface> Vehicle;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              Pawn;                                              // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SeatIndex;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheckpoint.OnTriggered
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheckpoint_OnTriggered final
{
public:
	class ADelMarVehicle*                         InDelMarVehicle;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.UpdateCheckpointMesh
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheckpoint_UpdateCheckpointMesh final
{
public:
	EDelMarCheckpointMeshType                     MeshType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.GetCheckpointMeshType
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheckpoint_GetCheckpointMeshType final
{
public:
	EDelMarCheckpointMeshType                     ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.GetFurthestAheadTrackDistance
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheckpoint_GetFurthestAheadTrackDistance final
{
public:
	struct FCheckpointTrackDistance               ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.GetFurthestBehindTrackDistance
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheckpoint_GetFurthestBehindTrackDistance final
{
public:
	struct FCheckpointTrackDistance               ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.GetNearestTrackData
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheckpoint_GetNearestTrackData final
{
public:
	struct FCheckpointTrackDistance               ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.GetSpawnTransform
// 0x0060 (0x0060 - 0x0000)
struct DelMarCheckpoint_GetSpawnTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.GetTrackDistanceDataForTrack
// 0x0028 (0x0028 - 0x0000)
struct DelMarCheckpoint_GetTrackDistanceDataForTrack final
{
public:
	const class ADelMarTrackBase*                 InTrack;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnsureAssociated;                                 // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCheckpointTrackDistance               ReturnValue;                                       // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpoint.IsAssociatedWithTrack
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheckpoint_IsAssociatedWithTrack final
{
public:
	const class ADelMarTrackBase*                 InTrack;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarBlueprintLibrary.AreAllLeaderboardFiltersEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarBlueprintLibrary_AreAllLeaderboardFiltersEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.BP_KillAndRespawnVehicle
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_BP_KillAndRespawnVehicle final
{
public:
	const class AController*                      Controller;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CausedByTag;                                       // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarBlueprintLibrary.DelMarFormatTime
// 0x0020 (0x0020 - 0x0000)
struct DelMarBlueprintLibrary_DelMarFormatTime final
{
public:
	double                                        TimeSeconds;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeMilliseconds;                              // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.GetClientWorldTimeSeconds
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_GetClientWorldTimeSeconds final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.GetDelMarPlayspace
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_GetDelMarPlayspace final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADelMarPlayspace*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.GetDelMarVehicle
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_GetDelMarVehicle final
{
public:
	const class APlayerController*                PlayerController;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADelMarVehicle*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.GetNetModel
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_GetNetModel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarNetModel                               ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarBlueprintLibrary.GetPrimaryPlayerController
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_GetPrimaryPlayerController final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.GetPrimaryPlayerState
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_GetPrimaryPlayerState final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerState*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.GetTimerDeltaFromServerTime
// 0x0020 (0x0020 - 0x0000)
struct DelMarBlueprintLibrary_GetTimerDeltaFromServerTime final
{
public:
	double                                        TimestampSeconds;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarTimerDirection                         Direction;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCapAtZero;                                        // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPositive;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UObject*                          WorldContextObject;                                // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.IsDelMarExperience
// 0x0002 (0x0002 - 0x0000)
struct DelMarBlueprintLibrary_IsDelMarExperience final
{
public:
	bool                                          bEnableCaching;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.IsDelMarGFSActive
// 0x0001 (0x0001 - 0x0000)
struct DelMarBlueprintLibrary_IsDelMarGFSActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.IsDelMarPlaylist
// 0x0010 (0x0010 - 0x0000)
struct DelMarBlueprintLibrary_IsDelMarPlaylist final
{
public:
	class UObject*                                ContextObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarBlueprintLibrary.SetDelMarControlsText
// 0x0028 (0x0028 - 0x0000)
struct DelMarBlueprintLibrary_SetDelMarControlsText final
{
public:
	const class APlayerController*                PlayerController;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarEvent_SetControlsText           Event;                                             // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarBlueprintLibrary.SetDelMarTutorialHint
// 0x0050 (0x0050 - 0x0000)
struct DelMarBlueprintLibrary_SetDelMarTutorialHint final
{
public:
	const class APlayerController*                PlayerController;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarEvent_SetTutorialHint           Event;                                             // 0x0008(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarDemolishSelfWithTag
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheatManager_DelMarDemolishSelfWithTag final
{
public:
	class FString                                 DemolishTagString;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarForceLoadLevel
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheatManager_DelMarForceLoadLevel final
{
public:
	class FString                                 LevelName;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarForceLoadUEFNIsland
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheatManager_DelMarForceLoadUEFNIsland final
{
public:
	class FString                                 IslandCode;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarGhostSetRecordOffPhysics
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarGhostSetRecordOffPhysics final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarGhostSetReplayEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarGhostSetReplayEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarGhostStartPlayerRecording
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheatManager_DelMarGhostStartPlayerRecording final
{
public:
	class FString                                 SaveFileName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSaveToFile;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheatManager.DelMarGiveSelfSomeCompetitiveMMRStats
// 0x000C (0x000C - 0x0000)
struct DelMarCheatManager_DelMarGiveSelfSomeCompetitiveMMRStats final
{
public:
	int32                                         MyPosition;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalNumberOfPlayers;                              // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfTimesToSendMMRUpdate;                      // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarGrantQuestsInDir
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheatManager_DelMarGrantQuestsInDir final
{
public:
	class FString                                 Dir;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarGrantTurboCharges
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheatManager_DelMarGrantTurboCharges final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGrantToEveryone;                                  // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheatManager.DelMarInitiateMissedCheckpointDemoCountdown
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarInitiateMissedCheckpointDemoCountdown final
{
public:
	float                                         SecondsUntilDemo;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarInitiateReturnToTrackDemoCountdown
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarInitiateReturnToTrackDemoCountdown final
{
public:
	float                                         SecondsUntilDemo;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarQueueAutoInputDriveThenTurn
// 0x0014 (0x0014 - 0x0000)
struct DelMarCheatManager_DelMarQueueAutoInputDriveThenTurn final
{
public:
	int32                                         Repeat;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Throttle;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StraightDuration;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Steer;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnDuration;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarQueueAutoInputJump
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheatManager_DelMarQueueAutoInputJump final
{
public:
	int32                                         Repeat;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarQueueAutoInputThrottle
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheatManager_DelMarQueueAutoInputThrottle final
{
public:
	float                                         Throttle;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         duration;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarRemoveBotByName
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheatManager_DelMarRemoveBotByName final
{
public:
	class FString                                 BotName;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarRemoveNumberOfBots
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarRemoveNumberOfBots final
{
public:
	int32                                         NumberOfBotsToRemove;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarRespawnPointLocked
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarRespawnPointLocked final
{
public:
	bool                                          bLocked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetAirFreestyleEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetAirFreestyleEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetCollisionDemosEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetCollisionDemosEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetDemoModeEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetDemoModeEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetDraftingEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetDraftingEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetGlobalInputEnabled
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheatManager_DelMarSetGlobalInputEnabled final
{
public:
	class FString                                 InputTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableInput;                                      // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheatManager.DelMarSetInfiniteUnderthrustEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetInfiniteUnderthrustEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetInputMappingContextEnabled
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheatManager_DelMarSetInputMappingContextEnabled final
{
public:
	class FString                                 InputTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableInput;                                      // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheatManager.DelMarSetInvertSteerMethod
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetInvertSteerMethod final
{
public:
	EDelMarInvertSteerMethod                      InInvertSteerMethod;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetLap
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetLap final
{
public:
	int32                                         LapNum;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetLapTotal
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetLapTotal final
{
public:
	int32                                         NewTotal;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetLoadingScreenVisibility
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetLoadingScreenVisibility final
{
public:
	bool                                          bShouldBeVisible;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetReplicatedTagEnabledOnSelf
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheatManager_DelMarSetReplicatedTagEnabledOnSelf final
{
public:
	class FString                                 InputTag;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRespawnCollisionProtectionEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetRespawnCollisionProtectionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRespawnCollisionProtectionSeconds
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRespawnCollisionProtectionSeconds final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRespawnInvulnerabilityEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetRespawnInvulnerabilityEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRespawnInvulnerabilitySeconds
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRespawnInvulnerabilitySeconds final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRespawnTracesEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetRespawnTracesEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMaxBonusSpeedScalar
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMaxBonusSpeedScalar final
{
public:
	float                                         InMaxBonusSpeedScalar;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMaxDistanceFromPack
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMaxDistanceFromPack final
{
public:
	float                                         InMaxDistanceFromPack;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMaxPackDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMaxPackDistance final
{
public:
	float                                         InMaxPackDistance;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMaxPackDistanceGainedPerSecond
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMaxPackDistanceGainedPerSecond final
{
public:
	float                                         InMaxPackDistanceGainedPerSecond;                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMaxPackDistanceLostPerSecond
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMaxPackDistanceLostPerSecond final
{
public:
	float                                         InMaxPackDistanceLostPerSecond;                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMinDistanceFromPack
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMinDistanceFromPack final
{
public:
	float                                         InMinDistanceFromPack;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMinPackDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMinPackDistance final
{
public:
	float                                         InMinPackDistance;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingMMR
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingMMR final
{
public:
	int32                                         InMMR;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetRubberbandingNumPlayersForPackDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetRubberbandingNumPlayersForPackDistance final
{
public:
	int32                                         InNumPlayersForPackDistance;                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetSpawnMode
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetSpawnMode final
{
public:
	EDelMarRaceSpawnMode                          SpawnMode;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetStartlineBoostEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetStartlineBoostEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetStartlineBoostPotentialOverride
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetStartlineBoostPotentialOverride final
{
public:
	float                                         PotentialOverride;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetStrafeEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetStrafeEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetTurboCharges
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheatManager_DelMarSetTurboCharges final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGrantToEveryone;                                  // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCheatManager.DelMarSetTutorialSection
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSetTutorialSection final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetVehicleCollisionsOverrideForSelf
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetVehicleCollisionsOverrideForSelf final
{
public:
	EDelMarVehicleCollisionOverrideSetting        NewValue;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetVehicleCollisionsOverrideGlobal
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetVehicleCollisionsOverrideGlobal final
{
public:
	EDelMarVehicleCollisionOverrideSetting        NewValue;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSetVerticalKickflipInverted
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarSetVerticalKickflipInverted final
{
public:
	bool                                          InbVerticalKickflipInverted;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSpawnBots
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarSpawnBots final
{
public:
	int32                                         NumberOfBotsToSpawn;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarSpawnBotsAtSkillLevel
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheatManager_DelMarSpawnBotsAtSkillLevel final
{
public:
	int32                                         NumberOfBotsToSpawn;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkillLevel;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarStartFollowTrack
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarStartFollowTrack final
{
public:
	float                                         Throttle;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarTeleportToNextCheckpoint_ParallelPath
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarTeleportToNextCheckpoint_ParallelPath final
{
public:
	int32                                         ParallelPathIndex;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarTeleportToPreviousCheckpoint_ParallelPath
// 0x0004 (0x0004 - 0x0000)
struct DelMarCheatManager_DelMarTeleportToPreviousCheckpoint_ParallelPath final
{
public:
	int32                                         ParallelPathIndex;                                 // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarUsePredictiveInterpolation
// 0x0002 (0x0002 - 0x0000)
struct DelMarCheatManager_DelMarUsePredictiveInterpolation final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEveryOther;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.BugIt
// 0x0010 (0x0010 - 0x0000)
struct DelMarCheatManager_BugIt final
{
public:
	class FString                                 BugName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.BugItGo
// 0x0018 (0x0018 - 0x0000)
struct DelMarCheatManager_BugItGo final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         pitch;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Yaw;                                               // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Roll;                                              // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheatManager.DelMarStartTrackScrubberWithViewTarget
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheatManager_DelMarStartTrackScrubberWithViewTarget final
{
public:
	bool                                          bRunCsvProfilerDuringScrub;                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateSequencerFXComponent.HandleCurrentStateChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarStateSequencerFXComponent_HandleCurrentStateChanged final
{
public:
	struct FGameplayTag                           NewState;                                          // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarStateSequencerFXComponent.HandleEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarStateSequencerFXComponent_HandleEnabledChanged final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeDelayedStateSequencer.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarTimeDelayedStateSequencer_SetEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeDelayedStateSequencer.GetCurrentStateTag
// 0x0004 (0x0004 - 0x0000)
struct DelMarTimeDelayedStateSequencer_GetCurrentStateTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeDelayedStateSequencer.GetStateCount
// 0x0004 (0x0004 - 0x0000)
struct DelMarTimeDelayedStateSequencer_GetStateCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTimeDelayedStateSequencer.GetStateTagAtIndex
// 0x0008 (0x0008 - 0x0000)
struct DelMarTimeDelayedStateSequencer_GetStateTagAtIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarGlobalInputDisabler.SetGlobalInputsEnabled
// 0x0028 (0x0028 - 0x0000)
struct DelMarGlobalInputDisabler_SetGlobalInputsEnabled final
{
public:
	struct FGameplayTagContainer                  InputTags;                                         // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnAnyWheelsOnGroundChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarCosmeticActor_BP_OnAnyWheelsOnGroundChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnBonusSpeedChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnBonusSpeedChanged final
{
public:
	float                                         BonusSpeed;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnDelMarVehicleSpawned
// 0x0002 (0x0002 - 0x0000)
struct DelMarCosmeticActor_BP_OnDelMarVehicleSpawned final
{
public:
	bool                                          bFirstVehicleForPlayer;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrevVehicleDemolished;                            // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnDraftStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnDraftStateChanged final
{
public:
	EDelmarDraftingState                          CurrentState;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnDriftControlChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnDriftControlChanged final
{
public:
	bool                                          bIsDriftingControlled;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnDriftDurationChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnDriftDurationChanged final
{
public:
	float                                         duration;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnDriftKickActivated
// 0x0008 (0x0008 - 0x0000)
struct DelMarCosmeticActor_BP_OnDriftKickActivated final
{
public:
	float                                         DriftDirection;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarVehicleDriftState                      DriftState;                                        // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnKickflipActivated
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnKickflipActivated final
{
public:
	bool                                          bLeftSide;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnKickflipActivationChargesChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnKickflipActivationChargesChanged final
{
public:
	int32                                         ActivationCharges;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnKickflipDistanceToSuctionSurfaceChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnKickflipDistanceToSuctionSurfaceChanged final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnKickflipDurationChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnKickflipDurationChanged final
{
public:
	float                                         duration;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnStartlineBoostActivated
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnStartlineBoostActivated final
{
public:
	float                                         PercentageMaxBonusSpeedEarned;                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnStrafeActivated
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnStrafeActivated final
{
public:
	bool                                          bLeftSide;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnStrafeCooldownChanged
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnStrafeCooldownChanged final
{
public:
	float                                         CooldownPercentage;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnStrafeDisabledChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnStrafeDisabledChanged final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnStrafeUsabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnStrafeUsabilityChanged final
{
public:
	bool                                          bCanActivate;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnTurboBonusStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnTurboBonusStateChanged final
{
public:
	EDelMarTurboZoneState                         NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarCosmeticActor_BP_OnVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnVehicleForwardStateChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_BP_OnVehicleForwardStateChanged final
{
public:
	EDelMarVehicleForwardState                    NewForwardState;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnVehicleLanded
// 0x0008 (0x0008 - 0x0000)
struct DelMarCosmeticActor_BP_OnVehicleLanded final
{
public:
	float                                         LandingForced;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLandedKickflip;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnWheelsOnGroundChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarCosmeticActor_BP_OnWheelsOnGroundChanged final
{
public:
	TScriptInterface<class IDelMarVehicleInterface> VehicleRef;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bValue;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnWorldBonusSpeedStackGained
// 0x0008 (0x0008 - 0x0000)
struct DelMarCosmeticActor_BP_OnWorldBonusSpeedStackGained final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.BP_OnWorldBonusSpeedStackLost
// 0x0008 (0x0008 - 0x0000)
struct DelMarCosmeticActor_BP_OnWorldBonusSpeedStackLost final
{
public:
	struct FGameplayTag                           Source;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Stacks;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.GetBodyMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarCosmeticActor_GetBodyMeshComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCosmeticActor.IsLocallyViewed
// 0x0001 (0x0001 - 0x0000)
struct DelMarCosmeticActor_IsLocallyViewed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarMatchmakingComponent.ClientStartMatchmaking
// 0x0018 (0x0018 - 0x0000)
struct DelMarMatchmakingComponent_ClientStartMatchmaking final
{
public:
	struct FOnlineLinkId                          LinkId;                                            // 0x0000(0x0018)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarContextualHintComponent.HandleVehicleDemolished
// 0x0004 (0x0004 - 0x0000)
struct DelMarContextualHintComponent_HandleVehicleDemolished final
{
public:
	struct FGameplayTag                           CausedByTag;                                       // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarLocalCheckpointVisibilityControllerComponent.HandleCheckpointPassed
// 0x0010 (0x0010 - 0x0000)
struct DelMarLocalCheckpointVisibilityControllerComponent_HandleCheckpointPassed final
{
public:
	struct FDelMarEvent_CheckpointPassed_ParallelPath CheckpointEvent;                               // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarLocalCheckpointVisibilityControllerComponent.HandleLapComplete
// 0x0020 (0x0020 - 0x0000)
struct DelMarLocalCheckpointVisibilityControllerComponent_HandleLapComplete final
{
public:
	struct FDelMarEvent_LapComplete               LapEvent;                                          // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarLocalCheckpointVisibilityControllerComponent.HandleViewTargetChanged
// 0x0018 (0x0018 - 0x0000)
struct DelMarLocalCheckpointVisibilityControllerComponent_HandleViewTargetChanged final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OldViewTarget;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 NewViewTarget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarNetworkInputComponent.ServerSendInputs
// 0x0018 (0x0018 - 0x0000)
struct DelMarNetworkInputComponent_ServerSendInputs final
{
public:
	struct FDelMarNetworkInputPacket              InputPacket;                                       // 0x0000(0x0018)(ConstParm, Parm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.ServerSetInvertSteerMethod
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerPreferencesComponent_ServerSetInvertSteerMethod final
{
public:
	EDelMarInvertSteerMethod                      InInvertSteerMethod;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.ServerUpdateAerialPitchActivation
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerPreferencesComponent_ServerUpdateAerialPitchActivation final
{
public:
	bool                                          bInAerialPitchActivationEnabled;                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.ServerUpdatePitchInverted
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerPreferencesComponent_ServerUpdatePitchInverted final
{
public:
	bool                                          bInPitchInverted;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.ServerUpdateVerticalKickflipInverted
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerPreferencesComponent_ServerUpdateVerticalKickflipInverted final
{
public:
	bool                                          bInVerticalKickflipInverted;                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.GetTouchControlsLayout
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerPreferencesComponent_GetTouchControlsLayout final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.GetUseIconOnlyPlayerNameplates
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerPreferencesComponent_GetUseIconOnlyPlayerNameplates final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerPreferencesComponent.GetUseToggleOnExpandableHudWidget
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayerPreferencesComponent_GetUseToggleOnExpandableHudWidget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerTurboManagerComponent.ModifyTurboCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerTurboManagerComponent_ModifyTurboCharges final
{
public:
	float                                         TurboChargeAmount;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerTurboManagerComponent.ModifyTurboCharges_Delayed
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerTurboManagerComponent_ModifyTurboCharges_Delayed final
{
public:
	float                                         TurboChargeAmount;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayerTurboManagerComponent.SetTurboCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarPlayerTurboManagerComponent_SetTurboCharges final
{
public:
	float                                         TurboChargeAmount;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRequestComponent.HandleLoadoutsChangedOnServer
// 0x0010 (0x0010 - 0x0000)
struct DelMarRequestComponent_HandleLoadoutsChangedOnServer final
{
public:
	struct FCosmeticLoadout                       CosmeticLoadout;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRequestComponent.ServerReadyUp
// 0x0001 (0x0001 - 0x0000)
struct DelMarRequestComponent_ServerReadyUp final
{
public:
	bool                                          bInReadyUp;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRequestComponent.ServerRequestMap
// 0x0020 (0x0020 - 0x0000)
struct DelMarRequestComponent_ServerRequestMap final
{
public:
	struct FGameplayTagContainer                  InMapChoice;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRequestComponent.ServerRequestMapFromGameplay
// 0x0020 (0x0020 - 0x0000)
struct DelMarRequestComponent_ServerRequestMapFromGameplay final
{
public:
	struct FGameplayTagContainer                  InMapChoice;                                       // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRequestComponent.ServerSetJoinNextRace
// 0x0001 (0x0001 - 0x0000)
struct DelMarRequestComponent_ServerSetJoinNextRace final
{
public:
	bool                                          bInReadyToJoinRace;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRequestComponent.ServerSetPostRaceVote
// 0x0001 (0x0001 - 0x0000)
struct DelMarRequestComponent_ServerSetPostRaceVote final
{
public:
	EDelMarPostRaceVote                           NewVote;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRunRecordPlayerComponent.PrintRecords
// 0x0030 (0x0030 - 0x0000)
struct DelMarRunRecordPlayerComponent_PrintRecords final
{
public:
	struct FDelMarRunRecord                       RunRecord;                                         // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRunRecordPlayerComponent.NetMulticast_LapRecorded
// 0x0030 (0x0030 - 0x0000)
struct DelMarRunRecordPlayerComponent_NetMulticast_LapRecorded final
{
public:
	struct FDelMarEvent_LapRecorded               InLapRecordedEvent;                                // 0x0000(0x0030)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRunRecordPlayerComponent.NetMulticast_RunRecorded
// 0x0050 (0x0050 - 0x0000)
struct DelMarRunRecordPlayerComponent_NetMulticast_RunRecorded final
{
public:
	struct FDelMarEvent_RunRecorded               InRunRecordedEvent;                                // 0x0000(0x0050)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRunRecordPlayerComponent.NetMulticast_SectionRecorded
// 0x0050 (0x0050 - 0x0000)
struct DelMarRunRecordPlayerComponent_NetMulticast_SectionRecorded final
{
public:
	struct FDelMarEvent_SectionRecorded           InSectionRecordedEvent;                            // 0x0000(0x0050)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTutorialRequestComponent.Server_RequestSection
// 0x0004 (0x0004 - 0x0000)
struct DelMarTutorialRequestComponent_Server_RequestSection final
{
public:
	int32                                         SectionIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarTutorialRequestComponent.Server_RequestStartRace
// 0x0001 (0x0001 - 0x0000)
struct DelMarTutorialRequestComponent_Server_RequestStartRace final
{
public:
	bool                                          bSkipCountdown;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarLevelManagerComponent.RequestLevelLoad
// 0x0020 (0x0020 - 0x0000)
struct DelMarLevelManagerComponent_RequestLevelLoad final
{
public:
	struct FGameplayTagContainer                  DesiredMap;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarLevelManagerComponent.ServerRequestLevel
// 0x0020 (0x0020 - 0x0000)
struct DelMarLevelManagerComponent_ServerRequestLevel final
{
public:
	struct FGameplayTagContainer                  DesiredMap;                                        // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayspace.ServerRequestLoadingLevel
// 0x0020 (0x0020 - 0x0000)
struct DelMarPlayspace_ServerRequestLoadingLevel final
{
public:
	struct FGameplayTagContainer                  DesiredMap;                                        // 0x0000(0x0020)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayspace.ServerRequestLoadingLevelWithLinkCode
// 0x0018 (0x0018 - 0x0000)
struct DelMarPlayspace_ServerRequestLoadingLevelWithLinkCode final
{
public:
	struct FOnlineLinkId                          DesiredMap;                                        // 0x0000(0x0018)(ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayspace.ServerReturnToSetup
// 0x0020 (0x0020 - 0x0000)
struct DelMarPlayspace_ServerReturnToSetup final
{
public:
	struct FGameplayTagContainer                  OptionalMapToForceLoad;                            // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayspace.ServerReturnToSetupWithLinkCode
// 0x0018 (0x0018 - 0x0000)
struct DelMarPlayspace_ServerReturnToSetupWithLinkCode final
{
public:
	struct FOnlineLinkId                          OptionalMapToForceLoad;                            // 0x0000(0x0018)(ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayspace.SetLoadingScreenVisibiliy
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayspace_SetLoadingScreenVisibiliy final
{
public:
	bool                                          bInShouldShowLoadingScreen;                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPlayspace.ShouldShowLoadingScreen
// 0x0001 (0x0001 - 0x0000)
struct DelMarPlayspace_ShouldShowLoadingScreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarPreRaceControllerComponent.ServerSetViewTarget
// 0x0008 (0x0008 - 0x0000)
struct DelMarPreRaceControllerComponent_ServerSetViewTarget final
{
public:
	class AFortPlayerState*                       PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpointManagerComponent.HandleRaceFinished
// 0x0008 (0x0008 - 0x0000)
struct DelMarCheckpointManagerComponent_HandleRaceFinished final
{
public:
	struct FDelMarEvent_RaceFinished              Event;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCheckpointManagerComponent.HandleResetRace
// 0x0001 (0x0001 - 0x0000)
struct DelMarCheckpointManagerComponent_HandleResetRace final
{
public:
	struct FDelMarEvent_ResetRace                 Event;                                             // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarDeathRaceManager.GetPointsAwardForPlacement
// 0x0008 (0x0008 - 0x0000)
struct DelMarDeathRaceManager_GetPointsAwardForPlacement final
{
public:
	int32                                         InPlacement;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarDeathRaceManager.GetScoreThresholdToEndMatch
// 0x0004 (0x0004 - 0x0000)
struct DelMarDeathRaceManager_GetScoreThresholdToEndMatch final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRaceConfigComponent.OnRep_VehicleAbilityConfig
// 0x0011 (0x0011 - 0x0000)
struct DelMarRaceConfigComponent_OnRep_VehicleAbilityConfig final
{
public:
	struct FDelMarVehicleAbilityConfig            OldConfig;                                         // 0x0000(0x0011)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRespawnManagerComponent.RequestRespawnPawnAndVehicle
// 0x0010 (0x0010 - 0x0000)
struct DelMarRespawnManagerComponent_RequestRespawnPawnAndVehicle final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADelMarVehicle*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarRespawnManagerComponent.RequestRespawnVehicleForPawn
// 0x0010 (0x0010 - 0x0000)
struct DelMarRespawnManagerComponent_RequestRespawnVehicleForPawn final
{
public:
	class AFortPlayerPawn*                        InPlayerPawn;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADelMarVehicle*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCameraShakeComponent.OnCameraShakeIntensitySettingsChanged
// 0x0008 (0x0008 - 0x0000)
struct DelMarCameraShakeComponent_OnCameraShakeIntensitySettingsChanged final
{
public:
	class UFortClientSettingsRecord*              Settings;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCameraShakeComponent.OnVehicleHitVehicle
// 0x0020 (0x0020 - 0x0000)
struct DelMarCameraShakeComponent_OnVehicleHitVehicle final
{
public:
	float                                         Magnitude;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarCameraShakeComponent.OnVehicleHitWall
// 0x0028 (0x0028 - 0x0000)
struct DelMarCameraShakeComponent_OnVehicleHitWall final
{
public:
	float                                         Magnitude;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x0008(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardRotationDegrees;                            // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarCameraShakeComponent.OnVehicleLanded
// 0x0008 (0x0008 - 0x0000)
struct DelMarCameraShakeComponent_OnVehicleLanded final
{
public:
	float                                         LandingForce;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLandedKickflip;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleCosmeticComponent.GetCosmeticActor
// 0x0018 (0x0018 - 0x0000)
struct DelMarVehicleCosmeticComponent_GetCosmeticActor final
{
public:
	TSubclassOf<class ADelMarCosmeticActor>       CosmeticClass;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookForChildClasses;                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarCosmeticActor*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleCosmeticComponent.GetCosmeticActors
// 0x0020 (0x0020 - 0x0000)
struct DelMarVehicleCosmeticComponent_GetCosmeticActors final
{
public:
	TSubclassOf<class ADelMarCosmeticActor>       CosmeticClass;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLookForChildClasses;                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ADelMarCosmeticActor*>           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleForceFeedbackComponent.HandleLoadingScreenVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleForceFeedbackComponent_HandleLoadingScreenVisibilityChanged final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleForceFeedbackComponent.OnDriftControlChanged
// 0x0001 (0x0001 - 0x0000)
struct DelMarVehicleForceFeedbackComponent_OnDriftControlChanged final
{
public:
	bool                                          bIsDriftControlled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleForceFeedbackComponent.OnVehicleLanded
// 0x0008 (0x0008 - 0x0000)
struct DelMarVehicleForceFeedbackComponent_OnVehicleLanded final
{
public:
	float                                         LandingForce;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLandedKickflip;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarCore.DelMarVehicleMovementSet.OnRep_AccelMultiplier
// 0x0028 (0x0028 - 0x0000)
struct DelMarVehicleMovementSet_OnRep_AccelMultiplier final
{
public:
	struct FFortGameplayAttributeData             OldSpeedMultiplier;                                // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleMovementSet.OnRep_BonusSpeed
// 0x0028 (0x0028 - 0x0000)
struct DelMarVehicleMovementSet_OnRep_BonusSpeed final
{
public:
	struct FFortGameplayAttributeData             OldBonusSpeed;                                     // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleMovementSet.OnRep_VehicleThrottleDisabled
// 0x0028 (0x0028 - 0x0000)
struct DelMarVehicleMovementSet_OnRep_VehicleThrottleDisabled final
{
public:
	struct FFortGameplayAttributeData             OldInputDisabled;                                  // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleTurboManagerComponent.ModifyTurboCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleTurboManagerComponent_ModifyTurboCharges final
{
public:
	float                                         TurboChargeAmount;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleTurboManagerComponent.ModifyTurboCharges_Delayed
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleTurboManagerComponent_ModifyTurboCharges_Delayed final
{
public:
	float                                         TurboChargeAmount;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarCore.DelMarVehicleTurboManagerComponent.SetTurboCharges
// 0x0004 (0x0004 - 0x0000)
struct DelMarVehicleTurboManagerComponent_SetTurboCharges final
{
public:
	float                                         TurboChargeAmount;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

