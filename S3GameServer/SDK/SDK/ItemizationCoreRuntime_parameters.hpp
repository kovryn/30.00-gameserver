#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationCoreRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ItemizationCoreRuntime_structs.hpp"


namespace SDK::Params
{

// Function ItemizationCoreRuntime.InventoryCollection.ClientOnItemAbilityCooldownUpdated
// 0x0038 (0x0038 - 0x0000)
struct InventoryCollection_ClientOnItemAbilityCooldownUpdated final
{
public:
	struct FGuid                                  InventoryID;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ItemEntryID;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemAbilityCooldownState              CooldownState;                                     // 0x0020(0x0018)(ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.DropItem
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_DropItem final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AmountToDrop;                                      // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_DropItem
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_Server_DropItem final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AmountToDrop;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_MoveItemListToInventory
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_Server_MoveItemListToInventory final
{
public:
	TArray<struct FGuid>                          ItemEntryIDList;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class AInventoryCollection*                   TargetInventoryCollection;                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  TargetInventoryID;                                 // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_MoveItemsWithDefinitionToInventory
// 0x0038 (0x0038 - 0x0000)
struct InventoryCollection_Server_MoveItemsWithDefinitionToInventory final
{
public:
	struct FGuid                                  OwningInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UItemDefinitionBase*              ItemDefinition;                                    // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInventoryCollection*                   TargetInventoryCollection;                         // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  TargetInventoryID;                                 // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Amount;                                            // 0x0030(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_MoveItemToInventory
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_Server_MoveItemToInventory final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInventoryCollection*                   TargetInventoryCollection;                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  TargetInventoryID;                                 // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_SetEquippableItemActive
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollection_Server_SetEquippableItemActive final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_SetEquippableItemInactive
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollection_Server_SetEquippableItemInactive final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_SetItemSlot
// 0x0024 (0x0024 - 0x0000)
struct InventoryCollection_Server_SetItemSlot final
{
public:
	struct FGuid                                  OwningInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ItemEntryID;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        SlotNumber;                                        // 0x0020(0x0002)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVkInventoryMoveBehaviour                     MoveBehaviour;                                     // 0x0022(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_SwapItems
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_Server_SwapItems final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AInventoryCollection*                   OtherInventoryCollection;                          // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  OtherItemEntryID;                                  // 0x0018(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.Server_UseItem
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollection_Server_UseItem final
{
public:
	struct FGuid                                  ItemId;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AdditionalItemID;                                  // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.SetEquippableItemActive
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollection_SetEquippableItemActive final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.SetEquippableItemInactive
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollection_SetEquippableItemInactive final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.SetInventoryMaxStackSizeOverride
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollection_SetInventoryMaxStackSizeOverride final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         InInventoryMaxStackSizeOverride;                   // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.SetInventoryTotalSlotsOverride
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollection_SetInventoryTotalSlotsOverride final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         InInventoryTotalSlotsOverride;                     // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.UseItem
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollection_UseItem final
{
public:
	struct FGuid                                  ItemId;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AdditionalItemID;                                  // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetAllInventoriesInCollection
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_GetAllInventoriesInCollection final
{
public:
	TArray<struct FGuid>                          OutInventoryIDList;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCollection.GetAllItemsInInventory
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_GetAllItemsInInventory final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          OutItemEntryIDList;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoriesWithInventoryDefinition
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_GetInventoriesWithInventoryDefinition final
{
public:
	const class UInventoryDefinition*             InventoryDefinition;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoryCreationType
// 0x0014 (0x0014 - 0x0000)
struct InventoryCollection_GetInventoryCreationType final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemizationInventoryCreationType             ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoryDefinition
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_GetInventoryDefinition final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInventoryDefinition*             ReturnValue;                                       // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoryListInPickupPriorityForItemDefinition
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_GetInventoryListInPickupPriorityForItemDefinition final
{
public:
	const class UItemDefinitionBase*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoryMaxStackSizeOverride
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_GetInventoryMaxStackSizeOverride final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoryName
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollection_GetInventoryName final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetInventoryTotalSlotsOverride
// 0x0018 (0x0018 - 0x0000)
struct InventoryCollection_GetInventoryTotalSlotsOverride final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemAmount
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollection_GetItemAmount final
{
public:
	const class UItemDefinitionBase*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemAmountFromEntry
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_GetItemAmountFromEntry final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ItemEntryID;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemAmountFromInventory
// 0x0020 (0x0020 - 0x0000)
struct InventoryCollection_GetItemAmountFromInventory final
{
public:
	const class UItemDefinitionBase*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  TargetInventoryID;                                 // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemDefinition
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_GetItemDefinition final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ItemEntryID;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UItemDefinitionBase*              ReturnValue;                                       // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemEntryIDBySlot
// 0x0024 (0x0024 - 0x0000)
struct InventoryCollection_GetItemEntryIDBySlot final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SlotNumber;                                        // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemMaxAmountForEntry
// 0x0028 (0x0028 - 0x0000)
struct InventoryCollection_GetItemMaxAmountForEntry final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ItemEntryID;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.GetItemSlotNumber
// 0x0024 (0x0024 - 0x0000)
struct InventoryCollection_GetItemSlotNumber final
{
public:
	struct FGuid                                  TargetInventoryID;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ItemEntryID;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCollection.IsEquippableItemActive
// 0x0014 (0x0014 - 0x0000)
struct InventoryCollection_IsEquippableItemActive final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventoryAddToItem
// 0x0010 (0x0010 - 0x0000)
struct InventoryCheatManager_InventoryAddToItem final
{
public:
	int32                                         InventoryIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AmountToAdd;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventoryDropItem
// 0x0010 (0x0010 - 0x0000)
struct InventoryCheatManager_InventoryDropItem final
{
public:
	int32                                         InventoryIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AmountToDrop;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventoryMoveAmountOfItem
// 0x0018 (0x0018 - 0x0000)
struct InventoryCheatManager_InventoryMoveAmountOfItem final
{
public:
	int32                                         SourceInventoryIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TargetInventoryIndex;                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         AmountToMove;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventoryMoveItem
// 0x000C (0x000C - 0x0000)
struct InventoryCheatManager_InventoryMoveItem final
{
public:
	int32                                         SourceInventoryIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TargetInventoryIndex;                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventoryRemoveFromItem
// 0x0010 (0x0010 - 0x0000)
struct InventoryCheatManager_InventoryRemoveFromItem final
{
public:
	int32                                         InventoryIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AmountToRemove;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventorySetEquippedItemActive
// 0x000C (0x000C - 0x0000)
struct InventoryCheatManager_InventorySetEquippedItemActive final
{
public:
	int32                                         InventoryIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActive;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventorySetItemSlot
// 0x000C (0x000C - 0x0000)
struct InventoryCheatManager_InventorySetItemSlot final
{
public:
	int32                                         InventoryIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        NewSlotIndex;                                      // 0x0008(0x0002)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryCheatManager.InventoryUseItem
// 0x0008 (0x0008 - 0x0000)
struct InventoryCheatManager_InventoryUseItem final
{
public:
	int32                                         InventoryIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.SetEquippableInventoryDefinitionList
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_SetEquippableInventoryDefinitionList final
{
public:
	TArray<TSoftObjectPtr<class UEquippableInventoryDefinition>> EquipmentInventoryDefinitionList;   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.SetInventoryDefinitionList
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_SetInventoryDefinitionList final
{
public:
	TArray<TSoftObjectPtr<class UInventoryDefinition>> InventoryDefinitionList;                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.GetDisallowedEquipmentInventoryDefinitionAssetClasses
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_GetDisallowedEquipmentInventoryDefinitionAssetClasses final
{
public:
	TArray<class UClass*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.GetDisallowedInventoryDefinitionAssetClasses
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_GetDisallowedInventoryDefinitionAssetClasses final
{
public:
	TArray<class UClass*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.GetEquippableInventoryDefinitionList
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_GetEquippableInventoryDefinitionList final
{
public:
	TArray<TSoftObjectPtr<class UEquippableInventoryDefinition>> ReturnValue;                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.GetInventoryDefinitionList
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_GetInventoryDefinitionList final
{
public:
	TArray<TSoftObjectPtr<class UInventoryDefinition>> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventorySetupData.GetStartingItems
// 0x0010 (0x0010 - 0x0000)
struct InventorySetupData_GetStartingItems final
{
public:
	TArray<struct FInventoryStartingItem>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemAbilityConfigurationAsset.Construct
// 0x0008 (0x0008 - 0x0000)
struct ItemAbilityConfigurationAsset_Construct final
{
public:
	class UGameplayAbility*                       ability;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemDefinitionBase.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct ItemDefinitionBase_GetDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemDefinitionBase.GetItemData
// 0x0008 (0x0008 - 0x0000)
struct ItemDefinitionBase_GetItemData final
{
public:
	EItemDataQueryResult                          ExecResult;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemData;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemDefinitionBase.GetItemDescription
// 0x0010 (0x0010 - 0x0000)
struct ItemDefinitionBase_GetItemDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemDefinitionBase.GetItemShortDescription
// 0x0010 (0x0010 - 0x0000)
struct ItemDefinitionBase_GetItemShortDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationFunctionLibrary.DescribeInventoryID
// 0x0020 (0x0020 - 0x0000)
struct ItemizationFunctionLibrary_DescribeInventoryID final
{
public:
	struct FGuid                                  InventoryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationFunctionLibrary.DescribeItemEntryID
// 0x0020 (0x0020 - 0x0000)
struct ItemizationFunctionLibrary_DescribeItemEntryID final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationFunctionLibrary.GetItemDataDefinition
// 0x0078 (0x0078 - 0x0000)
struct ItemizationFunctionLibrary_GetItemDataDefinition final
{
public:
	struct FItemAggregatedData                    ItemData;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UItemDefinitionBase*              ReturnValue;                                       // 0x0070(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationFunctionLibrary.GetItemDataItemEntryID
// 0x0080 (0x0080 - 0x0000)
struct ItemizationFunctionLibrary_GetItemDataItemEntryID final
{
public:
	struct FItemAggregatedData                    ItemData;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationFunctionLibrary.GetItemDataSlot
// 0x0078 (0x0078 - 0x0000)
struct ItemizationFunctionLibrary_GetItemDataSlot final
{
public:
	struct FItemAggregatedData                    ItemData;                                          // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.ItemizationLootPoolAsset.GetAllowedLootPoolItemClasses
// 0x0010 (0x0010 - 0x0000)
struct ItemizationLootPoolAsset_GetAllowedLootPoolItemClasses final
{
public:
	TArray<class UClass*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationLootPoolAsset.GetDisallowedLootPoolItemClasses
// 0x0010 (0x0010 - 0x0000)
struct ItemizationLootPoolAsset_GetDisallowedLootPoolItemClasses final
{
public:
	TArray<class UClass*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemizationWorldSubsystem.OnInventoryComponentDestroyed
// 0x0008 (0x0008 - 0x0000)
struct ItemizationWorldSubsystem_OnInventoryComponentDestroyed final
{
public:
	const class UInventoryComponent*              InventoryComponent;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemRarity.GetColor
// 0x0010 (0x0010 - 0x0000)
struct ItemRarity_GetColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemRarity.GetDescription
// 0x0010 (0x0010 - 0x0000)
struct ItemRarity_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemRarity.GetName
// 0x0010 (0x0010 - 0x0000)
struct ItemRarity_GetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemRarity.GetTier
// 0x0004 (0x0004 - 0x0000)
struct ItemRarity_GetTier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemType.GetDescription
// 0x0010 (0x0010 - 0x0000)
struct ItemType_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemType.GetName
// 0x0010 (0x0010 - 0x0000)
struct ItemType_GetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.ItemType.GetParentType
// 0x0008 (0x0008 - 0x0000)
struct ItemType_GetParentType final
{
public:
	const class UItemType*                        ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryComponent.AddItem
// 0x0010 (0x0010 - 0x0000)
struct InventoryComponent_AddItem final
{
public:
	class UItemDefinitionBase*                    ItemDefinition;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Amount;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryComponent.AddOrResetInventory
// 0x0008 (0x0008 - 0x0000)
struct InventoryComponent_AddOrResetInventory final
{
public:
	class UInventoryDefinition*                   NewInventoryDefinition;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryComponent.DropItem
// 0x0010 (0x0010 - 0x0000)
struct InventoryComponent_DropItem final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryComponent.SetEquippableItemActive
// 0x0014 (0x0014 - 0x0000)
struct InventoryComponent_SetEquippableItemActive final
{
public:
	struct FGuid                                  ItemEntryID;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActive;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function ItemizationCoreRuntime.InventoryComponent.UseItem
// 0x0020 (0x0020 - 0x0000)
struct InventoryComponent_UseItem final
{
public:
	struct FGuid                                  ItemId;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  AdditionalItemID;                                  // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function ItemizationCoreRuntime.InventoryComponent.GetInventoryCollection
// 0x0008 (0x0008 - 0x0000)
struct InventoryComponent_GetInventoryCollection final
{
public:
	class AInventoryCollection*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

