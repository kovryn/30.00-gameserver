#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixMetasound

#include "Basic.hpp"

#include "HarmonixMidi_structs.hpp"


namespace SDK
{

// Enum HarmonixMetasound.EMusicClockState
// NumValues: 0x0004
enum class EMusicClockState : uint8
{
	Stopped                                  = 0,
	Paused                                   = 1,
	Running                                  = 2,
	EMusicClockState_MAX                     = 3,
};

// Enum HarmonixMetasound.EStdMidiControllerID
// NumValues: 0x0082
enum class EStdMidiControllerID : uint8
{
	BankSelection                            = 0,
	ModWheel                                 = 1,
	Breath                                   = 2,
	Undefined3                               = 3,
	FootController                           = 4,
	PortamentoTime                           = 5,
	DataCoarse                               = 6,
	Volume                                   = 7,
	Balance                                  = 8,
	Undefined9                               = 9,
	Pan                                      = 10,
	Expression                               = 11,
	EffectControl1                           = 12,
	EffectControl2                           = 13,
	Undefined14                              = 14,
	Undefined15                              = 15,
	GeneralPurposeController1                = 16,
	GeneralPurposeController2                = 17,
	GeneralPurposeController3                = 18,
	GeneralPurposeController4                = 19,
	Undefined20                              = 20,
	Undefined21                              = 21,
	Undefined22                              = 22,
	Undefined23                              = 23,
	Undefined24                              = 24,
	Undefined25                              = 25,
	Undefined26                              = 26,
	Undefined27                              = 27,
	Undefined28                              = 28,
	Undefined29                              = 29,
	Undefined30                              = 30,
	Undefined31                              = 31,
	LSBControl0                              = 32,
	LSBControl1                              = 33,
	LSBControl2                              = 34,
	LSBControl3                              = 35,
	LSBControl4                              = 36,
	LSBControl5                              = 37,
	LSBControl6                              = 38,
	LSBControl7                              = 39,
	LSBControl8                              = 40,
	LSBControl9                              = 41,
	LSBControl10                             = 42,
	LSBControl11                             = 43,
	LSBControl12                             = 44,
	LSBControl13                             = 45,
	LSBControl14                             = 46,
	LSBControl15                             = 47,
	LSBControl16                             = 48,
	LSBControl17                             = 49,
	LSBControl18                             = 50,
	LSBControl19                             = 51,
	LSBControl20                             = 52,
	LSBControl21                             = 53,
	LSBControl22                             = 54,
	LSBControl23                             = 55,
	LSBControl24                             = 56,
	LSBControl25                             = 57,
	LSBControl26                             = 58,
	LSBControl27                             = 59,
	LSBControl28                             = 60,
	LSBControl29                             = 61,
	LSBControl30                             = 62,
	LSBControl31                             = 63,
	Hold                                     = 64,
	PortamentoSwitch                         = 65,
	Sustenuto                                = 66,
	SoftPedal                                = 67,
	Legato                                   = 68,
	Hold2                                    = 69,
	SoundController1                         = 70,
	SoundController2                         = 71,
	SoundController3                         = 72,
	SoundController4                         = 73,
	SoundController5                         = 74,
	SoundController6                         = 75,
	SoundController7                         = 76,
	SoundController8                         = 77,
	SoundController9                         = 78,
	SoundController10                        = 79,
	GeneralPurposeController5                = 80,
	GeneralPurposeController6                = 81,
	GeneralPurposeController7                = 82,
	GeneralPurposeController8                = 83,
	PortamentoControl                        = 84,
	Undefined85                              = 85,
	Undefined86                              = 86,
	Undefined87                              = 87,
	HighResolutionVelocityPrefix             = 88,
	Undefined89                              = 89,
	Undefined90                              = 90,
	Effects1Depth                            = 91,
	Effects2Depth                            = 92,
	Effects3Depth                            = 93,
	Effects4Depth                            = 94,
	Effects5Depth                            = 95,
	DataIncrement                            = 96,
	DataDecrement                            = 97,
	NRPNFine                                 = 98,
	NRPNCoarse                               = 99,
	RPNFine                                  = 100,
	RPNCoarse                                = 101,
	Undefined102                             = 102,
	Undefined103                             = 103,
	Undefined104                             = 104,
	Undefined105                             = 105,
	Undefined106                             = 106,
	Undefined107                             = 107,
	Undefined108                             = 108,
	Undefined109                             = 109,
	Undefined110                             = 110,
	Undefined111                             = 111,
	Undefined112                             = 112,
	Undefined113                             = 113,
	Undefined114                             = 114,
	Undefined115                             = 115,
	Undefined116                             = 116,
	Undefined117                             = 117,
	Undefined118                             = 118,
	Undefined119                             = 119,
	AllSoundOff                              = 120,
	Reset                                    = 121,
	LocalKeyboardSwitch                      = 122,
	AllNotesOff                              = 123,
	OmniModeOff                              = 124,
	OmniModeOn                               = 125,
	MonoMode                                 = 126,
	PolyMode                                 = 127,
	NUM                                      = 128,
	EStdMidiControllerID_MAX                 = 129,
};

// Enum HarmonixMetasound.ESeekPointType
// NumValues: 0x0003
enum class ESeekPointType : uint8
{
	BarBeat                                  = 0,
	Millisecond                              = 1,
	ESeekPointType_MAX                       = 2,
};

// Enum HarmonixMetasound.EMusicClockDriveMethod
// NumValues: 0x0003
enum class EMusicClockDriveMethod : uint8
{
	WallClock                                = 0,
	MetaSound                                = 1,
	EMusicClockDriveMethod_MAX               = 2,
};

// ScriptStruct HarmonixMetasound.MidiEventInfo
// 0x0010 (0x0010 - 0x0000)
struct FMidiEventInfo final
{
public:
	struct FMusicTimestamp                        Timestamp;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         TrackIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMetasound.MusicSeekTarget
// 0x0010 (0x0010 - 0x0000)
struct FMusicSeekTarget final
{
public:
	ESeekPointType                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTimestamp                        BarBeat;                                           // 0x0004(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Ms;                                                // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMetasound.MusicLoopConfiguration
// 0x0014 (0x0014 - 0x0000)
struct FMusicLoopConfiguration final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTimestamp                        RegionStart;                                       // 0x0004(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMusicTimestamp                        RegionEnd;                                         // 0x000C(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMetasound.StepSequenceCell
// 0x0002 (0x0002 - 0x0000)
struct FStepSequenceCell final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bContinuation;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMetasound.StepSequenceRow
// 0x0018 (0x0018 - 0x0000)
struct FStepSequenceRow final
{
public:
	TArray<struct FStepSequenceCell>              Cells;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                          bRowEnabled;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMetasound.StepSequenceNote
// 0x0008 (0x0008 - 0x0000)
struct FStepSequenceNote final
{
public:
	int32                                         NoteNumber;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Velocity;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMetasound.StepSequencePage
// 0x0010 (0x0010 - 0x0000)
struct FStepSequencePage final
{
public:
	TArray<struct FStepSequenceRow>               Rows;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMetasound.StepSequenceTable
// 0x0028 (0x0028 - 0x0000)
struct FStepSequenceTable final
{
public:
	TArray<struct FStepSequencePage>              Pages;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	TArray<struct FStepSequenceNote>              Notes;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	int32                                         StepSkipIndex;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMetasound.MusicSeekRequest
// 0x0014 (0x0014 - 0x0000)
struct FMusicSeekRequest final
{
public:
	bool                                          EmmediateIfPastFromPoint;                          // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTimestamp                        FromPoint;                                         // 0x0004(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMusicTimestamp                        ToPoint;                                           // 0x000C(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMetasound.HarmonixPeakTamerSettings
// 0x0014 (0x0014 - 0x0000)
struct FHarmonixPeakTamerSettings final
{
public:
	float                                         PeakAttackTimeSeconds;                             // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PeakReleaseTimeSeconds;                            // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableValueSmoothing;                             // 0x0008(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ValueAttackTimeSeconds;                            // 0x000C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueReleaseTimeSeconds;                           // 0x0010(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

