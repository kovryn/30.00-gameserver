#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAugmentsCodeRuntime

#include "Basic.hpp"

#include "PlayerAugmentsCodeRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function PlayerAugmentsCodeRuntime.FortAugmentSelectionToolAbility.OnHighlightSelectionUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortAugmentSelectionToolAbility_OnHighlightSelectionUpdated final
{
public:
	int32                                         NewHighlightedChoiceIndex;                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortAugmentSelectionToolAbility.OnHoldRerollInputChanged
// 0x0002 (0x0002 - 0x0000)
struct FortAugmentSelectionToolAbility_OnHoldRerollInputChanged final
{
public:
	bool                                          bIsPressed;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompletedHold;                                    // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortAugmentSelectionToolAbility.OnSelectedChoiceIndex
// 0x0004 (0x0004 - 0x0000)
struct FortAugmentSelectionToolAbility_OnSelectedChoiceIndex final
{
public:
	int32                                         ChoiceIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortAugmentSelectionToolAbility.SetHighlightedChoiceIndex
// 0x0004 (0x0004 - 0x0000)
struct FortAugmentSelectionToolAbility_SetHighlightedChoiceIndex final
{
public:
	int32                                         NewChoiceIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.Get
// 0x0010 (0x0010 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_Get final
{
public:
	const class AController*                      Controller;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBattleRoyalePlayerAugmentSystem*   ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.AuthoritySetServerGrantingStartedTimestamp
// 0x0004 (0x0004 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_AuthoritySetServerGrantingStartedTimestamp final
{
public:
	float                                         ServerTimestamp;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.BlueprintAugmentLog
// 0x0018 (0x0018 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_BlueprintAugmentLog final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleRoyaleBPAugmentLogVerbosity            Verbosity;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutonomousProxyOnly;                              // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.BP_GetAugmentController
// 0x0010 (0x0010 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_BP_GetAugmentController final
{
public:
	EFortBRAugmentSystemCastResult                OutExec;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            OutController;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.BP_GetAugmentPlayerPawn
// 0x0010 (0x0010 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_BP_GetAugmentPlayerPawn final
{
public:
	EFortBRAugmentSystemCastResult                OutExec;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        OutFortPlayerPawn;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.ChooseUnlockFromList
// 0x0020 (0x0020 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_ChooseUnlockFromList final
{
public:
	TArray<struct FPlayerAugmentLockStatus>       LockedList;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFortAugmentPassiveUnlockResult        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.HandlePossessedPawnChanged
// 0x0010 (0x0010 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_HandlePossessedPawnChanged final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.OnPossedPawnChanged
// 0x0010 (0x0010 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_OnPossedPawnChanged final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.OnServerAugmentGrantTimestampReplicated
// 0x0004 (0x0004 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_OnServerAugmentGrantTimestampReplicated final
{
public:
	float                                         ServerGrantStartTimestamp;                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.TryClaimUnlock
// 0x0010 (0x0010 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_TryClaimUnlock final
{
public:
	struct FFortAugmentPassiveUnlockResult        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.GetServerGrantingStartedTimestamp
// 0x0004 (0x0004 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_GetServerGrantingStartedTimestamp final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortBattleRoyalePlayerAugmentSystem.IsBRAugmentSystemEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortBattleRoyalePlayerAugmentSystem_IsBRAugmentSystemEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortContextualTutorial_MultipleAugmentsQueued.ActivationEventCallback
// 0x0001 (0x0001 - 0x0000)
struct FortContextualTutorial_MultipleAugmentsQueued_ActivationEventCallback final
{
public:
	int8                                          NumPendingAugmentsToGrant;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortContextualTutorial_MultipleAugmentsQueued.CompletionEventCallback
// 0x0002 (0x0002 - 0x0000)
struct FortContextualTutorial_MultipleAugmentsQueued_CompletionEventCallback final
{
public:
	bool                                          bIsOpened;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bViewingAugmentInventory;                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortContextualTutorial_MultipleAugmentsQueued.HandleBindActivationTrigger
// 0x0008 (0x0008 - 0x0000)
struct FortContextualTutorial_MultipleAugmentsQueued_HandleBindActivationTrigger final
{
public:
	class AFortPlayerControllerZone*              FortPCZone;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortContextualTutorial_MultipleAugmentsQueued.HandleBindCompletionTrigger
// 0x0008 (0x0008 - 0x0000)
struct FortContextualTutorial_MultipleAugmentsQueued_HandleBindCompletionTrigger final
{
public:
	class AFortPlayerControllerZone*              FortPCZone;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.GetAugmentGrantingComponentFromController
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_GetAugmentGrantingComponentFromController final
{
public:
	const class AController*                      Controller;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortControllerComponent_AugmentGrantingSystem* ReturnValue;                               // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.AuthorityIncrementLockedSelectionChoices
// 0x0004 (0x0004 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_AuthorityIncrementLockedSelectionChoices final
{
public:
	int32                                         NumLocksToAdd;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.AuthorityRequestSelectionToolItemGrant
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_AuthorityRequestSelectionToolItemGrant final
{
public:
	class UObject*                                Instigator;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.AuthoritySetAvailableAugmentChoices
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_AuthoritySetAvailableAugmentChoices final
{
public:
	TArray<struct FPlayerAugmentChoiceDatum>      AvailableAugmentsToGrant;                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.ClientSelectAvailableAugmentToGrant
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_ClientSelectAvailableAugmentToGrant final
{
public:
	class UFortPlayerAugmentItemDefinition*       ChosenAugmentDef;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.HandleChangedBuildMode
// 0x0001 (0x0001 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_HandleChangedBuildMode final
{
public:
	bool                                          bEnteredBuildMode;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.HandlePossessedPawnChanged
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_HandlePossessedPawnChanged final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.HandleToggleFullscreenMap
// 0x0001 (0x0001 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_HandleToggleFullscreenMap final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.ServerGrantAugment
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_ServerGrantAugment final
{
public:
	class UFortPlayerAugmentItemDefinition*       ChosenAugmentDef;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.CanReroll
// 0x0001 (0x0001 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_CanReroll final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.GetAvailableAugmentsToGrant
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_GetAvailableAugmentsToGrant final
{
public:
	TArray<struct FPlayerAugmentChoiceDatum>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.GetNumFreeRerolls
// 0x0004 (0x0004 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_GetNumFreeRerolls final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.GetPendingAugmentsToGrant
// 0x0004 (0x0004 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_GetPendingAugmentsToGrant final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.IsSelectionChoicesLocked
// 0x0001 (0x0001 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_IsSelectionChoicesLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentGrantingSystem.IsSelectionItemEquipped
// 0x0001 (0x0001 - 0x0000)
struct FortControllerComponent_AugmentGrantingSystem_IsSelectionItemEquipped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.AugmentFuctionLibrary.GiveAugmentWithPreventDropping
// 0x0020 (0x0020 - 0x0000)
struct AugmentFuctionLibrary_GiveAugmentWithPreventDropping final
{
public:
	class UFortPlayerAugmentItemDefinition*       ChosenAugmentDef;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner;                             // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortWorldItem*                   ReturnValue;                                       // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentUIEvents.HandleAugmentSelectorOpenedStatusChanged
// 0x0002 (0x0002 - 0x0000)
struct FortControllerComponent_AugmentUIEvents_HandleAugmentSelectorOpenedStatusChanged final
{
public:
	bool                                          bIsOpened;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bViewingInventory;                                 // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentUIEvents.SetNumGrantableAugmentsForPlaylist
// 0x0004 (0x0004 - 0x0000)
struct FortControllerComponent_AugmentUIEvents_SetNumGrantableAugmentsForPlaylist final
{
public:
	int32                                         NewNumRounds;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_AugmentUIEvents.UpdatedTimerProgress
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_AugmentUIEvents_UpdatedTimerProgress final
{
public:
	float                                         TimeRemaining;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimePercentage;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.AuthoritySetCarryOverPlayerAugments
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_AuthoritySetCarryOverPlayerAugments final
{
public:
	TArray<struct FCarryOverPlayerAugment>        NewCarryOverPlayerAugments;                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.AuthoritySetRollCountSinceLastRandomUnlock
// 0x0004 (0x0004 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_AuthoritySetRollCountSinceLastRandomUnlock final
{
public:
	int32                                         NewRollCount;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.AuthorityUnlockPlayerAugment
// 0x0008 (0x0008 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_AuthorityUnlockPlayerAugment final
{
public:
	class UFortPlayerAugmentItemDefinition*       PlayerAugmentToUnlock;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.HandleCollectionDataLoaded
// 0x0020 (0x0020 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_HandleCollectionDataLoaded final
{
public:
	TSoftObjectPtr<class UFortCollectionData>     BaseCollectionDataSoftPtr;                         // 0x0000(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.HandleCollectionDataTableLoaded
// 0x0020 (0x0020 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_HandleCollectionDataTableLoaded final
{
public:
	TSoftObjectPtr<class UFortCollectionsDataTable> CollectionsDataTableSoftPtr;                     // 0x0000(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.GetCarryOverPlayerAugments
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_GetCarryOverPlayerAugments final
{
public:
	TArray<struct FCarryOverPlayerAugment>        OutCarryOverPlayerAugments;                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.GetLockedList
// 0x0018 (0x0018 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_GetLockedList final
{
public:
	TArray<struct FPlayerAugmentLockStatus>       OutLockedList;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIncludeSharedAugments;                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.GetLockStatus
// 0x0020 (0x0020 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_GetLockStatus final
{
public:
	class UFortPlayerAugmentItemDefinition*       PlayerAugmentItemDefinition;                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPlayerAugmentLockStatus               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.GetLockStatusForAll
// 0x0010 (0x0010 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_GetLockStatusForAll final
{
public:
	TArray<struct FPlayerAugmentLockStatus>       OutLockStatusArray;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortControllerComponent_PlayerAugmentPersistence.GetRollCountSinceLastRandomUnlock
// 0x0004 (0x0004 - 0x0000)
struct FortControllerComponent_PlayerAugmentPersistence_GetRollCountSinceLastRandomUnlock final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortMcpCollectionPlayerAugment.AddToPlayerCollection
// 0x0010 (0x0010 - 0x0000)
struct FortMcpCollectionPlayerAugment_AddToPlayerCollection final
{
public:
	const class AFortPlayerController*            PlayerController;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           PlayerAugmentVariantTag;                           // 0x0008(0x0004)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function PlayerAugmentsCodeRuntime.FortMcpCollectionPlayerAugment.MarkSeenForPlayer
// 0x0010 (0x0010 - 0x0000)
struct FortMcpCollectionPlayerAugment_MarkSeenForPlayer final
{
public:
	class AFortPlayerController*                  PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           VariantTag;                                        // 0x0008(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.ForceSelectionAugments
// 0x0020 (0x0020 - 0x0000)
struct FortPlayerAugmentCheatManager_ForceSelectionAugments final
{
public:
	class FString                                 AugmentNameFirst;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AugmentNameSecond;                                 // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.GiveAugment
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerAugmentCheatManager_GiveAugment final
{
public:
	class FString                                 AugmentName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.GiveAugmentCount
// 0x0018 (0x0018 - 0x0000)
struct FortPlayerAugmentCheatManager_GiveAugmentCount final
{
public:
	class FString                                 AugmentName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddCount;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.GiveAugmentToBots
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerAugmentCheatManager_GiveAugmentToBots final
{
public:
	class FString                                 AugmentName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.RemoveAugment
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerAugmentCheatManager_RemoveAugment final
{
public:
	class FString                                 AugmentName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.RemoveAugmentCount
// 0x0018 (0x0018 - 0x0000)
struct FortPlayerAugmentCheatManager_RemoveAugmentCount final
{
public:
	class FString                                 AugmentName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RemoveCount;                                       // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.ResetAugmentGrantingToSeed
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerAugmentCheatManager_ResetAugmentGrantingToSeed final
{
public:
	int32                                         Seed;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.ServerLogDynamicWeightsForPlayer
// 0x0001 (0x0001 - 0x0000)
struct FortPlayerAugmentCheatManager_ServerLogDynamicWeightsForPlayer final
{
public:
	bool                                          bVeryDetailedReport;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.SetPlayerAugmentRollCountSinceLastUnlock
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerAugmentCheatManager_SetPlayerAugmentRollCountSinceLastUnlock final
{
public:
	int32                                         RollCount;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerAugmentCheatManager.CollectPlayerAugment
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerAugmentCheatManager_CollectPlayerAugment final
{
public:
	class FString                                 TagMatch;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerStateComponent_PlayerAugmentSystem.GetActiveAugments
// 0x0018 (0x0018 - 0x0000)
struct FortPlayerStateComponent_PlayerAugmentSystem_GetActiveAugments final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortPlayerAugmentItemDefinition*> ReturnValue;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerStateComponent_PlayerAugmentSystem.GetAugmentComponent
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerStateComponent_PlayerAugmentSystem_GetAugmentComponent final
{
public:
	const class AActor*                           PlayerContextActor;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlayerStateComponent_PlayerAugmentSystem* ReturnValue;                                // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerStateComponent_PlayerAugmentSystem.GetAugmentComponentValidated
// 0x0018 (0x0018 - 0x0000)
struct FortPlayerStateComponent_PlayerAugmentSystem_GetAugmentComponentValidated final
{
public:
	EAugmentExecResult                            OutExec;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           PlayerContextActor;                                // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlayerStateComponent_PlayerAugmentSystem* ReturnValue;                                // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerStateComponent_PlayerAugmentSystem.GetAugmentMatchDataCacheFloat
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerStateComponent_PlayerAugmentSystem_GetAugmentMatchDataCacheFloat final
{
public:
	EAugmentExecResult                            OutExec;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TargetAugmentCacheTag;                             // 0x0004(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerStateComponent_PlayerAugmentSystem.HandleBotPlayerPawnSpawned
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerStateComponent_PlayerAugmentSystem_HandleBotPlayerPawnSpawned final
{
public:
	class AAIController*                          Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              Pawn;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function PlayerAugmentsCodeRuntime.FortPlayerStateComponent_PlayerAugmentSystem.SetAugmentMatchDataCacheFloat
// 0x0010 (0x0010 - 0x0000)
struct FortPlayerStateComponent_PlayerAugmentSystem_SetAugmentMatchDataCacheFloat final
{
public:
	struct FGameplayTag                           TargetAugmentCacheTag;                             // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InData;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

