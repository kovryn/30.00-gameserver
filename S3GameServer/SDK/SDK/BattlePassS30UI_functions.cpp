#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassS30UI

#include "Basic.hpp"

#include "BattlePassS30UI_classes.hpp"
#include "BattlePassS30UI_parameters.hpp"


namespace SDK
{

// Function BattlePassS30UI.BattlePassLandingPageS30.OnBattlePassSubscriptionAllowed
// (Event, Public, BlueprintEvent)
// Parameters:
// const bool                              bSubscriptionAllowed                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassLandingPageS30::OnBattlePassSubscriptionAllowed(const bool bSubscriptionAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassLandingPageS30", "OnBattlePassSubscriptionAllowed");

	Params::BattlePassLandingPageS30_OnBattlePassSubscriptionAllowed Parms{};

	Parms.bSubscriptionAllowed = bSubscriptionAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassRewardPageS30.HandleRewardTracksBoundaryNavigation
// (Final, Native, Private)
// Parameters:
// EUINavigation                           InNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UBattlePassRewardPageS30::HandleRewardTracksBoundaryNavigation(EUINavigation InNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS30", "HandleRewardTracksBoundaryNavigation");

	Params::BattlePassRewardPageS30_HandleRewardTracksBoundaryNavigation Parms{};

	Parms.InNavigation = InNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS30UI.BattlePassRewardPageS30.OnInitForPageType
// (Event, Public, BlueprintEvent)
// Parameters:
// const ERewardPageType                   InRewardPageType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS30::OnInitForPageType(const ERewardPageType InRewardPageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS30", "OnInitForPageType");

	Params::BattlePassRewardPageS30_OnInitForPageType Parms{};

	Parms.InRewardPageType = InRewardPageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassRewardPageS30.OnInputMethodChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const ECommonInputType                  InputType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS30::OnInputMethodChanged(const ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS30", "OnInputMethodChanged");

	Params::BattlePassRewardPageS30_OnInputMethodChanged Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassRewardPageS30.OnLoadingScreenSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS30::OnLoadingScreenSelectedChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS30", "OnLoadingScreenSelectedChanged");

	Params::BattlePassRewardPageS30_OnLoadingScreenSelectedChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassRewardPageS30.OnPageChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const int32                             PageNumber                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             RewardPageTotal                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassRewardPageS30::OnPageChanged(const int32 PageNumber, const int32 RewardPageTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS30", "OnPageChanged");

	Params::BattlePassRewardPageS30_OnPageChanged Parms{};

	Parms.PageNumber = PageNumber;
	Parms.RewardPageTotal = RewardPageTotal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassRewardPageS30.GetRewardPageBackgroundData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVaultWorldBackgroundData        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FVaultWorldBackgroundData UBattlePassRewardPageS30::GetRewardPageBackgroundData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassRewardPageS30", "GetRewardPageBackgroundData");

	Params::BattlePassRewardPageS30_GetRewardPageBackgroundData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS30UI.BattlePassScreenS30.GoBackOneScreen
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS30::GoBackOneScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "GoBackOneScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.BattlePassScreenS30.HandleClaimRewardComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// const bool                              bSuccess                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            OfferTemplateIdList                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::HandleClaimRewardComplete(const bool bSuccess, const TArray<class FString>& OfferTemplateIdList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "HandleClaimRewardComplete");

	Params::BattlePassScreenS30_HandleClaimRewardComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.OfferTemplateIdList = std::move(OfferTemplateIdList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.BattlePassScreenS30.HandleFullScreenMapToggled
// (Final, Native, Private)
// Parameters:
// bool                                    bMapVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::HandleFullScreenMapToggled(bool bMapVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "HandleFullScreenMapToggled");

	Params::BattlePassScreenS30_HandleFullScreenMapToggled Parms{};

	Parms.bMapVisible = bMapVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.BattlePassScreenS30.HandleItemVMCardClicked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class UFortItemVM*                ItemVM                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FMcpVariantChannelInfo>&Variants                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::HandleItemVMCardClicked(const class UFortItemVM* ItemVM, const TArray<struct FMcpVariantChannelInfo>& Variants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "HandleItemVMCardClicked");

	Params::BattlePassScreenS30_HandleItemVMCardClicked Parms{};

	Parms.ItemVM = ItemVM;
	Parms.Variants = std::move(Variants);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.BattlePassScreenS30.HandleSwitcherVisibilityShown
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS30::HandleSwitcherVisibilityShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "HandleSwitcherVisibilityShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.BattlePassScreenS30.OnBattlePassGiftingAllowed
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bGiftingAllowed                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnBattlePassGiftingAllowed(const bool bGiftingAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnBattlePassGiftingAllowed");

	Params::BattlePassScreenS30_OnBattlePassGiftingAllowed Parms{};

	Parms.bGiftingAllowed = bGiftingAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnBattlePassOwned
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS30::OnBattlePassOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnBattlePassOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnCreateViewRewardCard
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class UFortItemVM*                ItemVM                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFortItemDefinition*        EffectiveActivedef                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FMcpVariantChannelInfo>&Variants                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bForceEffectiveImage                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnCreateViewRewardCard(const class UFortItemVM* ItemVM, const class UFortItemDefinition* EffectiveActivedef, const TArray<struct FMcpVariantChannelInfo>& Variants, bool bForceEffectiveImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnCreateViewRewardCard");

	Params::BattlePassScreenS30_OnCreateViewRewardCard Parms{};

	Parms.ItemVM = ItemVM;
	Parms.EffectiveActivedef = EffectiveActivedef;
	Parms.Variants = std::move(Variants);
	Parms.bForceEffectiveImage = bForceEffectiveImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnGameModeCompatibilityTagUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UFortItemVM*                FortItem                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnGameModeCompatibilityTagUpdate(const class UFortItemVM* FortItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnGameModeCompatibilityTagUpdate");

	Params::BattlePassScreenS30_OnGameModeCompatibilityTagUpdate Parms{};

	Parms.FortItem = FortItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnHideItemDetails
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS30::OnHideItemDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnHideItemDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnInsufficientFunds
// (Event, Protected, BlueprintEvent)
// Parameters:
// const EBattlePassCurrencyType           CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnInsufficientFunds(const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnInsufficientFunds");

	Params::BattlePassScreenS30_OnInsufficientFunds Parms{};

	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnInsufficientResource
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnInsufficientResource(const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnInsufficientResource");

	Params::BattlePassScreenS30_OnInsufficientResource Parms{};

	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnItemDelayed
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 Delay                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnItemDelayed(const struct FTimespan& Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnItemDelayed");

	Params::BattlePassScreenS30_OnItemDelayed Parms{};

	Parms.Delay = std::move(Delay);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnItemDetailsClicked
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS30::OnItemDetailsClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnItemDetailsClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnItemVmCardUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// const struct FExpandedItemVM&           ItemVMs                                                (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// const class UAthenaSeasonItemEntryBase* EntrySelected                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnItemVmCardUpdate(const struct FExpandedItemVM& ItemVMs, const class UAthenaSeasonItemEntryBase* EntrySelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnItemVmCardUpdate");

	Params::BattlePassScreenS30_OnItemVmCardUpdate Parms{};

	Parms.ItemVMs = std::move(ItemVMs);
	Parms.EntrySelected = EntrySelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnJunoCustomBannerUpdate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSubclassOf<class UUserWidget>          BannerClassReference                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UFortItemVM*>&       ItemVMs                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnJunoCustomBannerUpdate(TSubclassOf<class UUserWidget> BannerClassReference, const TArray<class UFortItemVM*>& ItemVMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnJunoCustomBannerUpdate");

	Params::BattlePassScreenS30_OnJunoCustomBannerUpdate Parms{};

	Parms.BannerClassReference = BannerClassReference;
	Parms.ItemVMs = std::move(ItemVMs);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetBaseRewardsInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetBaseRewardsInfo(const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetBaseRewardsInfo");

	Params::BattlePassScreenS30_OnSetBaseRewardsInfo Parms{};

	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetBonusInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FBonusInfoMiniTagData&     BonusInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetBonusInfo(const struct FBonusInfoMiniTagData& BonusInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetBonusInfo");

	Params::BattlePassScreenS30_OnSetBonusInfo Parms{};

	Parms.BonusInfo = std::move(BonusInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetBonusRewardsInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsUnlocked                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ClaimedOutfits                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalOutfits                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetBonusRewardsInfo(const bool bIsUnlocked, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages, const int32 ClaimedOutfits, const int32 TotalOutfits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetBonusRewardsInfo");

	Params::BattlePassScreenS30_OnSetBonusRewardsInfo Parms{};

	Parms.bIsUnlocked = bIsUnlocked;
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;
	Parms.ClaimedOutfits = ClaimedOutfits;
	Parms.TotalOutfits = TotalOutfits;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetCoverPageData
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bPageComplete                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetCoverPageData(const class FText& Title, const class FText& Description, const bool bPageComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetCoverPageData");

	Params::BattlePassScreenS30_OnSetCoverPageData Parms{};

	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);
	Parms.bPageComplete = bPageComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetCrewInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bIsNextMonthRewards                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      MonthText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FTimespan&                 NextMonthlyRewardTimespan                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      CharacterDisplayName                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      CharacterDescription                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetCrewInfo(bool bIsNextMonthRewards, const class FText& MonthText, const struct FTimespan& NextMonthlyRewardTimespan, const class FText& CharacterDisplayName, const class FText& CharacterDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetCrewInfo");

	Params::BattlePassScreenS30_OnSetCrewInfo Parms{};

	Parms.bIsNextMonthRewards = bIsNextMonthRewards;
	Parms.MonthText = std::move(MonthText);
	Parms.NextMonthlyRewardTimespan = std::move(NextMonthlyRewardTimespan);
	Parms.CharacterDisplayName = std::move(CharacterDisplayName);
	Parms.CharacterDescription = std::move(CharacterDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetEquipButtonEnable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetEquipButtonEnable(bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetEquipButtonEnable");

	Params::BattlePassScreenS30_OnSetEquipButtonEnable Parms{};

	Parms.bIsEnable = bIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetItemPrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EBattlePassCurrencyType           CurrencyType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetItemPrice(const int32 Cost, const EBattlePassCurrencyType CurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetItemPrice");

	Params::BattlePassScreenS30_OnSetItemPrice Parms{};

	Parms.Cost = Cost;
	Parms.CurrencyType = CurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetPrerequisiteInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             CurrentAmount                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NeededAmount                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBattlePassRewardPrerequisiteType       PrerequisiteType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bShowPrerequisiteLock                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetPrerequisiteInfo(const class FText& Description, const int32 CurrentAmount, const int32 NeededAmount, EBattlePassRewardPrerequisiteType PrerequisiteType, const bool bShowPrerequisiteLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetPrerequisiteInfo");

	Params::BattlePassScreenS30_OnSetPrerequisiteInfo Parms{};

	Parms.Description = std::move(Description);
	Parms.CurrentAmount = CurrentAmount;
	Parms.NeededAmount = NeededAmount;
	Parms.PrerequisiteType = PrerequisiteType;
	Parms.bShowPrerequisiteLock = bShowPrerequisiteLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetQuestRewardsInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 DelayTimespan                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetQuestRewardsInfo(const struct FTimespan& DelayTimespan, const int32 OwnedRewards, const int32 TotalRewards, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetQuestRewardsInfo");

	Params::BattlePassScreenS30_OnSetQuestRewardsInfo Parms{};

	Parms.DelayTimespan = std::move(DelayTimespan);
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetResourcePrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             Cost                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFortPersistentResourceItemDefinition*PersistentResource                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetResourcePrice(const int32 Cost, const class UFortPersistentResourceItemDefinition* PersistentResource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetResourcePrice");

	Params::BattlePassScreenS30_OnSetResourcePrice Parms{};

	Parms.Cost = Cost;
	Parms.PersistentResource = PersistentResource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetWarningToolTip
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const ERewardWarningTooltipType30&      WarningTooltipType                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetWarningToolTip(const ERewardWarningTooltipType30& WarningTooltipType, const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetWarningToolTip");

	Params::BattlePassScreenS30_OnSetWarningToolTip Parms{};

	Parms.WarningTooltipType = WarningTooltipType;
	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnSetWeeklyRewardsInfo
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FTimespan&                 DelayTimespan                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AvailableRewards                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             OwnedRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalRewards                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             AvailablePages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             CompletedPages                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             TotalPages                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnSetWeeklyRewardsInfo(const struct FTimespan& DelayTimespan, const int32 AvailableRewards, const int32 OwnedRewards, const int32 TotalRewards, const int32 AvailablePages, const int32 CompletedPages, const int32 TotalPages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnSetWeeklyRewardsInfo");

	Params::BattlePassScreenS30_OnSetWeeklyRewardsInfo Parms{};

	Parms.DelayTimespan = std::move(DelayTimespan);
	Parms.AvailableRewards = AvailableRewards;
	Parms.OwnedRewards = OwnedRewards;
	Parms.TotalRewards = TotalRewards;
	Parms.AvailablePages = AvailablePages;
	Parms.CompletedPages = CompletedPages;
	Parms.TotalPages = TotalPages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnTransitionItemDetails
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bTransitionForward                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnTransitionItemDetails(const bool bTransitionForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnTransitionItemDetails");

	Params::BattlePassScreenS30_OnTransitionItemDetails Parms{};

	Parms.bTransitionForward = bTransitionForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnUpdateBattlePassRequiredBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bPassRequiredVisible                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnUpdateBattlePassRequiredBar(const bool bPassRequiredVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnUpdateBattlePassRequiredBar");

	Params::BattlePassScreenS30_OnUpdateBattlePassRequiredBar Parms{};

	Parms.bPassRequiredVisible = bPassRequiredVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnUpdateOwnedOrEquippedTag
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      StatusText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnUpdateOwnedOrEquippedTag(const class FText& StatusText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnUpdateOwnedOrEquippedTag");

	Params::BattlePassScreenS30_OnUpdateOwnedOrEquippedTag Parms{};

	Parms.StatusText = std::move(StatusText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OnUpdateStatusBar
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      StatusText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const EBattlePassStatusBarTypeS30&      BarType                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattlePassScreenS30::OnUpdateStatusBar(const class FText& StatusText, const EBattlePassStatusBarTypeS30& BarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OnUpdateStatusBar");

	Params::BattlePassScreenS30_OnUpdateStatusBar Parms{};

	Parms.StatusText = std::move(StatusText);
	Parms.BarType = BarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.BattlePassScreenS30.OverviewShowAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UBattlePassScreenS30::OverviewShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "OverviewShowAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.BattlePassScreenS30.SetFocusToFirstItemDetailsCard
// (Event, Protected, BlueprintEvent)

void UBattlePassScreenS30::SetFocusToFirstItemDetailsCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "SetFocusToFirstItemDetailsCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS30UI.BattlePassScreenS30.GetEquipButtonEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS30::GetEquipButtonEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "GetEquipButtonEnable");

	Params::BattlePassScreenS30_GetEquipButtonEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS30UI.BattlePassScreenS30.GetQuestPageDelay
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UBattlePassScreenS30::GetQuestPageDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "GetQuestPageDelay");

	Params::BattlePassScreenS30_GetQuestPageDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS30UI.BattlePassScreenS30.IsSeasonalCustomizationItemOwned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassScreenS30::IsSeasonalCustomizationItemOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePassScreenS30", "IsSeasonalCustomizationItemOwned");

	Params::BattlePassScreenS30_IsSeasonalCustomizationItemOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BattlePassS30UI.FortBattlePassResourcesWidgetS30.OnBattleStarRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS30::OnBattleStarRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassResourcesWidgetS30", "OnBattleStarRewardsSet");

	Params::FortBattlePassResourcesWidgetS30_OnBattleStarRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.FortBattlePassResourcesWidgetS30.OnStylePointsRewardsSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// const int32                             Rewards                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBattlePassResourcesWidgetS30::OnStylePointsRewardsSet(const int32 Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassResourcesWidgetS30", "OnStylePointsRewardsSet");

	Params::FortBattlePassResourcesWidgetS30_OnStylePointsRewardsSet Parms{};

	Parms.Rewards = Rewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlePassS30UI.FortBattlePassTutorialTooltipS30.HideTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS30::HideTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS30", "HideTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlePassS30UI.FortBattlePassTutorialTooltipS30.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FText&                      Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortBattlePassTutorialTooltipS30::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS30", "SetText");

	Params::FortBattlePassTutorialTooltipS30_SetText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BattlePassS30UI.FortBattlePassTutorialTooltipS30.ShowTooltip
// (Event, Protected, BlueprintEvent)

void UFortBattlePassTutorialTooltipS30::ShowTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBattlePassTutorialTooltipS30", "ShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}

}

