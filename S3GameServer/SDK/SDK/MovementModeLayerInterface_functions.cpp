#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovementModeLayerInterface

#include "Basic.hpp"

#include "MovementModeLayerInterface_classes.hpp"
#include "MovementModeLayerInterface_parameters.hpp"


namespace SDK
{

// Function MovementModeLayerInterface.MovementModeLayerInterface_C.MovementMode_AimOffset
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InAimOffsetsPose                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FPoseLink&                 InSourcePosePreAimOffsets                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       MovementMode_AimOffset_0                               (Parm, OutParm, NoDestructor)

void IMovementModeLayerInterface_C::MovementMode_AimOffset(const struct FPoseLink& InAimOffsetsPose, const struct FPoseLink& InSourcePosePreAimOffsets, struct FPoseLink* MovementMode_AimOffset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MovementModeLayerInterface_C", "MovementMode_AimOffset");

	Params::MovementModeLayerInterface_C_MovementMode_AimOffset Parms{};

	Parms.InAimOffsetsPose = std::move(InAimOffsetsPose);
	Parms.InSourcePosePreAimOffsets = std::move(InSourcePosePreAimOffsets);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MovementMode_AimOffset_0 != nullptr)
		*MovementMode_AimOffset_0 = std::move(Parms.MovementMode_AimOffset_0);
}


// Function MovementModeLayerInterface.MovementModeLayerInterface_C.MovementMode_FinalPoseOverride
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InFinalPose                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       MovementMode_FinalPoseOverride_0                       (Parm, OutParm, NoDestructor)

void IMovementModeLayerInterface_C::MovementMode_FinalPoseOverride(const struct FPoseLink& InFinalPose, struct FPoseLink* MovementMode_FinalPoseOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MovementModeLayerInterface_C", "MovementMode_FinalPoseOverride");

	Params::MovementModeLayerInterface_C_MovementMode_FinalPoseOverride Parms{};

	Parms.InFinalPose = std::move(InFinalPose);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MovementMode_FinalPoseOverride_0 != nullptr)
		*MovementMode_FinalPoseOverride_0 = std::move(Parms.MovementMode_FinalPoseOverride_0);
}


// Function MovementModeLayerInterface.MovementModeLayerInterface_C.MovementMode_FullBodyOverride
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InputPoseFullBody                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       MovementMode_FullBodyOverride_0                        (Parm, OutParm, NoDestructor)

void IMovementModeLayerInterface_C::MovementMode_FullBodyOverride(const struct FPoseLink& InputPoseFullBody, struct FPoseLink* MovementMode_FullBodyOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MovementModeLayerInterface_C", "MovementMode_FullBodyOverride");

	Params::MovementModeLayerInterface_C_MovementMode_FullBodyOverride Parms{};

	Parms.InputPoseFullBody = std::move(InputPoseFullBody);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MovementMode_FullBodyOverride_0 != nullptr)
		*MovementMode_FullBodyOverride_0 = std::move(Parms.MovementMode_FullBodyOverride_0);
}


// Function MovementModeLayerInterface.MovementModeLayerInterface_C.MovementMode_LocomotionAdditives
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InLocomotionAdditivesPose                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       MovementMode_LocomotionAdditives_0                     (Parm, OutParm, NoDestructor)

void IMovementModeLayerInterface_C::MovementMode_LocomotionAdditives(const struct FPoseLink& InLocomotionAdditivesPose, struct FPoseLink* MovementMode_LocomotionAdditives_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MovementModeLayerInterface_C", "MovementMode_LocomotionAdditives");

	Params::MovementModeLayerInterface_C_MovementMode_LocomotionAdditives Parms{};

	Parms.InLocomotionAdditivesPose = std::move(InLocomotionAdditivesPose);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MovementMode_LocomotionAdditives_0 != nullptr)
		*MovementMode_LocomotionAdditives_0 = std::move(Parms.MovementMode_LocomotionAdditives_0);
}


// Function MovementModeLayerInterface.MovementModeLayerInterface_C.MovementMode_LowerBodyOverride
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InLowerBodyPose                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// const struct FPoseLink&                 InSourcePose                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       MovementMode_LowerBodyOverride_0                       (Parm, OutParm, NoDestructor)

void IMovementModeLayerInterface_C::MovementMode_LowerBodyOverride(const struct FPoseLink& InLowerBodyPose, const struct FPoseLink& InSourcePose, struct FPoseLink* MovementMode_LowerBodyOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MovementModeLayerInterface_C", "MovementMode_LowerBodyOverride");

	Params::MovementModeLayerInterface_C_MovementMode_LowerBodyOverride Parms{};

	Parms.InLowerBodyPose = std::move(InLowerBodyPose);
	Parms.InSourcePose = std::move(InSourcePose);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MovementMode_LowerBodyOverride_0 != nullptr)
		*MovementMode_LowerBodyOverride_0 = std::move(Parms.MovementMode_LowerBodyOverride_0);
}


// Function MovementModeLayerInterface.MovementModeLayerInterface_C.MovementMode_SourcePose
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FPoseLink&                 InSourcePoseBase                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink*                       MovementMode_SourcePose_0                              (Parm, OutParm, NoDestructor)

void IMovementModeLayerInterface_C::MovementMode_SourcePose(const struct FPoseLink& InSourcePoseBase, struct FPoseLink* MovementMode_SourcePose_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MovementModeLayerInterface_C", "MovementMode_SourcePose");

	Params::MovementModeLayerInterface_C_MovementMode_SourcePose Parms{};

	Parms.InSourcePoseBase = std::move(InSourcePoseBase);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (MovementMode_SourcePose_0 != nullptr)
		*MovementMode_SourcePose_0 = std::move(Parms.MovementMode_SourcePose_0);
}

}

