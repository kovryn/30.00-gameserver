#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContextualActionCodeRuntime

#include "Basic.hpp"

#include "ContextualActionCodeRuntime_classes.hpp"
#include "ContextualActionCodeRuntime_parameters.hpp"


namespace SDK
{

// Function ContextualActionCodeRuntime.FortMovementMode_ExtLogicBaseSwinging.OnOwnerDBNO
// (Final, Native, Protected)

void UFortMovementMode_ExtLogicBaseSwinging::OnOwnerDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtLogicBaseSwinging", "OnOwnerDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.FortSwingingObject.OnEndSwing_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  AttachedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSwingingObject::OnEndSwing_BP(class AFortPlayerPawn* AttachedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwingingObject", "OnEndSwing_BP");

	Params::FortSwingingObject_OnEndSwing_BP Parms{};

	Parms.AttachedActor = AttachedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContextualActionCodeRuntime.FortSwingingObject.OnStartSwing_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  AttachedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSwingingObject::OnStartSwing_BP(class AFortPlayerPawn* AttachedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwingingObject", "OnStartSwing_BP");

	Params::FortSwingingObject_OnStartSwing_BP Parms{};

	Parms.AttachedActor = AttachedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_OnCleanup
// (Event, Protected, BlueprintEvent)

void UHijackerComponent::BP_OnCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_OnCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_OnCompleteHijack
// (Event, Protected, BlueprintEvent)

void UHijackerComponent::BP_OnCompleteHijack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_OnCompleteHijack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_OnHijackCancelled
// (Event, Protected, BlueprintEvent)

void UHijackerComponent::BP_OnHijackCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_OnHijackCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_OnHijackInterrupted
// (Event, Protected, BlueprintEvent)

void UHijackerComponent::BP_OnHijackInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_OnHijackInterrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_OnStartHijack
// (Event, Protected, BlueprintEvent)

void UHijackerComponent::BP_OnStartHijack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_OnStartHijack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.HijackerComponent.CancelHijack_NetMulticast
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UHijackerComponent::CancelHijack_NetMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "CancelHijack_NetMulticast");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.HijackerComponent.CancelHijack_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UHijackerComponent::CancelHijack_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "CancelHijack_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.HijackerComponent.EjectHijacker
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Damage                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EventLocation                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHijackerComponent::EjectHijacker(class AActor* DamageCauser, const float Damage, const struct FVector& EventLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "EjectHijacker");

	Params::HijackerComponent_EjectHijacker Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.Damage = Damage;
	Parms.EventLocation = std::move(EventLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.HijackerComponent.HandleOwnerJumpInput
// (Final, Native, Private)
// Parameters:
// bool                                    bPressed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHijackerComponent::HandleOwnerJumpInput(bool bPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "HandleOwnerJumpInput");

	Params::HijackerComponent_HandleOwnerJumpInput Parms{};

	Parms.bPressed = bPressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.HijackerComponent.OnCompleteHijack
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UHijackerComponent::OnCompleteHijack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "OnCompleteHijack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.HijackerComponent.OnStartHijack
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AActor*                           VehicleTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHijackerComponent::OnStartHijack(class AActor* VehicleTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "OnStartHijack");

	Params::HijackerComponent_OnStartHijack Parms{};

	Parms.VehicleTarget = VehicleTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.HijackerComponent.TryHijack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           VehicleTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInteractionType&          InteractionType                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHijackerComponent::TryHijack(class AActor* VehicleTarget, const struct FInteractionType& InteractionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "TryHijack");

	Params::HijackerComponent_TryHijack Parms{};

	Parms.VehicleTarget = VehicleTarget;
	Parms.InteractionType = std::move(InteractionType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_CanCompleteHijack
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// bool*                                   OutCanCompleteHijack                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHijackerComponent::BP_CanCompleteHijack(bool* OutCanCompleteHijack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_CanCompleteHijack");

	Params::HijackerComponent_BP_CanCompleteHijack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCanCompleteHijack != nullptr)
		*OutCanCompleteHijack = Parms.OutCanCompleteHijack;
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_CanStartHijack
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// bool*                                   OutCanStartHijack                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHijackerComponent::BP_CanStartHijack(bool* OutCanStartHijack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_CanStartHijack");

	Params::HijackerComponent_BP_CanStartHijack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCanStartHijack != nullptr)
		*OutCanStartHijack = Parms.OutCanStartHijack;
}


// Function ContextualActionCodeRuntime.HijackerComponent.BP_GetThrownVelocity
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Damage                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   EventLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHijackerComponent::BP_GetThrownVelocity(class AActor* DamageCauser, const float Damage, const struct FVector& EventLocation, struct FVector* OutVelocity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HijackerComponent", "BP_GetThrownVelocity");

	Params::HijackerComponent_BP_GetThrownVelocity Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.Damage = Damage;
	Parms.EventLocation = std::move(EventLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutVelocity != nullptr)
		*OutVelocity = std::move(Parms.OutVelocity);
}


// Function ContextualActionCodeRuntime.RappellingComponent.EndRappelling
// (Final, Native, Public, BlueprintCallable)

void URappellingComponent::EndRappelling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "EndRappelling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.EndRappelling_Server
// (Net, NetReliable, Native, Event, Protected, NetServer)

void URappellingComponent::EndRappelling_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "EndRappelling_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.EndRappellingSwing_Server
// (Net, NetReliable, Native, Event, Protected, NetServer)

void URappellingComponent::EndRappellingSwing_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "EndRappellingSwing_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnCapsuleHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// const class UPrimitiveComponent*        HitComponent                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     OtherActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UPrimitiveComponent*        OtherComp                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void URappellingComponent::OnCapsuleHit(const class UPrimitiveComponent* HitComponent, const class AActor* OtherActor, const class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnCapsuleHit");

	Params::RappellingComponent_OnCapsuleHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnEndRappelling
// (Event, Public, BlueprintEvent)

void URappellingComponent::OnEndRappelling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnEndRappelling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnInvalidTargeting
// (Event, Public, BlueprintEvent)

void URappellingComponent::OnInvalidTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnInvalidTargeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnOwnerMovementModeChanged
// (Final, Native, Protected)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PreviousMovementMode                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URappellingComponent::OnOwnerMovementModeChanged(class ACharacter* Character, EMovementMode PreviousMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnOwnerMovementModeChanged");

	Params::RappellingComponent_OnOwnerMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PreviousMovementMode = PreviousMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnRep_RappellingState
// (Final, Native, Protected)

void URappellingComponent::OnRep_RappellingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnRep_RappellingState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnStartRappelling
// (Event, Public, BlueprintEvent)

void URappellingComponent::OnStartRappelling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnStartRappelling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.RappellingComponent.OnValidTargeting
// (Event, Public, BlueprintEvent)

void URappellingComponent::OnValidTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "OnValidTargeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.RappellingComponent.RappellingCorrectFallingRotation_Client
// (Net, NetReliable, Native, Event, Protected, NetClient)

void URappellingComponent::RappellingCorrectFallingRotation_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "RappellingCorrectFallingRotation_Client");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.StartRappelling
// (Final, Native, Public, BlueprintCallable)

void URappellingComponent::StartRappelling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "StartRappelling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.StartRappelling_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults)
// Parameters:
// const struct FVector&                   NewGravityDirection                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ClientRappellingEdge                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   ClientRappellingNormal                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URappellingComponent::StartRappelling_Server(const struct FVector& NewGravityDirection, const struct FVector& ClientRappellingEdge, const struct FVector& ClientRappellingNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "StartRappelling_Server");

	Params::RappellingComponent_StartRappelling_Server Parms{};

	Parms.NewGravityDirection = std::move(NewGravityDirection);
	Parms.ClientRappellingEdge = std::move(ClientRappellingEdge);
	Parms.ClientRappellingNormal = std::move(ClientRappellingNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.StartRappellingSwing_Server
// (Net, NetReliable, Native, Event, Protected, NetServer)

void URappellingComponent::StartRappellingSwing_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "StartRappellingSwing_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.TestToggleGravity
// (Final, Native, Public, BlueprintCallable)

void URappellingComponent::TestToggleGravity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "TestToggleGravity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.RappellingComponent.TestToggleGravity_Server
// (Net, NetReliable, Native, Event, Protected, NetServer)

void URappellingComponent::TestToggleGravity_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RappellingComponent", "TestToggleGravity_Server");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.AttachToObject_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// class AFortSwingingObject*              Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USwingingObjectComponent::AttachToObject_Server(class AFortSwingingObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "AttachToObject_Server");

	Params::SwingingObjectComponent_AttachToObject_Server Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.BP_OnEndSwing
// (Event, Protected, BlueprintEvent)

void USwingingObjectComponent::BP_OnEndSwing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "BP_OnEndSwing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.BP_OnStartSwing
// (Event, Protected, BlueprintEvent)

void USwingingObjectComponent::BP_OnStartSwing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "BP_OnStartSwing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.DetachFromObject_Server
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bJumpExit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USwingingObjectComponent::DetachFromObject_Server(bool bJumpExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "DetachFromObject_Server");

	Params::SwingingObjectComponent_DetachFromObject_Server Parms{};

	Parms.bJumpExit = bJumpExit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.HandleOwnerJumpInput
// (Final, Native, Private)
// Parameters:
// bool                                    bPressed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USwingingObjectComponent::HandleOwnerJumpInput(bool bPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "HandleOwnerJumpInput");

	Params::SwingingObjectComponent_HandleOwnerJumpInput Parms{};

	Parms.bPressed = bPressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.OnRep_SwingingObject
// (Final, Native, Private)

void USwingingObjectComponent::OnRep_SwingingObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "OnRep_SwingingObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.BP_CanStartSwing
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AFortSwingingObject*              SwingTarget                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bCanStartSwing                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USwingingObjectComponent::BP_CanStartSwing(class AFortSwingingObject* SwingTarget, bool* bCanStartSwing) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "BP_CanStartSwing");

	Params::SwingingObjectComponent_BP_CanStartSwing Parms{};

	Parms.SwingTarget = SwingTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (bCanStartSwing != nullptr)
		*bCanStartSwing = Parms.bCanStartSwing;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.GetAimRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator USwingingObjectComponent::GetAimRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "GetAimRotation");

	Params::SwingingObjectComponent_GetAimRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ContextualActionCodeRuntime.SwingingObjectComponent.GetSwingDeltaAngle
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator*                        OutSwingRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator*                        OutDeltaRotation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USwingingObjectComponent::GetSwingDeltaAngle(struct FRotator* OutSwingRotation, struct FRotator* OutDeltaRotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SwingingObjectComponent", "GetSwingDeltaAngle");

	Params::SwingingObjectComponent_GetSwingDeltaAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSwingRotation != nullptr)
		*OutSwingRotation = std::move(Parms.OutSwingRotation);

	if (OutDeltaRotation != nullptr)
		*OutDeltaRotation = std::move(Parms.OutDeltaRotation);
}

}

