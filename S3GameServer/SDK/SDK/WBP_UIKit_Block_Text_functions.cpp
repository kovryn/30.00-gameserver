#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Block_Text

#include "Basic.hpp"

#include "WBP_UIKit_Block_Text_classes.hpp"
#include "WBP_UIKit_Block_Text_parameters.hpp"


namespace SDK
{

// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.ExecuteUbergraph_WBP_UIKit_Block_Text
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::ExecuteUbergraph_WBP_UIKit_Block_Text(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "ExecuteUbergraph_WBP_UIKit_Block_Text");

	Params::WBP_UIKit_Block_Text_C_ExecuteUbergraph_WBP_UIKit_Block_Text Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnInstantTransitionToDisabled
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnInstantTransitionToDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnInstantTransitionToDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnInstantTransitionToEnabled
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnInstantTransitionToEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnInstantTransitionToEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnInstantTransitionToSelected
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnInstantTransitionToSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnInstantTransitionToSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionDeselectedFocusedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionDeselectedFocusedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionDeselectedFocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionDeselectedIdleRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionDeselectedIdleRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionDeselectedIdleRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionDisabledRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionDisabledRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionDisabledRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionEnabledRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionEnabledRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionEnabledRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionFocusedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionFocusedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionFocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionHoveredRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionHoveredRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionHoveredRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionPressedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionPressedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionPressedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionReleasedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionReleasedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionReleasedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionSelectedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionSelectedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionSelectedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionUnfocusedRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionUnfocusedRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionUnfocusedRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.OnTransitionUnhoveredRequested
// (Event, Protected, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::OnTransitionUnhoveredRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "OnTransitionUnhoveredRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.RefreshFontMID
// (Protected, BlueprintCallable, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::RefreshFontMID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "RefreshFontMID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.RefreshOutlineMID
// (Protected, BlueprintCallable, BlueprintEvent)

void UWBP_UIKit_Block_Text_C::RefreshOutlineMID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "RefreshOutlineMID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetFont
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateFontInfo&                  Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetFont(struct FSlateFontInfo& Font)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetFont");

	Params::WBP_UIKit_Block_Text_C_SetFont Parms{};

	Parms.Font = std::move(Font);

	UObject::ProcessEvent(Func, &Parms);

	Font = std::move(Parms.Font);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetFontMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstance*                In_Material                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetFontMaterial(class UMaterialInstance* In_Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetFontMaterial");

	Params::WBP_UIKit_Block_Text_C_SetFontMaterial Parms{};

	Parms.In_Material = In_Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetJustification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            Justification                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetJustification(ETextJustify Justification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetJustification");

	Params::WBP_UIKit_Block_Text_C_SetJustification Parms{};

	Parms.Justification = Justification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetMobileFontSizeMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MobileFontSizeMultiplier                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetMobileFontSizeMultiplier(double MobileFontSizeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetMobileFontSizeMultiplier");

	Params::WBP_UIKit_Block_Text_C_SetMobileFontSizeMultiplier Parms{};

	Parms.MobileFontSizeMultiplier = MobileFontSizeMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetOutlineMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstance*                In_Material                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetOutlineMaterial(class UMaterialInstance* In_Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetOutlineMaterial");

	Params::WBP_UIKit_Block_Text_C_SetOutlineMaterial Parms{};

	Parms.In_Material = In_Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetOutlineSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetOutlineSize(int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetOutlineSize");

	Params::WBP_UIKit_Block_Text_C_SetOutlineSize Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_UIKit_Block_Text_C::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetText");

	Params::WBP_UIKit_Block_Text_C_SetText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetTransformPolicy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextTransformPolicy                    Transform_Policy                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetTransformPolicy(ETextTransformPolicy Transform_Policy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetTransformPolicy");

	Params::WBP_UIKit_Block_Text_C_SetTransformPolicy Parms{};

	Parms.Transform_Policy = Transform_Policy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.SetWrapping
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAutoWrap                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrapTextAt                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Block_Text_C::SetWrapping(bool IsAutoWrap, int32 WrapTextAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "SetWrapping");

	Params::WBP_UIKit_Block_Text_C_SetWrapping Parms{};

	Parms.IsAutoWrap = IsAutoWrap;
	Parms.WrapTextAt = WrapTextAt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Block_Text.WBP_UIKit_Block_Text_C.HasOutline
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_UIKit_Block_Text_C::HasOutline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Block_Text_C", "HasOutline");

	Params::WBP_UIKit_Block_Text_C_HasOutline Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

