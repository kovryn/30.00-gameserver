#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KnockbackRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KnockbackRuntime_structs.hpp"


namespace SDK::Params
{

// Function KnockbackRuntime.FortAthenaMutator_Knockback.GetAllPlayersKnockbackData
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Knockback_GetAllPlayersKnockbackData final
{
public:
	TArray<struct FKnockbackMutatorData>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortAthenaMutator_Knockback.HandleBlockedCharacterMovement
// 0x00F8 (0x00F8 - 0x0000)
struct FortAthenaMutator_Knockback_HandleBlockedCharacterMovement final
{
public:
	struct FHitResult                             InOutImpact;                                       // 0x0000(0x00F0)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AFortPawn*                              FortPawn;                                          // 0x00F0(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortAthenaMutator_Knockback.SetPlayersShouldBreakThroughStructures
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Knockback_SetPlayersShouldBreakThroughStructures final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortAthenaMutator_Knockback.GetKnockbackMultiplierInitialValue
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMutator_Knockback_GetKnockbackMultiplierInitialValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortAthenaMutator_Knockback.GetPercentDamageLowMaxThreshold
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMutator_Knockback_GetPercentDamageLowMaxThreshold final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortAthenaMutator_Knockback.GetPercentDamageMediumMaxThreshold
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMutator_Knockback_GetPercentDamageMediumMaxThreshold final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortGameplayAbility_KnockbackMutator.GetCachedMutator
// 0x0008 (0x0008 - 0x0000)
struct FortGameplayAbility_KnockbackMutator_GetCachedMutator final
{
public:
	class AFortAthenaMutator_Knockback*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function KnockbackRuntime.FortGameplayAbility_KnockbackMutator.SaveKnockbackData
// 0x0020 (0x0020 - 0x0000)
struct FortGameplayAbility_KnockbackMutator_SaveKnockbackData final
{
public:
	struct FKnockbackMutatorData                  InKnockbackData;                                   // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};

}

