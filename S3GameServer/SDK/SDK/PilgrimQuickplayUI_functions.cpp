#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimQuickplayUI

#include "Basic.hpp"

#include "PilgrimQuickplayUI_classes.hpp"
#include "PilgrimQuickplayUI_parameters.hpp"


namespace SDK
{

// Function PilgrimQuickplayUI.FestivalPassTrackingWidget.HandleMCPInventoryChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TSet<class FString>&              ItemChangeFlags                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   ProfileRevision                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFestivalPassTrackingWidget::HandleMCPInventoryChanged(const TSet<class FString>& ItemChangeFlags, int64 ProfileRevision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestivalPassTrackingWidget", "HandleMCPInventoryChanged");

	Params::FestivalPassTrackingWidget_HandleMCPInventoryChanged Parms{};

	Parms.ItemChangeFlags = std::move(ItemChangeFlags);
	Parms.ProfileRevision = ProfileRevision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.FestivalPassTrackingWidget.OnProgressUpdated
// (Event, Protected, BlueprintEvent)

void UFestivalPassTrackingWidget::OnProgressUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FestivalPassTrackingWidget", "OnProgressUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PilgrimQuickplayUI.PilgrimHUDBase.HandlePickerOpenRequest
// (Final, Native, Private)
// Parameters:
// EFortPickerMode                         Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InitialOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreFirstAccept                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimHUDBase::HandlePickerOpenRequest(EFortPickerMode Mode, int32 InitialOption, bool bIgnoreFirstAccept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimHUDBase", "HandlePickerOpenRequest");

	Params::PilgrimHUDBase_HandlePickerOpenRequest Parms{};

	Parms.Mode = Mode;
	Parms.InitialOption = InitialOption;
	Parms.bIgnoreFirstAccept = bIgnoreFirstAccept;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimPostGameQuestList.SetShowQuests
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const bool                              bNewShowCompleted                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNewShowUpdated                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bNewShowUnchanged                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPostGameQuestList::SetShowQuests(const bool bNewShowCompleted, const bool bNewShowUpdated, const bool bNewShowUnchanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPostGameQuestList", "SetShowQuests");

	Params::PilgrimPostGameQuestList_SetShowQuests Parms{};

	Parms.bNewShowCompleted = bNewShowCompleted;
	Parms.bNewShowUpdated = bNewShowUpdated;
	Parms.bNewShowUnchanged = bNewShowUnchanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplayInfoModal.BP_OnScrollCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bScrolledDown                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayInfoModal::BP_OnScrollCompleted(bool bScrolledDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayInfoModal", "BP_OnScrollCompleted");

	Params::PilgrimQuickplayInfoModal_BP_OnScrollCompleted Parms{};

	Parms.bScrolledDown = bScrolledDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.OnSpotlightListUpdated
// (Native, Event, Protected, BlueprintEvent)

void UPilgrimQuickplaySpotlightList::OnSpotlightListUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "OnSpotlightListUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.PopulateSpotlightCompetitionList
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplaySpotlightList::PopulateSpotlightCompetitionList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "PopulateSpotlightCompetitionList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.SelectNextIndex
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplaySpotlightList::SelectNextIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "SelectNextIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.SelectPrevIndex
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplaySpotlightList::SelectPrevIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "SelectPrevIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.SetMaxSpotlights
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewMaxSpotlights                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplaySpotlightList::SetMaxSpotlights(int32 NewMaxSpotlights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "SetMaxSpotlights");

	Params::PilgrimQuickplaySpotlightList_SetMaxSpotlights Parms{};

	Parms.NewMaxSpotlights = NewMaxSpotlights;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewSelectedIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplaySpotlightList::SetSelectedIndex(int32 NewSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "SetSelectedIndex");

	Params::PilgrimQuickplaySpotlightList_SetSelectedIndex Parms{};

	Parms.NewSelectedIndex = NewSelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.UpdateSpotlightList
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplaySpotlightList::UpdateSpotlightList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "UpdateSpotlightList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightList.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimQuickplaySpotlightList::GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightList", "GetSelectedIndex");

	Params::PilgrimQuickplaySpotlightList_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayUI.PilgrimQuestNotificationEntry.InitializeQuestNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IQuestInstanceInterface>InQuest                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuestNotificationEntry::InitializeQuestNotification(TScriptInterface<class IQuestInstanceInterface> InQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuestNotificationEntry", "InitializeQuestNotification");

	Params::PilgrimQuestNotificationEntry_InitializeQuestNotification Parms{};

	Parms.InQuest = InQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightEntry.OnSpotlightInitialized
// (Native, Event, Public, BlueprintEvent)

void UPilgrimQuickplaySpotlightEntry::OnSpotlightInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightEntry", "OnSpotlightInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightEntry.SetEmptySpotlight
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplaySpotlightEntry::SetEmptySpotlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightEntry", "SetEmptySpotlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayUI.PilgrimQuickplaySpotlightEntry.SpotlightEntryUpdated
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplaySpotlightEntry::SpotlightEntryUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySpotlightEntry", "SpotlightEntryUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

