#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaItemTextureVariantPicker

#include "Basic.hpp"

#include "AthenaItemTextureVariantPicker_classes.hpp"
#include "AthenaItemTextureVariantPicker_parameters.hpp"


namespace SDK
{

// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAthenaItemTextureVariantPicker_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemTextureVariantPicker_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.ExecuteUbergraph_AthenaItemTextureVariantPicker
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaItemTextureVariantPicker_C::ExecuteUbergraph_AthenaItemTextureVariantPicker(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemTextureVariantPicker_C", "ExecuteUbergraph_AthenaItemTextureVariantPicker");

	Params::AthenaItemTextureVariantPicker_C_ExecuteUbergraph_AthenaItemTextureVariantPicker Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.HandleConflictStatusUpdated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsConflicting                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      ConflictReason                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UAthenaItemTextureVariantPicker_C::HandleConflictStatusUpdated(bool IsConflicting, const class FText& ConflictReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemTextureVariantPicker_C", "HandleConflictStatusUpdated");

	Params::AthenaItemTextureVariantPicker_C_HandleConflictStatusUpdated Parms{};

	Parms.IsConflicting = IsConflicting;
	Parms.ConflictReason = std::move(ConflictReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.HandleEntryInitialized
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UAthenaItemTextureVariantPicker_C::HandleEntryInitialized(class UObject* Item, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemTextureVariantPicker_C", "HandleEntryInitialized");

	Params::AthenaItemTextureVariantPicker_C_HandleEntryInitialized Parms{};

	Parms.Item = Item;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaItemTextureVariantPicker.AthenaItemTextureVariantPicker_C.OnToggleAllItemsArchivedMessage
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaItemTextureVariantPicker_C::OnToggleAllItemsArchivedMessage(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemTextureVariantPicker_C", "OnToggleAllItemsArchivedMessage");

	Params::AthenaItemTextureVariantPicker_C_OnToggleAllItemsArchivedMessage Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}

}

