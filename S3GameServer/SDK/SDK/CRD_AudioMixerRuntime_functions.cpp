#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CRD_AudioMixerRuntime

#include "Basic.hpp"

#include "CRD_AudioMixerRuntime_classes.hpp"
#include "CRD_AudioMixerRuntime_parameters.hpp"


namespace SDK
{

// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.ActivateMix
// (Final, Native, Public, BlueprintCallable)

void ACreativeAudioMixerDevice::ActivateMix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "ActivateMix");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.DeactivateMix
// (Final, Native, Public, BlueprintCallable)

void ACreativeAudioMixerDevice::DeactivateMix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "DeactivateMix");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnAllPlayersUnregistered
// (Final, Native, Private)

void ACreativeAudioMixerDevice::OnAllPlayersUnregistered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnAllPlayersUnregistered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnMinigameEnded
// (Final, Native, Private)

void ACreativeAudioMixerDevice::OnMinigameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnMinigameEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnMinigameStarted
// (Final, Native, Private)

void ACreativeAudioMixerDevice::OnMinigameStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnMinigameStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnPlayerAdded
// (Final, Native, Private)
// Parameters:
// const struct FUniqueNetIdRepl&          NetId                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACreativeAudioMixerDevice::OnPlayerAdded(const struct FUniqueNetIdRepl& NetId, bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnPlayerAdded");

	Params::CreativeAudioMixerDevice_OnPlayerAdded Parms{};

	Parms.NetId = std::move(NetId);
	Parms.bIsLocalPlayer = bIsLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnPlayerRegistered
// (Final, Native, Private)
// Parameters:
// const class AFortPlayerState*           PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACreativeAudioMixerDevice::OnPlayerRegistered(const class AFortPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnPlayerRegistered");

	Params::CreativeAudioMixerDevice_OnPlayerRegistered Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnPlayerUnregistered
// (Final, Native, Private)
// Parameters:
// const class AFortPlayerState*           PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACreativeAudioMixerDevice::OnPlayerUnregistered(const class AFortPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnPlayerUnregistered");

	Params::CreativeAudioMixerDevice_OnPlayerUnregistered Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnPreAnyPropertyChanged
// (Final, Native, Private)

void ACreativeAudioMixerDevice::OnPreAnyPropertyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnPreAnyPropertyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function CRD_AudioMixerRuntime.CreativeAudioMixerDevice.OnProxyDataChanged
// (Final, Native, Private)
// Parameters:
// class ACreativePlayerReplicationProxy*  ProxyData                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACreativeAudioMixerDevice::OnProxyDataChanged(class ACreativePlayerReplicationProxy* ProxyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeAudioMixerDevice", "OnProxyDataChanged");

	Params::CreativeAudioMixerDevice_OnProxyDataChanged Parms{};

	Parms.ProxyData = ProxyData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

