#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerAvatar

#include "Basic.hpp"

#include "WBP_PlayerAvatar_classes.hpp"
#include "WBP_PlayerAvatar_parameters.hpp"


namespace SDK
{

// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_PlayerAvatar_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.Event Set Presence Icon Settings
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::Event_Set_Presence_Icon_Settings(double Scale, const struct FVector2D& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "Event Set Presence Icon Settings");

	Params::WBP_PlayerAvatar_C_Event_Set_Presence_Icon_Settings Parms{};

	Parms.Scale = Scale;
	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.Event Set Size
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 NewSize                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::Event_Set_Size(const struct FVector2D& NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "Event Set Size");

	Params::WBP_PlayerAvatar_C_Event_Set_Size Parms{};

	Parms.NewSize = std::move(NewSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.ExecuteUbergraph_WBP_PlayerAvatar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::ExecuteUbergraph_WBP_PlayerAvatar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "ExecuteUbergraph_WBP_PlayerAvatar");

	Params::WBP_PlayerAvatar_C_ExecuteUbergraph_WBP_PlayerAvatar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.OnSetSocialUser
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortSocialUser*                  InUser                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::OnSetSocialUser(class UFortSocialUser* InUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "OnSetSocialUser");

	Params::WBP_PlayerAvatar_C_OnSetSocialUser Parms{};

	Parms.InUser = InUser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "PreConstruct");

	Params::WBP_PlayerAvatar_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.SetBackgroundColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FColor&                    BackgroundColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::SetBackgroundColor(const struct FColor& BackgroundColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "SetBackgroundColor");

	Params::WBP_PlayerAvatar_C_SetBackgroundColor Parms{};

	Parms.BackgroundColor = std::move(BackgroundColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.SetEmpty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEmpty                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::SetEmpty(bool bEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "SetEmpty");

	Params::WBP_PlayerAvatar_C_SetEmpty Parms{};

	Parms.bEmpty = bEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.SetHighlightColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FColor&                    HighlightColor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::SetHighlightColor(const struct FColor& HighlightColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "SetHighlightColor");

	Params::WBP_PlayerAvatar_C_SetHighlightColor Parms{};

	Parms.HighlightColor = std::move(HighlightColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.SetOnlineStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPresenceIndicatorState                 OnlineStatus                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::SetOnlineStatus(EPresenceIndicatorState OnlineStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "SetOnlineStatus");

	Params::WBP_PlayerAvatar_C_SetOnlineStatus Parms{};

	Parms.OnlineStatus = OnlineStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.SetOnlineStatusVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHideStatus                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::SetOnlineStatusVisibility(bool bHideStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "SetOnlineStatusVisibility");

	Params::WBP_PlayerAvatar_C_SetOnlineStatusVisibility Parms{};

	Parms.bHideStatus = bHideStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PlayerAvatar.WBP_PlayerAvatar_C.SetTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PlayerAvatar_C::SetTexture(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PlayerAvatar_C", "SetTexture");

	Params::WBP_PlayerAvatar_C_SetTexture Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}

}

