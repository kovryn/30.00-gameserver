#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteAIServer

#include "Basic.hpp"

#include "FortniteAIServer_classes.hpp"
#include "FortniteAIServer_parameters.hpp"


namespace SDK
{

// Function FortniteAIServer.FortAthenaAIBotEvaluator_Harvest.HandleConverted
// (Final, Native, Protected)
// Parameters:
// const class AFortPawn*                  InstigatorPawn                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AFortPawn*                  ConvertedPawn                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Harvest::HandleConverted(const class AFortPawn* InstigatorPawn, const class AFortPawn* ConvertedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Harvest", "HandleConverted");

	Params::FortAthenaAIBotEvaluator_Harvest_HandleConverted Parms{};

	Parms.InstigatorPawn = InstigatorPawn;
	Parms.ConvertedPawn = ConvertedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Harvest.HandleUnconverted
// (Final, Native, Protected)
// Parameters:
// const class AFortPawn*                  UnconvertedPawn                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnconvertReason                        UnconvertReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Harvest::HandleUnconverted(const class AFortPawn* UnconvertedPawn, EUnconvertReason UnconvertReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Harvest", "HandleUnconverted");

	Params::FortAthenaAIBotEvaluator_Harvest_HandleUnconverted Parms{};

	Parms.UnconvertedPawn = UnconvertedPawn;
	Parms.UnconvertReason = UnconvertReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortWorldConditionTimeOfDayState.HandleTimeOfDayPhaseChange
// (Final, Native, Private)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortWorldConditionTimeOfDayState::HandleTimeOfDayPhaseChange(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldConditionTimeOfDayState", "HandleTimeOfDayPhaseChange");

	Params::FortWorldConditionTimeOfDayState_HandleTimeOfDayPhaseChange Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaBTTask_Zipline.OnZiplineStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bIsZiplining                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  FortPlayerPawn                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaBTTask_Zipline::OnZiplineStateChanged(bool bIsZiplining, class AFortPlayerPawn* FortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaBTTask_Zipline", "OnZiplineStateChanged");

	Params::FortAthenaBTTask_Zipline_OnZiplineStateChanged Parms{};

	Parms.bIsZiplining = bIsZiplining;
	Parms.FortPlayerPawn = FortPlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaBTTask_Escalate.BP_OnEscalate
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class AFortPlayerPawn*            OwnerActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AFortPlayerPawn*            EscalateTarget                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaBTTask_Escalate::BP_OnEscalate(const class AFortPlayerPawn* OwnerActor, const class AFortPlayerPawn* EscalateTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaBTTask_Escalate", "BP_OnEscalate");

	Params::FortAthenaBTTask_Escalate_BP_OnEscalate Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.EscalateTarget = EscalateTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteAIServer.FortAthenaBTTask_Escalate.BP_OnHasEscalateTarget
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class AFortPlayerPawn*            OwnerActor                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AFortPlayerPawn*            EscalateTarget                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaBTTask_Escalate::BP_OnHasEscalateTarget(const class AFortPlayerPawn* OwnerActor, const class AFortPlayerPawn* EscalateTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaBTTask_Escalate", "BP_OnHasEscalateTarget");

	Params::FortAthenaBTTask_Escalate_BP_OnHasEscalateTarget Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.EscalateTarget = EscalateTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteAIServer.FortAthenaBTService_ManageWeapon.ManageWeaponTargeting
// (Final, Native, Protected, Const)
// Parameters:
// class UBehaviorTreeComponent*           OwnerComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaBTService_ManageWeapon::ManageWeaponTargeting(class UBehaviorTreeComponent* OwnerComp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaBTService_ManageWeapon", "ManageWeaponTargeting");

	Params::FortAthenaBTService_ManageWeapon_ManageWeaponTargeting Parms{};

	Parms.OwnerComp = OwnerComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_RangeAttack.FindShootingPosition_Async
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// const int32                             RequestID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             DistanceFromTarget                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             WeaponIdealAttackRange                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetPosition                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_RangeAttack::FindShootingPosition_Async(const int32 RequestID, const float DistanceFromTarget, const float WeaponIdealAttackRange, const struct FVector& TargetPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_RangeAttack", "FindShootingPosition_Async");

	Params::FortAthenaAIBotEvaluator_RangeAttack_FindShootingPosition_Async Parms{};

	Parms.RequestID = RequestID;
	Parms.DistanceFromTarget = DistanceFromTarget;
	Parms.WeaponIdealAttackRange = WeaponIdealAttackRange;
	Parms.TargetPosition = std::move(TargetPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortEQSPrevisActor.PrepForPrevis
// (Event, Public, BlueprintEvent)

void AFortEQSPrevisActor::PrepForPrevis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEQSPrevisActor", "PrepForPrevis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteAIServer.FortEQSPrevisActor.SetQueryTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEnvQuery*                        InPrevisQueryTemplate                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortEQSPrevisActor::SetQueryTemplate(class UEnvQuery* InPrevisQueryTemplate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEQSPrevisActor", "SetQueryTemplate");

	Params::FortEQSPrevisActor_SetQueryTemplate Parms{};

	Parms.InPrevisQueryTemplate = InPrevisQueryTemplate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Revive.OnCurrentTargetRevived
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  RevivedPawn                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Revive::OnCurrentTargetRevived(class AFortPlayerPawn* RevivedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Revive", "OnCurrentTargetRevived");

	Params::FortAthenaAIBotEvaluator_Revive_OnCurrentTargetRevived Parms{};

	Parms.RevivedPawn = RevivedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_ReactToVerb.HandlePawnStartedEmote
// (Final, Native, Protected)
// Parameters:
// const class UFortItemDefinition*        MontageItemDef                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        PawnEmoting                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_ReactToVerb::HandlePawnStartedEmote(const class UFortItemDefinition* MontageItemDef, class AFortPawn* PawnEmoting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_ReactToVerb", "HandlePawnStartedEmote");

	Params::FortAthenaAIBotEvaluator_ReactToVerb_HandlePawnStartedEmote Parms{};

	Parms.MontageItemDef = MontageItemDef;
	Parms.PawnEmoting = PawnEmoting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_ReactToVerb.HandlePawnStoppedEmote
// (Final, Native, Protected)
// Parameters:
// const class UFortItemDefinition*        MontageItemDef                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        PawnEmoting                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_ReactToVerb::HandlePawnStoppedEmote(const class UFortItemDefinition* MontageItemDef, class AFortPawn* PawnEmoting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_ReactToVerb", "HandlePawnStoppedEmote");

	Params::FortAthenaAIBotEvaluator_ReactToVerb_HandlePawnStoppedEmote Parms{};

	Parms.MontageItemDef = MontageItemDef;
	Parms.PawnEmoting = PawnEmoting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Ambush.OnAssignedPerksChangedEvent
// (Final, Native, Private)

void UFortAthenaAIBotEvaluator_Ambush::OnAssignedPerksChangedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Ambush", "OnAssignedPerksChangedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Bunker.OnAssignedPerksChangedEvent
// (Final, Native, Private)

void UFortAthenaAIBotEvaluator_Bunker::OnAssignedPerksChangedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Bunker", "OnAssignedPerksChangedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_CharacterLaunched.OnCharacterLaunchChanged
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UFortMovementComp_Character*      MovementComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   LaunchVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_CharacterLaunched::OnCharacterLaunchChanged(class UFortMovementComp_Character* MovementComponent, const struct FVector& LaunchVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_CharacterLaunched", "OnCharacterLaunchChanged");

	Params::FortAthenaAIBotEvaluator_CharacterLaunched_OnCharacterLaunchChanged Parms{};

	Parms.MovementComponent = MovementComponent;
	Parms.LaunchVelocity = std::move(LaunchVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_CharacterLaunched.OnZiplineStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsZiplining                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  FortPlayerPawn                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_CharacterLaunched::OnZiplineStateChanged(bool bIsZiplining, class AFortPlayerPawn* FortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_CharacterLaunched", "OnZiplineStateChanged");

	Params::FortAthenaAIBotEvaluator_CharacterLaunched_OnZiplineStateChanged Parms{};

	Parms.bIsZiplining = bIsZiplining;
	Parms.FortPlayerPawn = FortPlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Conversation.OnPlayerPawnSpawned
// (Final, Native, Private)
// Parameters:
// class AAIController*                    Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Conversation::OnPlayerPawnSpawned(class AAIController* Controller, class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Conversation", "OnPlayerPawnSpawned");

	Params::FortAthenaAIBotEvaluator_Conversation_OnPlayerPawnSpawned Parms{};

	Parms.Controller = Controller;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Converted.OnConvertedEvent
// (Final, Native, Protected)
// Parameters:
// class AFortPawn*                        InstigatorPawn                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        ConvertedPawn                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Converted::OnConvertedEvent(class AFortPawn* InstigatorPawn, class AFortPawn* ConvertedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Converted", "OnConvertedEvent");

	Params::FortAthenaAIBotEvaluator_Converted_OnConvertedEvent Parms{};

	Parms.InstigatorPawn = InstigatorPawn;
	Parms.ConvertedPawn = ConvertedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Converted.OnUnconvertedEvent
// (Final, Native, Protected)
// Parameters:
// class AFortPawn*                        UnconvertedPawn                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EUnconvertReason                  UnconvertReason                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Converted::OnUnconvertedEvent(class AFortPawn* UnconvertedPawn, const EUnconvertReason UnconvertReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Converted", "OnUnconvertedEvent");

	Params::FortAthenaAIBotEvaluator_Converted_OnUnconvertedEvent Parms{};

	Parms.UnconvertedPawn = UnconvertedPawn;
	Parms.UnconvertReason = UnconvertReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_DBNO.OnAllyPawnDBNOStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPawn*                        InPlayer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDBNO                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_DBNO::OnAllyPawnDBNOStateChanged(class AFortPawn* InPlayer, bool bInIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_DBNO", "OnAllyPawnDBNOStateChanged");

	Params::FortAthenaAIBotEvaluator_DBNO_OnAllyPawnDBNOStateChanged Parms{};

	Parms.InPlayer = InPlayer;
	Parms.bInIsDBNO = bInIsDBNO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Escalate.OnPlayerPawnSpawned
// (Final, Native, Private)
// Parameters:
// class AAIController*                    Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Escalate::OnPlayerPawnSpawned(class AAIController* Controller, class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Escalate", "OnPlayerPawnSpawned");

	Params::FortAthenaAIBotEvaluator_Escalate_OnPlayerPawnSpawned Parms{};

	Parms.Controller = Controller;
	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_EvasiveManeuvers.OnAssignedPerksChangedEvent
// (Final, Native, Private)

void UFortAthenaAIBotEvaluator_EvasiveManeuvers::OnAssignedPerksChangedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_EvasiveManeuvers", "OnAssignedPerksChangedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_EvasiveManeuvers.OnMoveCompleted
// (Final, Native, Public)
// Parameters:
// const struct FAIRequestID&              RequestID                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EPathFollowingResult                    MovementResult                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_EvasiveManeuvers::OnMoveCompleted(const struct FAIRequestID& RequestID, EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_EvasiveManeuvers", "OnMoveCompleted");

	Params::FortAthenaAIBotEvaluator_EvasiveManeuvers_OnMoveCompleted Parms{};

	Parms.RequestID = std::move(RequestID);
	Parms.MovementResult = MovementResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Heal.HandlePlayerHealthOrShieldChanged
// (Final, Native, Private)

void UFortAthenaAIBotEvaluator_Heal::HandlePlayerHealthOrShieldChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Heal", "HandlePlayerHealthOrShieldChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Retreat.HandlePlayerHealthOrShieldChanged
// (Final, Native, Protected)

void UFortAthenaAIBotEvaluator_Retreat::HandlePlayerHealthOrShieldChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Retreat", "HandlePlayerHealthOrShieldChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_SandTunnel.Jump
// (Final, Native, Protected)

void UFortAthenaAIBotEvaluator_SandTunnel::Jump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_SandTunnel", "Jump");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_SandTunnel.OnBotControllerAlertLevelChanged
// (Final, Native, Private)
// Parameters:
// class AFortAthenaAIBotController*       BotController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAlertLevel                             OldAlertLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAlertLevel                             NewAlertLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_SandTunnel::OnBotControllerAlertLevelChanged(class AFortAthenaAIBotController* BotController, EAlertLevel OldAlertLevel, EAlertLevel NewAlertLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_SandTunnel", "OnBotControllerAlertLevelChanged");

	Params::FortAthenaAIBotEvaluator_SandTunnel_OnBotControllerAlertLevelChanged Parms{};

	Parms.BotController = BotController;
	Parms.OldAlertLevel = OldAlertLevel;
	Parms.NewAlertLevel = NewAlertLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_SelectNextDynamicPOI.OnAgentDied
// (Final, Native, Protected)
// Parameters:
// class AFortAthenaAIBotController*       BotController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        FortPawn                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_SelectNextDynamicPOI::OnAgentDied(class AFortAthenaAIBotController* BotController, class AFortPawn* FortPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_SelectNextDynamicPOI", "OnAgentDied");

	Params::FortAthenaAIBotEvaluator_SelectNextDynamicPOI_OnAgentDied Parms{};

	Parms.BotController = BotController;
	Parms.FortPawn = FortPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_SelectNextDynamicPOI.OnGamePhaseLogicReady
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FFortBattleRoyaleGamePhaseLogicComponentReadyEvent&Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_SelectNextDynamicPOI::OnGamePhaseLogicReady(const struct FFortBattleRoyaleGamePhaseLogicComponentReadyEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_SelectNextDynamicPOI", "OnGamePhaseLogicReady");

	Params::FortAthenaAIBotEvaluator_SelectNextDynamicPOI_OnGamePhaseLogicReady Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_SelectNextDynamicPOI.OnSafeZonePhaseChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FFortSafeZonePhaseUpdatedEvent&Event                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_SelectNextDynamicPOI::OnSafeZonePhaseChanged(const struct FFortSafeZonePhaseUpdatedEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_SelectNextDynamicPOI", "OnSafeZonePhaseChanged");

	Params::FortAthenaAIBotEvaluator_SelectNextDynamicPOI_OnSafeZonePhaseChanged Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_SelectNextDynamicPOI.ReachingPositionFail_Async
// (Final, Native, Private)
// Parameters:
// const int32                             RequestID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_SelectNextDynamicPOI::ReachingPositionFail_Async(const int32 RequestID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_SelectNextDynamicPOI", "ReachingPositionFail_Async");

	Params::FortAthenaAIBotEvaluator_SelectNextDynamicPOI_ReachingPositionFail_Async Parms{};

	Parms.RequestID = RequestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Storm.OnSafeZoneStateChanged
// (Final, Native, Public)
// Parameters:
// const EFortSafeZoneState                NewState                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Storm::OnSafeZoneStateChanged(const EFortSafeZoneState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Storm", "OnSafeZoneStateChanged");

	Params::FortAthenaAIBotEvaluator_Storm_OnSafeZoneStateChanged Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIBotEvaluator_Zipline.OnZiplineStateChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsZiplining                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  FortPlayerPawn                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIBotEvaluator_Zipline::OnZiplineStateChanged(bool bIsZiplining, class AFortPlayerPawn* FortPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIBotEvaluator_Zipline", "OnZiplineStateChanged");

	Params::FortAthenaAIBotEvaluator_Zipline_OnZiplineStateChanged Parms{};

	Parms.bIsZiplining = bIsZiplining;
	Parms.FortPlayerPawn = FortPlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.OnEnter
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBehaviorTreeComponent*           OwnerComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIEvaluator_BlueprintBase::OnEnter(class UBehaviorTreeComponent* OwnerComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIEvaluator_BlueprintBase", "OnEnter");

	Params::FortAthenaAIEvaluator_BlueprintBase_OnEnter Parms{};

	Parms.OwnerComp = OwnerComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.OnExit
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UBehaviorTreeComponent*           OwnerComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaAIEvaluator_BlueprintBase::OnExit(class UBehaviorTreeComponent* OwnerComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIEvaluator_BlueprintBase", "OnExit");

	Params::FortAthenaAIEvaluator_BlueprintBase_OnExit Parms{};

	Parms.OwnerComp = OwnerComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.EvaluateOngoingConditions
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UBehaviorTreeComponent*           OwnerComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAthenaAIEvaluator_BlueprintBase::EvaluateOngoingConditions(class UBehaviorTreeComponent* OwnerComp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIEvaluator_BlueprintBase", "EvaluateOngoingConditions");

	Params::FortAthenaAIEvaluator_BlueprintBase_EvaluateOngoingConditions Parms{};

	Parms.OwnerComp = OwnerComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteAIServer.FortAthenaAIEvaluator_BlueprintBase.EvaluateStartingConditions
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UBehaviorTreeComponent*           OwnerComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAthenaAIEvaluator_BlueprintBase::EvaluateStartingConditions(class UBehaviorTreeComponent* OwnerComp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAIEvaluator_BlueprintBase", "EvaluateStartingConditions");

	Params::FortAthenaAIEvaluator_BlueprintBase_EvaluateStartingConditions Parms{};

	Parms.OwnerComp = OwnerComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteAIServer.FortAthenaBTService_Slide.OnStopSliding
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaBTService_Slide::OnStopSliding(class AFortPlayerPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaBTService_Slide", "OnStopSliding");

	Params::FortAthenaBTService_Slide_OnStopSliding Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaPlayContextualAnimTaskInstanceData.OnMontageEnded
// (Final, Native, Public)
// Parameters:
// const class UAnimMontage*               EndedMontage                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInterrupted                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaPlayContextualAnimTaskInstanceData::OnMontageEnded(const class UAnimMontage* EndedMontage, const bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaPlayContextualAnimTaskInstanceData", "OnMontageEnded");

	Params::FortAthenaPlayContextualAnimTaskInstanceData_OnMontageEnded Parms{};

	Parms.EndedMontage = EndedMontage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaPlayContextualAnimTaskInstanceData.OnNotifyBeginReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAthenaPlayContextualAnimTaskInstanceData::OnNotifyBeginReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaPlayContextualAnimTaskInstanceData", "OnNotifyBeginReceived");

	Params::FortAthenaPlayContextualAnimTaskInstanceData_OnNotifyBeginReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaPlayInteractionStateTreeTask.OnMontageEnded
// (Final, Native, Private)
// Parameters:
// const class UAnimMontage*               EndedMontage                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInterrupted                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaPlayInteractionStateTreeTask::OnMontageEnded(const class UAnimMontage* EndedMontage, const bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaPlayInteractionStateTreeTask", "OnMontageEnded");

	Params::FortAthenaPlayInteractionStateTreeTask_OnMontageEnded Parms{};

	Parms.EndedMontage = EndedMontage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaPlayInteractionStateTreeTask.OnNotifyBeginReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAthenaPlayInteractionStateTreeTask::OnNotifyBeginReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaPlayInteractionStateTreeTask", "OnNotifyBeginReceived");

	Params::FortAthenaPlayInteractionStateTreeTask_OnNotifyBeginReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaPlayMontageStateTreeTask.HandleMontageEnded
// (Final, Native, Private)
// Parameters:
// const class UAnimMontage*               EndedMontage                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInterrupted                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaPlayMontageStateTreeTask::HandleMontageEnded(const class UAnimMontage* EndedMontage, const bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaPlayMontageStateTreeTask", "HandleMontageEnded");

	Params::FortAthenaPlayMontageStateTreeTask_HandleMontageEnded Parms{};

	Parms.EndedMontage = EndedMontage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortAthenaPlayMontageStateTreeTask.HandleNotifyBeginReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FName                             NotifyName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBranchingPointNotifyPayload&BranchingPointNotifyPayload                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAthenaPlayMontageStateTreeTask::HandleNotifyBeginReceived(class FName NotifyName, const struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaPlayMontageStateTreeTask", "HandleNotifyBeginReceived");

	Params::FortAthenaPlayMontageStateTreeTask_HandleNotifyBeginReceived Parms{};

	Parms.NotifyName = NotifyName;
	Parms.BranchingPointNotifyPayload = std::move(BranchingPointNotifyPayload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteAIServer.FortWorldConditionWorldState_State.HandleWorldStateChanged
// (Final, Native, Private)

void UFortWorldConditionWorldState_State::HandleWorldStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldConditionWorldState_State", "HandleWorldStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

