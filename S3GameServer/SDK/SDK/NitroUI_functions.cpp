#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NitroUI

#include "Basic.hpp"

#include "NitroUI_classes.hpp"
#include "NitroUI_parameters.hpp"


namespace SDK
{

// Function NitroUI.NitroPlayerInfoWidget.OnPlayerDeadStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDead                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNitroPlayerInfoWidget::OnPlayerDeadStateChanged(class AFortPlayerStateAthena* PlayerState, bool bIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroPlayerInfoWidget", "OnPlayerDeadStateChanged");

	Params::NitroPlayerInfoWidget_OnPlayerDeadStateChanged Parms{};

	Parms.PlayerState = PlayerState;
	Parms.bIsDead = bIsDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NitroUI.NitroPlayerInfoWidget.OnPlayerStateSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNitroPlayerInfoWidget::OnPlayerStateSet(class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroPlayerInfoWidget", "OnPlayerStateSet");

	Params::NitroPlayerInfoWidget_OnPlayerStateSet Parms{};

	Parms.InPlayerState = InPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NitroUI.NitroVehicleFuelGaugeWidget.BP_OnFuelValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewFuelValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFuelLow                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNitroVehicleFuelGaugeWidget::BP_OnFuelValueChanged(float NewFuelValue, bool bIsFuelLow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroVehicleFuelGaugeWidget", "BP_OnFuelValueChanged");

	Params::NitroVehicleFuelGaugeWidget_BP_OnFuelValueChanged Parms{};

	Parms.NewFuelValue = NewFuelValue;
	Parms.bIsFuelLow = bIsFuelLow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NitroUI.NitroVehicleFuelGaugeWidget.BP_OnNitroStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNitroActive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNitroVehicleFuelGaugeWidget::BP_OnNitroStateChanged(bool bNitroActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroVehicleFuelGaugeWidget", "BP_OnNitroStateChanged");

	Params::NitroVehicleFuelGaugeWidget_BP_OnNitroStateChanged Parms{};

	Parms.bNitroActive = bNitroActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NitroUI.NitroVehicleFuelGaugeWidget.FuelValueChangedHandler
// (Final, Native, Private)
// Parameters:
// float                                   NewFuelValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFuelLow                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNitroVehicleFuelGaugeWidget::FuelValueChangedHandler(float NewFuelValue, bool bIsFuelLow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroVehicleFuelGaugeWidget", "FuelValueChangedHandler");

	Params::NitroVehicleFuelGaugeWidget_FuelValueChangedHandler Parms{};

	Parms.NewFuelValue = NewFuelValue;
	Parms.bIsFuelLow = bIsFuelLow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NitroUI.NitroVehicleFuelGaugeWidget.OnRefuelingCosmeticsFinished
// (Final, Native, Protected)

void UNitroVehicleFuelGaugeWidget::OnRefuelingCosmeticsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroVehicleFuelGaugeWidget", "OnRefuelingCosmeticsFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NitroUI.NitroVehicleFuelGaugeWidget.OnRefuelingCosmeticsStarted
// (Final, Native, Protected)
// Parameters:
// const bool                              bIsTankFull                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNitroVehicleFuelGaugeWidget::OnRefuelingCosmeticsStarted(const bool bIsTankFull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroVehicleFuelGaugeWidget", "OnRefuelingCosmeticsStarted");

	Params::NitroVehicleFuelGaugeWidget_OnRefuelingCosmeticsStarted Parms{};

	Parms.bIsTankFull = bIsTankFull;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NitroUI.NitroVehicleFuelGaugeWidget.OnTankFull
// (Final, Native, Private)

void UNitroVehicleFuelGaugeWidget::OnTankFull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NitroVehicleFuelGaugeWidget", "OnTankFull");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

