#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchObjectivesUI

#include "Basic.hpp"

#include "MatchObjectivesUI_classes.hpp"
#include "MatchObjectivesUI_parameters.hpp"


namespace SDK
{

// Function MatchObjectivesUI.FortMobileButtonBehaviorComponent_MatchObjectivePicker.HandleSkydiveModeChanged
// (Final, Native, Protected)
// Parameters:
// ESkydiveFeedbackPhase                   Phase                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobileButtonBehaviorComponent_MatchObjectivePicker::HandleSkydiveModeChanged(ESkydiveFeedbackPhase Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMobileButtonBehaviorComponent_MatchObjectivePicker", "HandleSkydiveModeChanged");

	Params::FortMobileButtonBehaviorComponent_MatchObjectivePicker_HandleSkydiveModeChanged Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.FortMobileHUDElement_ObjectiveSelectorWrapper.HandleSkydiveFromBusAndLandingCompleted
// (Final, Native, Public)
// Parameters:
// bool                                    bSkydivedFromBusAndLanded                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobileHUDElement_ObjectiveSelectorWrapper::HandleSkydiveFromBusAndLandingCompleted(bool bSkydivedFromBusAndLanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMobileHUDElement_ObjectiveSelectorWrapper", "HandleSkydiveFromBusAndLandingCompleted");

	Params::FortMobileHUDElement_ObjectiveSelectorWrapper_HandleSkydiveFromBusAndLandingCompleted Parms{};

	Parms.bSkydivedFromBusAndLanded = bSkydivedFromBusAndLanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesBonusEntryWidget.HasBeenCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchObjectivesBonusEntryWidget::HasBeenCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesBonusEntryWidget", "HasBeenCompleted");

	Params::MatchObjectivesBonusEntryWidget_HasBeenCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MatchObjectivesUI.MatchObjectivesBonusEntryWidget.OnBonusRewardEntrySet
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesBonusEntryWidget::OnBonusRewardEntrySet(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesBonusEntryWidget", "OnBonusRewardEntrySet");

	Params::MatchObjectivesBonusEntryWidget_OnBonusRewardEntrySet Parms{};

	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesBonusEntryWidget.UpdateBonusRewardCompleteState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    GoalIsCompleted                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesBonusEntryWidget::UpdateBonusRewardCompleteState(bool GoalIsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesBonusEntryWidget", "UpdateBonusRewardCompleteState");

	Params::MatchObjectivesBonusEntryWidget_UpdateBonusRewardCompleteState Parms{};

	Parms.GoalIsCompleted = GoalIsCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesBonusPunchWidget.OnWidgetPipsStateUpdated
// (Event, Protected, BlueprintEvent)

void UMatchObjectivesBonusPunchWidget::OnWidgetPipsStateUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesBonusPunchWidget", "OnWidgetPipsStateUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchObjectivesUI.MatchObjectivesBonusPunchWidget.UpdateTimerState
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsTimerValid                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EAthenaChallengeTimerState        TimerState                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesBonusPunchWidget::UpdateTimerState(const bool bIsTimerValid, const EAthenaChallengeTimerState TimerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesBonusPunchWidget", "UpdateTimerState");

	Params::MatchObjectivesBonusPunchWidget_UpdateTimerState Parms{};

	Parms.bIsTimerValid = bIsTimerValid;
	Parms.TimerState = TimerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesBonusPunchWidget.CheckPunchcardsCompletion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchObjectivesBonusPunchWidget::CheckPunchcardsCompletion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesBonusPunchWidget", "CheckPunchcardsCompletion");

	Params::MatchObjectivesBonusPunchWidget_CheckPunchcardsCompletion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MatchObjectivesUI.MatchObjectivesOptionEntryWidget.OnDailyObjectiveEntrySetup
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class UAthenaDailyQuestDefinition*DailyQuestData                                         (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FFortItemQuantityPair&     VisibleReward                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const int32                             ObjectiveCount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             NumCompleted                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesOptionEntryWidget::OnDailyObjectiveEntrySetup(const class UAthenaDailyQuestDefinition* DailyQuestData, const struct FFortItemQuantityPair& VisibleReward, const int32 ObjectiveCount, const int32 NumCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesOptionEntryWidget", "OnDailyObjectiveEntrySetup");

	Params::MatchObjectivesOptionEntryWidget_OnDailyObjectiveEntrySetup Parms{};

	Parms.DailyQuestData = DailyQuestData;
	Parms.VisibleReward = std::move(VisibleReward);
	Parms.ObjectiveCount = ObjectiveCount;
	Parms.NumCompleted = NumCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesOptionEntryWidget.OnMatchObjectiveEntrySetup
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FUrgentQuestData&          UrgentQuestData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FFortItemQuantityPair&     VisibleReward                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const int32                             ObjectiveCount                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesOptionEntryWidget::OnMatchObjectiveEntrySetup(const struct FUrgentQuestData& UrgentQuestData, const struct FFortItemQuantityPair& VisibleReward, const int32 ObjectiveCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesOptionEntryWidget", "OnMatchObjectiveEntrySetup");

	Params::MatchObjectivesOptionEntryWidget_OnMatchObjectiveEntrySetup Parms{};

	Parms.UrgentQuestData = std::move(UrgentQuestData);
	Parms.VisibleReward = std::move(VisibleReward);
	Parms.ObjectiveCount = ObjectiveCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesOptionEntryWidget.OnOptionFocusedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFocused                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesOptionEntryWidget::OnOptionFocusedStateChanged(bool bIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesOptionEntryWidget", "OnOptionFocusedStateChanged");

	Params::MatchObjectivesOptionEntryWidget_OnOptionFocusedStateChanged Parms{};

	Parms.bIsFocused = bIsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesOptionEntryWidget.OnOptionSelectedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesOptionEntryWidget::OnOptionSelectedStateChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesOptionEntryWidget", "OnOptionSelectedStateChanged");

	Params::MatchObjectivesOptionEntryWidget_OnOptionSelectedStateChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesOptionEntryWidget.OnTeammateSelectionUpdated
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class AFortPlayerState*>&  PlayersThatHaveSelectedThis                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMatchObjectivesOptionEntryWidget::OnTeammateSelectionUpdated(const TArray<class AFortPlayerState*>& PlayersThatHaveSelectedThis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesOptionEntryWidget", "OnTeammateSelectionUpdated");

	Params::MatchObjectivesOptionEntryWidget_OnTeammateSelectionUpdated Parms{};

	Parms.PlayersThatHaveSelectedThis = std::move(PlayersThatHaveSelectedThis);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesSocialAvatar.SetSocialAvatar
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const class AFortPlayerState*           PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesSocialAvatar::SetSocialAvatar(const class AFortPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSocialAvatar", "SetSocialAvatar");

	Params::MatchObjectivesSocialAvatar_SetSocialAvatar Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesSocialAvatar.SetSocialAvatarTexture
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>& AvatarTexture                                          (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesSocialAvatar::SetSocialAvatarTexture(const TSoftObjectPtr<class UTexture2D>& AvatarTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSocialAvatar", "SetSocialAvatarTexture");

	Params::MatchObjectivesSocialAvatar_SetSocialAvatarTexture Parms{};

	Parms.AvatarTexture = AvatarTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesUIDirectorBase.CheckQuestOffering
// (Final, Native, Protected, BlueprintCallable)

void AMatchObjectivesUIDirectorBase::CheckQuestOffering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesUIDirectorBase", "CheckQuestOffering");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesUIDirectorBase.HandleSkydiveModeChanged
// (Final, Native, Public)
// Parameters:
// ESkydiveFeedbackPhase                   Phase                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchObjectivesUIDirectorBase::HandleSkydiveModeChanged(ESkydiveFeedbackPhase Phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesUIDirectorBase", "HandleSkydiveModeChanged");

	Params::MatchObjectivesUIDirectorBase_HandleSkydiveModeChanged Parms{};

	Parms.Phase = Phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesUIDirectorBase.OnFinishSkydiving
// (Event, Public, BlueprintEvent)

void AMatchObjectivesUIDirectorBase::OnFinishSkydiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesUIDirectorBase", "OnFinishSkydiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchObjectivesUI.MatchObjectivesUIDirectorBase.OnQuestOfferingAvailable
// (Event, Protected, BlueprintEvent)

void AMatchObjectivesUIDirectorBase::OnQuestOfferingAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesUIDirectorBase", "OnQuestOfferingAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.BP_OnBonusPunchcardsLoaded
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAllPunchcardsCompleted                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesSelectorWidget::BP_OnBonusPunchcardsLoaded(bool bAllPunchcardsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "BP_OnBonusPunchcardsLoaded");

	Params::MatchObjectivesSelectorWidget_BP_OnBonusPunchcardsLoaded Parms{};

	Parms.bAllPunchcardsCompleted = bAllPunchcardsCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.GetDailyChallengesFromMCP
// (Final, Native, Protected, BlueprintCallable)

void UMatchObjectivesSelectorWidget::GetDailyChallengesFromMCP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "GetDailyChallengesFromMCP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.OnQuestEntrySelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UUserWidget*                      SelectedEntry                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesSelectorWidget::OnQuestEntrySelected(class UUserWidget* SelectedEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "OnQuestEntrySelected");

	Params::MatchObjectivesSelectorWidget_OnQuestEntrySelected Parms{};

	Parms.SelectedEntry = SelectedEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.OnSelectorOpenStateChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UMatchObjectivesSelectorWidget::OnSelectorOpenStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "OnSelectorOpenStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.SetSelectorState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const EMatchQuestsSelectorState         State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchObjectivesSelectorWidget::SetSelectorState(const EMatchQuestsSelectorState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "SetSelectorState");

	Params::MatchObjectivesSelectorWidget_SetSelectorState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.UpdateKeybindings
// (Final, Native, Protected)

void UMatchObjectivesSelectorWidget::UpdateKeybindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "UpdateKeybindings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.HasAllPunchcardsCompleted
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchObjectivesSelectorWidget::HasAllPunchcardsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "HasAllPunchcardsCompleted");

	Params::MatchObjectivesSelectorWidget_HasAllPunchcardsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MatchObjectivesUI.MatchObjectivesSelectorWidget.IsOpenByDefault
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchObjectivesSelectorWidget::IsOpenByDefault() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchObjectivesSelectorWidget", "IsOpenByDefault");

	Params::MatchObjectivesSelectorWidget_IsOpenByDefault Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

