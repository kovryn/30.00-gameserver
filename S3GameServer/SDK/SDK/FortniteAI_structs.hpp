#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteAI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WorldConditions_structs.hpp"
#include "StateTreeModule_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayInteractionsModule_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "StructUtils_structs.hpp"
#include "AIModule_structs.hpp"
#include "NetCore_structs.hpp"
#include "FortniteVersion_structs.hpp"
#include "SmartObjectsModule_structs.hpp"


namespace SDK
{

// Enum FortniteAI.EAlertLevel
// NumValues: 0x0006
enum class EAlertLevel : uint8
{
	Unaware                                  = 0,
	Suspicious                               = 1,
	LostTarget                               = 2,
	Threatened                               = 3,
	Count                                    = 4,
	EAlertLevel_MAX                          = 5,
};

// Enum FortniteAI.EConvertedType
// NumValues: 0x0005
enum class EConvertedType : uint8
{
	NPC                                      = 0,
	Creature                                 = 1,
	All                                      = 2,
	Unknown                                  = 3,
	EConvertedType_MAX                       = 4,
};

// Enum FortniteAI.PingCommandType
// NumValues: 0x000A
enum class EPingCommandType : uint8
{
	GoTo                                     = 0,
	BackToMe                                 = 1,
	BackToDefault                            = 2,
	HoldPosition                             = 3,
	Revive                                   = 4,
	Dismiss                                  = 5,
	Item                                     = 6,
	Attack                                   = 7,
	Invalid                                  = 8,
	MAX                                      = 9,
};

// Enum FortniteAI.ENavigationObstacleOverride
// NumValues: 0x0005
enum class ENavigationObstacleOverride : uint8
{
	UseMeshSettings                          = 0,
	ForceEnabled                             = 1,
	ForceDisabled                            = 2,
	ExportAsPrimitive                        = 3,
	ENavigationObstacleOverride_MAX          = 4,
};

// Enum FortniteAI.EUnconvertReason
// NumValues: 0x000A
enum class EUnconvertReason : uint8
{
	StealByOtherPlayer                       = 0,
	ConverterDeath                           = 1,
	ConvertedDeath                           = 2,
	TooManyConverted                         = 3,
	TooFarFromConverter                      = 4,
	GameplayTagBlockConvert                  = 5,
	EndPlay                                  = 6,
	Dismiss                                  = 7,
	Unknown                                  = 8,
	EUnconvertReason_MAX                     = 9,
};

// Enum FortniteAI.EFortAILODLevel
// NumValues: 0x000A
enum class EFortAILODLevel : uint8
{
	Invalid                                  = 0,
	MIN                                      = 0,
	Dormant                                  = 1,
	BelowLower                               = 2,
	Lower                                    = 3,
	AboveLower                               = 4,
	BelowNormal                              = 5,
	Normal                                   = 6,
	AboveNormal                              = 7,
	MAX                                      = 8,
};

// Enum FortniteAI.EAIVisibilityOptions
// NumValues: 0x0009
enum class EAIVisibilityOptions : uint8
{
	None                                     = 0,
	AlwaysHidden                             = 1,
	AlwaysVisible                            = 2,
	HiddenWhenIdle                           = 4,
	HiddenWhenCrouched                       = 8,
	HiddenWhenIdleAndCrouched                = 12,
	VisibleWhenOverlappingPerceivedActor     = 16,
	CheckPriorVisibility                     = 32,
	EAIVisibilityOptions_MAX                 = 33,
};

// Enum FortniteAI.ELootElementType
// NumValues: 0x0005
enum class ELootElementType : uint8
{
	Pickup                                   = 0,
	Chest                                    = 1,
	SupplyDrop                               = 2,
	Invalid                                  = 255,
	ELootElementType_MAX                     = 256,
};

// Enum FortniteAI.EBotNamingMode
// NumValues: 0x0007
enum class EBotNamingMode : uint8
{
	RealName                                 = 0,
	SkinName                                 = 1,
	Anonymous                                = 2,
	Custom                                   = 3,
	CharacterDataDisplayName                 = 4,
	CustomIncremental                        = 5,
	EBotNamingMode_MAX                       = 6,
};

// Enum FortniteAI.ECustomNavLinkProcessorResult
// NumValues: 0x0004
enum class ECustomNavLinkProcessorResult : uint8
{
	Unhandled                                = 0,
	Success                                  = 1,
	Failure                                  = 2,
	ECustomNavLinkProcessorResult_MAX        = 3,
};

// Enum FortniteAI.EFortEncounterUtilityDesire
// NumValues: 0x0006
enum class EFortEncounterUtilityDesire : uint8
{
	Low                                      = 0,
	Medium                                   = 1,
	High                                     = 2,
	VeryHigh                                 = 3,
	Max_None                                 = 4,
	EFortEncounterUtilityDesire_MAX          = 5,
};

// Enum FortniteAI.EAIHotSpotSlotFilter
// NumValues: 0x0004
enum class EAIHotSpotSlotFilter : uint8
{
	All                                      = 0,
	AvailableOnly                            = 1,
	UnavailableOnly                          = 2,
	EAIHotSpotSlotFilter_MAX                 = 3,
};

// Enum FortniteAI.EAIHotSpotAssignmentFilter
// NumValues: 0x0004
enum class EAIHotSpotAssignmentFilter : uint8
{
	All                                      = 0,
	WithSlots                                = 1,
	WaitingList                              = 2,
	EAIHotSpotAssignmentFilter_MAX           = 3,
};

// Enum FortniteAI.EAIHotSpotSlot
// NumValues: 0x0006
enum class EAIHotSpotSlot : uint8
{
	Free                                     = 0,
	Claimed                                  = 1,
	Occupied                                 = 2,
	Blocked                                  = 3,
	Disabled                                 = 4,
	EAIHotSpotSlot_MAX                       = 5,
};

// Enum FortniteAI.EAthenaPathFollowingFocus
// NumValues: 0x0003
enum class EAthenaPathFollowingFocus : uint8
{
	TowardsNextPathPoint                     = 0,
	AlignWithSmoothedVelocity                = 1,
	EAthenaPathFollowingFocus_MAX            = 2,
};

// Enum FortniteAI.EAthenaAITelemetryEventType
// NumValues: 0x0003
enum class EAthenaAITelemetryEventType : uint8
{
	Spawn                                    = 0,
	Despawn                                  = 1,
	EAthenaAITelemetryEventType_MAX          = 2,
};

// Enum FortniteAI.EAICustomTargetRequestType
// NumValues: 0x0004
enum class EAICustomTargetRequestType : uint8
{
	Movement                                 = 1,
	MeleeAttack                              = 2,
	RangedAttack                             = 4,
	EAICustomTargetRequestType_MAX           = 5,
};

// Enum FortniteAI.EDespawnAIType
// NumValues: 0x0003
enum class EDespawnAIType : uint8
{
	Relevancy                                = 0,
	Distance                                 = 1,
	EDespawnAIType_MAX                       = 2,
};

// Enum FortniteAI.EFortAIDirectorEventContribution
// NumValues: 0x0003
enum class EFortAIDirectorEventContribution : uint8
{
	Increment                                = 0,
	Set                                      = 1,
	EFortAIDirectorEventContribution_MAX     = 2,
};

// Enum FortniteAI.EFortAIDirectorFactorContribution
// NumValues: 0x0003
enum class EFortAIDirectorFactorContribution : uint8
{
	Direct                                   = 0,
	Inverse                                  = 1,
	EFortAIDirectorFactorContribution_MAX    = 2,
};

// Enum FortniteAI.EFortEncounterPacingState
// NumValues: 0x0006
enum class EFortEncounterPacingState : uint8
{
	Ramp                                     = 0,
	Peak                                     = 1,
	Fade                                     = 2,
	Rest                                     = 3,
	Max_None                                 = 4,
	EFortEncounterPacingState_MAX            = 5,
};

// Enum FortniteAI.EFortEncounterState
// NumValues: 0x0008
enum class EFortEncounterState : uint8
{
	Uninitialized                            = 0,
	InitializingProperties                   = 1,
	InitializingRiftManager                  = 2,
	AwaitingActivation                       = 3,
	Active                                   = 4,
	ReplacingRifts                           = 5,
	Max_None                                 = 6,
	EFortEncounterState_MAX                  = 7,
};

// Enum FortniteAI.EFortAIWaveProgressSection
// NumValues: 0x0004
enum class EFortAIWaveProgressSection : uint8
{
	SectionOne                               = 0,
	SectionTwo                               = 1,
	Max_None                                 = 2,
	EFortAIWaveProgressSection_MAX           = 3,
};

// Enum FortniteAI.EFortEncounterSequenceResult
// NumValues: 0x0004
enum class EFortEncounterSequenceResult : uint8
{
	Success                                  = 0,
	FailedEncounterInProgress                = 1,
	Failed                                   = 2,
	EFortEncounterSequenceResult_MAX         = 3,
};

// Enum FortniteAI.EAssignmentCreationResult
// NumValues: 0x0004
enum class EAssignmentCreationResult : uint8
{
	AssignmentNotFoundOrCreated              = 0,
	AssignmentCreated                        = 1,
	AssignmentFound                          = 2,
	EAssignmentCreationResult_MAX            = 3,
};

// Enum FortniteAI.ECorePerceptionTypes
// NumValues: 0x0007
enum class ECorePerceptionTypes : uint8
{
	Sight                                    = 0,
	Hearing                                  = 1,
	Damage                                   = 2,
	Touch                                    = 3,
	Team                                     = 4,
	Prediction                               = 5,
	MAX                                      = 6,
};

// Enum FortniteAI.EAssignmentType
// NumValues: 0x0006
enum class EAssignmentType : uint8
{
	Invalid                                  = 0,
	Encounter                                = 1,
	World                                    = 2,
	Enemy                                    = 3,
	NumAssignmentTypes                       = 4,
	EAssignmentType_MAX                      = 5,
};

// Enum FortniteAI.EBuildingWallArea
// NumValues: 0x0004
enum class EBuildingWallArea : uint8
{
	Regular                                  = 0,
	Flat                                     = 1,
	Special                                  = 2,
	EBuildingWallArea_MAX                    = 3,
};

// Enum FortniteAI.EBuildingStairsRailing
// NumValues: 0x0004
enum class EBuildingStairsRailing : uint8
{
	None                                     = 0,
	Partial                                  = 1,
	Full                                     = 2,
	EBuildingStairsRailing_MAX               = 3,
};

// Enum FortniteAI.EBuildingFloorRailing
// NumValues: 0x0003
enum class EBuildingFloorRailing : uint8
{
	None                                     = 0,
	Balcony                                  = 1,
	EBuildingFloorRailing_MAX                = 2,
};

// Enum FortniteAI.EFortHotSpotSlot
// NumValues: 0x0005
enum class EFortHotSpotSlot : uint8
{
	Melee                                    = 0,
	MeleeHuge                                = 1,
	Ranged                                   = 2,
	None                                     = 3,
	EFortHotSpotSlot_MAX                     = 4,
};

// Enum FortniteAI.EFortHotSpotDirection
// NumValues: 0x0008
enum class EFortHotSpotDirection : uint8
{
	PositiveX                                = 0,
	NegativeX                                = 1,
	PositiveY                                = 2,
	NegativeY                                = 3,
	PositiveZ                                = 4,
	NegativeZ                                = 5,
	Any                                      = 6,
	EFortHotSpotDirection_MAX                = 7,
};

// Enum FortniteAI.EFortHotSpotPreview
// NumValues: 0x0004
enum class EFortHotSpotPreview : uint8
{
	None                                     = 0,
	Smashing                                 = 1,
	Shooting                                 = 2,
	EFortHotSpotPreview_MAX                  = 3,
};

// Enum FortniteAI.EHotspotTypeConfigMode
// NumValues: 0x0004
enum class EHotspotTypeConfigMode : uint8
{
	AlwaysAdd                                = 0,
	WhenNotDefined                           = 1,
	WhenNotValid                             = 2,
	EHotspotTypeConfigMode_MAX               = 3,
};

// Enum FortniteAI.EFortPartialPathUsage
// NumValues: 0x0004
enum class EFortPartialPathUsage : uint8
{
	Always                                   = 0,
	OnlyGoalsOnDestructible                  = 1,
	Never                                    = 2,
	EFortPartialPathUsage_MAX                = 3,
};

// Enum FortniteAI.ETargetDistanceComparisonType
// NumValues: 0x0004
enum class ETargetDistanceComparisonType : uint8
{
	TwoDimensions                            = 0,
	ThreeDimensions                          = 1,
	CollisionHalfHeightMultiplier            = 2,
	ETargetDistanceComparisonType_MAX        = 3,
};

// Enum FortniteAI.EAIScalableFloatScalingType
// NumValues: 0x0003
enum class EAIScalableFloatScalingType : uint32
{
	Disabled                                 = 0,
	ReceivedDamageByTarget                   = 1,
	EAIScalableFloatScalingType_MAX          = 2,
};

// Enum FortniteAI.ETeleportReason
// NumValues: 0x0007
enum class ETeleportReason : uint8
{
	AgentNotOnNavmesh                        = 0,
	AgentDestinationNotOnNavMesh             = 1,
	AgentStuckInRepetitivePartialPaths       = 2,
	AgentBlocked                             = 3,
	AgentNoPathFound                         = 4,
	Unknown                                  = 5,
	ETeleportReason_MAX                      = 6,
};

// Enum FortniteAI.EObstacleType
// NumValues: 0x0006
enum class EObstacleType : uint8
{
	IncomingSmashable                        = 0,
	BlockingSmashable                        = 1,
	BlockingDetectedTrap                     = 2,
	Unknown                                  = 3,
	Count                                    = 3,
	EObstacleType_MAX                        = 4,
};

// Enum FortniteAI.EHarvestResult
// NumValues: 0x0005
enum class EHarvestResult : uint8
{
	None                                     = 0,
	InProgress                               = 1,
	Success                                  = 2,
	Fail                                     = 3,
	EHarvestResult_MAX                       = 4,
};

// Enum FortniteAI.EReachLocationValidationMode
// NumValues: 0x0005
enum class EReachLocationValidationMode : uint8
{
	None                                     = 0,
	Storm                                    = 1,
	Leash                                    = 2,
	SoftLeash                                = 3,
	EReachLocationValidationMode_MAX         = 4,
};

// Enum FortniteAI.EBlackboardUpdateType
// NumValues: 0x0004
enum class EBlackboardUpdateType : uint8
{
	NoUpdate                                 = 0,
	UpdateNow                                = 1,
	UpdateNextTick                           = 2,
	EBlackboardUpdateType_MAX                = 3,
};

// Enum FortniteAI.EBotControllerClamberStatus
// NumValues: 0x0005
enum class EBotControllerClamberStatus : uint8
{
	Invalid                                  = 0,
	MoveStarted                              = 1,
	MoveDone                                 = 2,
	MoveFailed                               = 3,
	EBotControllerClamberStatus_MAX          = 4,
};

// Enum FortniteAI.EDefensivePlayerStyleSource
// NumValues: 0x0003
enum class EDefensivePlayerStyleSource : uint8
{
	Unknown                                  = 0,
	Escape                                   = 1,
	MAX                                      = 2,
};

// Enum FortniteAI.ETwoPointSolverRotationA
// NumValues: 0x0006
enum class ETwoPointSolverRotationA : uint8
{
	PointAToQuerier                          = 0,
	QuerierToPointA                          = 1,
	PointAToQuerierWithRandomOffset          = 2,
	QuerierToPointAWithRandomOffset          = 3,
	Custom                                   = 4,
	ETwoPointSolverRotationA_MAX             = 5,
};

// Enum FortniteAI.EFortIntensityCurveSequenceType
// NumValues: 0x0005
enum class EFortIntensityCurveSequenceType : uint8
{
	Sequence                                 = 0,
	Loop                                     = 1,
	Random                                   = 2,
	Max_None                                 = 3,
	EFortIntensityCurveSequenceType_MAX      = 4,
};

// Enum FortniteAI.EFortNavLinkPattern
// NumValues: 0x0005
enum class EFortNavLinkPattern : uint8
{
	Floor                                    = 0,
	Stairs                                   = 1,
	Roof                                     = 2,
	Manual                                   = 3,
	EFortNavLinkPattern_MAX                  = 4,
};

// Enum FortniteAI.EFortNamedNavmesh
// NumValues: 0x0003
enum class EFortNamedNavmesh : uint8
{
	Husk                                     = 0,
	Smasher                                  = 1,
	MAX                                      = 2,
};

// Enum FortniteAI.EPathObstacleAction
// NumValues: 0x0005
enum class EPathObstacleAction : uint8
{
	Melee                                    = 0,
	Ignore                                   = 1,
	AbortMoveAsFailed                        = 2,
	FinishMoveAsSucceeded                    = 3,
	EPathObstacleAction_MAX                  = 4,
};

// Enum FortniteAI.EPathUndermineEvent
// NumValues: 0x0004
enum class EPathUndermineEvent : uint8
{
	Predicted                                = 0,
	Started                                  = 1,
	Finished                                 = 2,
	EPathUndermineEvent_MAX                  = 3,
};

// Enum FortniteAI.EWardAffectType
// NumValues: 0x0004
enum class EWardAffectType : uint8
{
	AffectsBothStartAndEndPoints             = 0,
	AffectsOnlyStartPoints                   = 1,
	AffectsOnlyEndPoints                     = 2,
	EWardAffectType_MAX                      = 3,
};

// Enum FortniteAI.ETagGoalScoringCategory
// NumValues: 0x0004
enum class ETagGoalScoringCategory : uint8
{
	Ignore                                   = 0,
	HighInterest                             = 1,
	NumCategories                            = 2,
	ETagGoalScoringCategory_MAX              = 3,
};

// Enum FortniteAI.EBoundingBoxSlotDirectionCalculation
// NumValues: 0x0005
enum class EBoundingBoxSlotDirectionCalculation : uint8
{
	Auto                                     = 0,
	FaceWall                                 = 1,
	FaceAwayFromWall                         = 2,
	FaceCenter                               = 3,
	EBoundingBoxSlotDirectionCalculation_MAX = 4,
};

// Enum FortniteAI.EFortAreaFlag
// NumValues: 0x0006
enum class EFortAreaFlag : uint8
{
	Default                                  = 0,
	Obstacle                                 = 1,
	Smashable                                = 2,
	Unwalkable                               = 3,
	Interactable                             = 4,
	EFortAreaFlag_MAX                        = 5,
};

// Enum FortniteAI.EInBoundsState
// NumValues: 0x0004
enum class EInBoundsState : uint8
{
	NoBounds                                 = 0,
	NotInBounds                              = 1,
	InBounds                                 = 2,
	EInBoundsState_MAX                       = 3,
};

// Enum FortniteAI.ENavPathRendererStatus
// NumValues: 0x0005
enum class ENavPathRendererStatus : uint8
{
	INVALID                                  = 0,
	CALCULATING                              = 1,
	SUCCESS                                  = 2,
	FAILED                                   = 3,
	ENavPathRendererStatus_MAX               = 4,
};

// Enum FortniteAI.EFortThreatDeactivationType
// NumValues: 0x0003
enum class EFortThreatDeactivationType : uint8
{
	Off                                      = 0,
	Dormant                                  = 1,
	EFortThreatDeactivationType_MAX          = 2,
};

// Enum FortniteAI.EPositionSelectionMode
// NumValues: 0x0004
enum class EPositionSelectionMode : uint8
{
	Reserved                                 = 0,
	Unreserved                               = 1,
	All                                      = 2,
	EPositionSelectionMode_MAX               = 3,
};

// Enum FortniteAI.EFortCreativePatrolPathGroup
// NumValues: 0x0066
enum class EFortCreativePatrolPathGroup : uint8
{
	Group_None                               = 0,
	Group_1                                  = 1,
	Group_2                                  = 2,
	Group_3                                  = 3,
	Group_4                                  = 4,
	Group_5                                  = 5,
	Group_6                                  = 6,
	Group_7                                  = 7,
	Group_8                                  = 8,
	Group_9                                  = 9,
	Group_10                                 = 10,
	Group_11                                 = 11,
	Group_12                                 = 12,
	Group_13                                 = 13,
	Group_14                                 = 14,
	Group_15                                 = 15,
	Group_16                                 = 16,
	Group_17                                 = 17,
	Group_18                                 = 18,
	Group_19                                 = 19,
	Group_20                                 = 20,
	Group_21                                 = 21,
	Group_22                                 = 22,
	Group_23                                 = 23,
	Group_24                                 = 24,
	Group_25                                 = 25,
	Group_26                                 = 26,
	Group_27                                 = 27,
	Group_28                                 = 28,
	Group_29                                 = 29,
	Group_30                                 = 30,
	Group_31                                 = 31,
	Group_32                                 = 32,
	Group_33                                 = 33,
	Group_34                                 = 34,
	Group_35                                 = 35,
	Group_36                                 = 36,
	Group_37                                 = 37,
	Group_38                                 = 38,
	Group_39                                 = 39,
	Group_40                                 = 40,
	Group_41                                 = 41,
	Group_42                                 = 42,
	Group_43                                 = 43,
	Group_44                                 = 44,
	Group_45                                 = 45,
	Group_46                                 = 46,
	Group_47                                 = 47,
	Group_48                                 = 48,
	Group_49                                 = 49,
	Group_50                                 = 50,
	Group_51                                 = 51,
	Group_52                                 = 52,
	Group_53                                 = 53,
	Group_54                                 = 54,
	Group_55                                 = 55,
	Group_56                                 = 56,
	Group_57                                 = 57,
	Group_58                                 = 58,
	Group_59                                 = 59,
	Group_60                                 = 60,
	Group_61                                 = 61,
	Group_62                                 = 62,
	Group_63                                 = 63,
	Group_64                                 = 64,
	Group_65                                 = 65,
	Group_66                                 = 66,
	Group_67                                 = 67,
	Group_68                                 = 68,
	Group_69                                 = 69,
	Group_70                                 = 70,
	Group_71                                 = 71,
	Group_72                                 = 72,
	Group_73                                 = 73,
	Group_74                                 = 74,
	Group_75                                 = 75,
	Group_76                                 = 76,
	Group_77                                 = 77,
	Group_78                                 = 78,
	Group_79                                 = 79,
	Group_80                                 = 80,
	Group_81                                 = 81,
	Group_82                                 = 82,
	Group_83                                 = 83,
	Group_84                                 = 84,
	Group_85                                 = 85,
	Group_86                                 = 86,
	Group_87                                 = 87,
	Group_88                                 = 88,
	Group_89                                 = 89,
	Group_90                                 = 90,
	Group_91                                 = 91,
	Group_92                                 = 92,
	Group_93                                 = 93,
	Group_94                                 = 94,
	Group_95                                 = 95,
	Group_96                                 = 96,
	Group_97                                 = 97,
	Group_98                                 = 98,
	Group_99                                 = 99,
	Group_100                                = 100,
	Group_MAX                                = 101,
};

// Enum FortniteAI.EAIBotBuildingTemplate
// NumValues: 0x0006
enum class EAIBotBuildingTemplate : uint8
{
	SingleWall                               = 0,
	SingleRamp                               = 1,
	SingleRoof                               = 2,
	SingleBrace                              = 3,
	SingleWallWindow                         = 4,
	MAX                                      = 5,
};

// Enum FortniteAI.BotDataOverrideCosmeticMode
// NumValues: 0x0003
enum class EBotDataOverrideCosmeticMode : uint8
{
	SpecificLoadout                          = 0,
	CosmeticLibrary                          = 1,
	BotDataOverrideCosmeticMode_MAX          = 2,
};

// Enum FortniteAI.EAILootExcludeListReason
// NumValues: 0x000D
enum class EAILootExcludeListReason : uint8
{
	Invalid                                  = 0,
	ExecutionError                           = 1,
	CannotReachLootLocation                  = 2,
	OutsideSafeZoneRadius                    = 3,
	NoInventorySpace                         = 4,
	LootStateUnavailable                     = 5,
	PathNotFound                             = 6,
	GoalOffNavmesh                           = 7,
	AgentBlocked                             = 8,
	IsolatedIsland                           = 9,
	UnsupportedItem                          = 10,
	Count                                    = 11,
	EAILootExcludeListReason_MAX             = 12,
};

// Enum FortniteAI.EExecutionStatus
// NumValues: 0x0006
enum class EExecutionStatus : uint8
{
	ExecutionError                           = 0,
	ExecutionDenied                          = 1,
	ExecutionSuccess                         = 2,
	ExecutionPending                         = 3,
	ExecutionAllowed                         = 4,
	EExecutionStatus_MAX                     = 5,
};

// Enum FortniteAI.EBotMovementState
// NumValues: 0x000D
enum class EBotMovementState : uint8
{
	None                                     = 0,
	InProgress                               = 1,
	Failed_NoPathFound                       = 2,
	Failed_Aborted                           = 3,
	Failed_AgentOffNavmesh                   = 4,
	Failed_GoalOffNavmesh                    = 5,
	Failed_Blocked                           = 6,
	Failed_OffPath                           = 7,
	Failed_Falling                           = 8,
	Success                                  = 9,
	Success_Partial                          = 10,
	Success_AlreadyAtGoal                    = 11,
	EBotMovementState_MAX                    = 12,
};

// Enum FortniteAI.EUnstuckSteeringReason
// NumValues: 0x0005
enum class EUnstuckSteeringReason : uint8
{
	Unknown                                  = 0,
	OffNavMesh                               = 1,
	IsolatedIsland                           = 2,
	NoPathFound                              = 3,
	EUnstuckSteeringReason_MAX               = 4,
};

// Enum FortniteAI.EFortAthenaAIObjectTrackerQueryOrder
// NumValues: 0x0003
enum class EFortAthenaAIObjectTrackerQueryOrder : uint8
{
	None                                     = 0,
	Distance                                 = 1,
	EFortAthenaAIObjectTrackerQueryOrder_MAX = 2,
};

// Enum FortniteAI.EFortAthenaSmartObjectPriority
// NumValues: 0x000B
enum class EFortAthenaSmartObjectPriority : uint8
{
	Lowest                                   = 0,
	Lower                                    = 1,
	Low                                      = 2,
	BelowNormal                              = 3,
	Normal                                   = 4,
	AboveNormal                              = 5,
	High                                     = 6,
	Higher                                   = 7,
	Highest                                  = 8,
	MIN                                      = 0,
	MAX                                      = 8,
};

// Enum FortniteAI.EFortAthenaSmartObjectUrgency
// NumValues: 0x0004
enum class EFortAthenaSmartObjectUrgency : uint8
{
	Low                                      = 0,
	Normal                                   = 1,
	High                                     = 2,
	EFortAthenaSmartObjectUrgency_MAX        = 3,
};

// Enum FortniteAI.EFortAthenaAISpawnerDataComponentTriBool
// NumValues: 0x0004
enum class EFortAthenaAISpawnerDataComponentTriBool : uint8
{
	Yes                                      = 0,
	No                                       = 1,
	DoNotModify                              = 2,
	EFortAthenaAISpawnerDataComponentTriBool_MAX = 3,
};

// Enum FortniteAI.EBehaviorTreeBranches
// NumValues: 0x0016
enum class EBehaviorTreeBranches : uint8
{
	CanUseDiving                             = 0,
	CanUseGliding                            = 1,
	CanReactToProjectile                     = 2,
	CanReactToTraps                          = 3,
	CanAvoidDangerArea                       = 4,
	CanBeConverted                           = 5,
	CanPropagateAwareness                    = 6,
	CanUseThreatenedBehaviors                = 7,
	CanUseLastKnownPositionBehavior          = 8,
	CanUseAlertedBehavior                    = 9,
	CanUseSmartObjects                       = 10,
	CanReviveDBNOTeammates                   = 11,
	CanPlayEmote                             = 12,
	CanConverse                              = 13,
	CanPatrolOnPath                          = 14,
	CanPatrolAround                          = 15,
	CanTeleportWhenStuck                     = 16,
	CanEmoteWhenStuck                        = 17,
	CanUseZiplines                           = 18,
	CanMoveAway                              = 19,
	Count                                    = 20,
	EBehaviorTreeBranches_MAX                = 21,
};

// Enum FortniteAI.EBehaviorTreeBranchesBitmask
// NumValues: 0x0016
enum class EBehaviorTreeBranchesBitmask : uint8
{
	CanUseDiving                             = 0,
	CanUseGliding                            = 1,
	CanReactToProjectile                     = 2,
	CanReactToTraps                          = 3,
	CanAvoidDangerArea                       = 4,
	CanBeConverted                           = 5,
	CanPropagateAwareness                    = 6,
	CanUseThreatenedBehaviors                = 7,
	CanUseLastKnownPositionBehavior          = 8,
	CanUseAlertedBehavior                    = 9,
	CanUseSmartObjects                       = 10,
	CanReviveDBNOTeammates                   = 11,
	CanPlayEmote                             = 12,
	CanConverse                              = 13,
	CanPatrolOnPath                          = 14,
	CanPatrolAround                          = 15,
	CanTeleportWhenStuck                     = 16,
	CanEmoteWhenStuck                        = 17,
	CanUseZiplines                           = 18,
	CanMoveAway                              = 19,
	Count                                    = 20,
	EBehaviorTreeBranchesBitmask_MAX         = 21,
};

// Enum FortniteAI.EPatrollingMode
// NumValues: 0x0004
enum class EPatrollingMode : uint8
{
	BackAndForth                             = 0,
	Loop                                     = 1,
	StopAtEnd                                = 2,
	EPatrollingMode_MAX                      = 3,
};

// Enum FortniteAI.EDBNOPlayStyle
// NumValues: 0x0006
enum class EDBNOPlayStyle : uint8
{
	Thirsty                                  = 0,
	Default                                  = 1,
	Passive                                  = 2,
	ThristyButPassiveOnPlayers               = 3,
	DefaultButPassiveOnPlayers               = 4,
	EDBNOPlayStyle_MAX                       = 5,
};

// Enum FortniteAI.EStimType
// NumValues: 0x000B
enum class EStimType : uint8
{
	Seeing                                   = 0,
	Seen                                     = 1,
	MightHaveSeen                            = 2,
	Hurt                                     = 3,
	Heard                                    = 4,
	Obstacle                                 = 5,
	Enemy                                    = 6,
	Touched                                  = 7,
	Unknown                                  = 8,
	Count                                    = 8,
	EStimType_MAX                            = 9,
};

// Enum FortniteAI.EPerceptionState
// NumValues: 0x000A
enum class EPerceptionState : uint8
{
	Threat_Seeing                            = 0,
	Threat_LKP                               = 1,
	Threat_Alerted                           = 2,
	ObstacleIncoming                         = 3,
	ObstacleBlockedBy                        = 4,
	ObstacleDetectedTrap                     = 5,
	Unknown                                  = 6,
	Count                                    = 6,
	Threat_Count                             = 3,
	EPerceptionState_MAX                     = 7,
};

// Enum FortniteAI.ETrackingOffsetModifierCurve
// NumValues: 0x0004
enum class ETrackingOffsetModifierCurve : uint8
{
	Default                                  = 0,
	CombatStart                              = 1,
	TargetLowHealth                          = 2,
	MAX                                      = 3,
};

// Enum FortniteAI.EPerceptionSoundType
// NumValues: 0x0009
enum class EPerceptionSoundType : uint8
{
	Default                                  = 0,
	Explosion                                = 1,
	ProjectileFlyBy                          = 2,
	ProjectileImpact                         = 3,
	WeaponFiring                             = 4,
	Building                                 = 5,
	MeleeImpact                              = 6,
	PawnDeath                                = 7,
	MAX                                      = 8,
};

// Enum FortniteAI.ELookAtType
// NumValues: 0x0005
enum class ELookAtType : uint8
{
	ScanAround                               = 0,
	Investigate                              = 1,
	HeardSound                               = 2,
	Ambush                                   = 3,
	MAX                                      = 4,
};

// Enum FortniteAI.ELeashReturnLocationMode
// NumValues: 0x0005
enum class ELeashReturnLocationMode : uint8
{
	Closest                                  = 0,
	Random                                   = 1,
	ReturnToCenter                           = 2,
	ReturnToCenterAvoidObstacle              = 3,
	ELeashReturnLocationMode_MAX             = 4,
};

// Enum FortniteAI.EOrientedConstructionBuildingType
// NumValues: 0x0010
enum class EOrientedConstructionBuildingType : uint8
{
	WallX                                    = 0,
	WallY                                    = 1,
	Floor                                    = 2,
	StairsUpX                                = 3,
	StairsUpY                                = 4,
	StairsDownX                              = 5,
	StairsDownY                              = 6,
	Roof                                     = 7,
	BraceLeftX                               = 8,
	BraceRightX                              = 9,
	BraceLeftY                               = 10,
	BraceRightY                              = 11,
	WallWindowX                              = 12,
	WallWindowY                              = 13,
	Count                                    = 14,
	EOrientedConstructionBuildingType_MAX    = 15,
};

// Enum FortniteAI.EConstructionBuildingType
// NumValues: 0x0008
enum class EConstructionBuildingType : uint8
{
	Wall                                     = 0,
	Floor                                    = 1,
	Stairs                                   = 2,
	Roof                                     = 3,
	Brace                                    = 4,
	WallWindow                               = 5,
	Count                                    = 6,
	EConstructionBuildingType_MAX            = 7,
};

// Enum FortniteAI.EAthenaAIServicePOIList
// NumValues: 0x0004
enum class EAthenaAIServicePOIList : uint8
{
	MainBusDrop                              = 0,
	SecondaryBusDrop                         = 1,
	OnGround                                 = 2,
	EAthenaAIServicePOIList_MAX              = 3,
};

// Enum FortniteAI.ECheatBotTargetingCategory
// NumValues: 0x0005
enum class ECheatBotTargetingCategory : uint8
{
	Player                                   = 0,
	NPC                                      = 1,
	Other                                    = 2,
	COUNT                                    = 3,
	ECheatBotTargetingCategory_MAX           = 4,
};

// Enum FortniteAI.EAthenaAITrackedZoneType
// NumValues: 0x0003
enum class EAthenaAITrackedZoneType : uint8
{
	Occluder                                 = 0,
	Danger                                   = 1,
	EAthenaAITrackedZoneType_MAX             = 2,
};

// Enum FortniteAI.EBotPOIType
// NumValues: 0x0004
enum class EBotPOIType : uint8
{
	Unknown                                  = 0,
	ClusterLoot                              = 1,
	MidMatchObjective                        = 2,
	EBotPOIType_MAX                          = 3,
};

// Enum FortniteAI.EBotPOIUsageBitmask
// NumValues: 0x0004
enum class EBotPOIUsageBitmask : uint8
{
	None                                     = 0,
	BotJumpOffBus                            = 1,
	BotNavigation                            = 2,
	EBotPOIUsageBitmask_MAX                  = 3,
};

// Enum FortniteAI.ERatingsEnforcementType
// NumValues: 0x0005
enum class ERatingsEnforcementType : uint8
{
	Default                                  = 0,
	IgnoreMaximums                           = 1,
	IgnoreParty                              = 2,
	IgnorePartyMaximum                       = 3,
	ERatingsEnforcementType_MAX              = 4,
};

// Enum FortniteAI.EClampType
// NumValues: 0x0003
enum class EClampType : uint8
{
	Minimum                                  = 0,
	Maximum                                  = 1,
	EClampType_MAX                           = 2,
};

// ScriptStruct FortniteAI.GoalSelectionCriteria
// 0x0020 (0x0020 - 0x0000)
struct FGoalSelectionCriteria final
{
public:
	TSoftObjectPtr<class UEnvQuery>               GoalSelectionQuery;                                // 0x0000(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PawnGoalSelectionCriteria
// 0x0050 (0x0050 - 0x0000)
struct FPawnGoalSelectionCriteria final
{
public:
	struct FGameplayTagContainer                  IncludeEnemiesWithTags;                            // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  ExcludeEnemiesWithTags;                            // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGoalSelectionCriteria>         GoalSelectionCriteria;                             // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AthenaAIBehaviorInjectionManager
// 0x0090 (0x0090 - 0x0000)
struct FAthenaAIBehaviorInjectionManager final
{
public:
	class UDataRegistry*                          ItemBehaviorsRegistry;                             // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UBehaviorTree>>   InjectionSupportingBehaviors;                      // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UBlackboardData*                        InjectionBlackboard;                               // 0x0018(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UBehaviorTree*, class UBehaviorTree*> BehaviorToRuntimeBehavior;                      // 0x0020(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x20];                                      // 0x0070(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DebugMinimapData
// 0x01B0 (0x01B0 - 0x0000)
struct FDebugMinimapData final
{
public:
	bool                                          bIsOverridden;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            DebugMinimapIconBrush;                             // 0x0010(0x00C0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                              DebugMinimapIconScale;                             // 0x00D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            DebugCompassIconBrush;                             // 0x00E0(0x00C0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                              DebugCompassIconScale;                             // 0x01A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIInjectedDecisionServiceData
// 0x0028 (0x0028 - 0x0000)
struct FFortAIInjectedDecisionServiceData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBTService*                             InjectedService;                                   // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.TrapPerceptionSettings
// 0x0014 (0x0014 - 0x0000)
struct alignas(0x04) FTrapPerceptionSettings final
{
public:
	uint8                                         Pad_0[0x14];                                       // 0x0000(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIInjectedDecisionContextData
// 0x0001 (0x0001 - 0x0000)
struct FFortAIInjectedDecisionContextData final
{
public:
	EExecutionStatus                              ExecutionStatus;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIInjectedDecisionStateTreeData
// 0x0020 (0x0020 - 0x0000)
struct FFortAIInjectedDecisionStateTreeData final
{
public:
	struct FStateTreeInstanceData                 DecisionInstanceData;                              // 0x0000(0x0010)(Transient, NativeAccessSpecifierPublic)
	struct FFortAIInjectedDecisionContextData     ContextData;                                       // 0x0010(0x0001)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBotDigestedHealingItems
// 0x0050 (0x0050 - 0x0000)
struct FFortBotDigestedHealingItems final
{
public:
	float                                         UseItemResourceThreshold;                          // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      ItemTagQuery;                                      // 0x0008(0x0048)(Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortAIInjectedDecision
// 0x0068 (0x0068 - 0x0000)
struct FFortAIInjectedDecision final
{
public:
	class UFortInjectedBehavior*                  InjectedBehavior;                                  // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBehaviorTreeComponent*                 OwnerComp;                                         // 0x0008(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAIInjectedDecisionServiceData     ServiceData;                                       // 0x0010(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FFortAIInjectedDecisionStateTreeData   StateTreeData;                                     // 0x0038(0x0020)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.IntensityContribution
// 0x0048 (0x0048 - 0x0000)
struct FIntensityContribution final
{
public:
	EFortCombatFactors                            CombatFactor;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAIDirectorFactor                         ContributingAIDirectorFactor;                      // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxContribution;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModifyContributionByCompletionPercentage;         // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   CompletionPercentageInitialMultiplier;             // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   CompletionPercentageToStartReducingMultiplier;     // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   CompletionPercentageToStopReducingMultiplier;      // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModifyByNumberOfCriticalEncounterGoals;           // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.IntensityData
// 0x0030 (0x0030 - 0x0000)
struct FIntensityData final
{
public:
	TArray<struct FIntensityContribution>         ContributingFactors;                               // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         ContributionsTotal;                                // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBuildingEditModeMetadata*>      ExceptionEditModes;                                // 0x0018(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         ExceptionEditModeWeight;                           // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBotInventoryInfo
// 0x0068 (0x0068 - 0x0000)
struct FFortBotInventoryInfo final
{
public:
	class UItemDefinitionBase*                    ItemDefinition;                                    // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortWorldItem*                         FortItem;                                          // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x20];                                      // 0x0010(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               WeaponDefinitionCache;                             // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortWorldMultiItemDefinition*          MultiItemDefinitionCache;                          // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x20];                                      // 0x0040(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaAIBotController*             BotController;                                     // 0x0060(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortAIInjectedDecisionsByTag
// 0x0020 (0x0020 - 0x0000)
struct FFortAIInjectedDecisionsByTag final
{
public:
	TArray<struct FFortAIInjectedDecision>        InjectedDecisions;                                 // 0x0000(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIInjectedBehaviorInjectorRuntime
// 0x0020 (0x0020 - 0x0000)
struct FFortAIInjectedBehaviorInjectorRuntime final
{
public:
	TArray<struct FFortAIInjectedDecisionsByTag>  InjectedDecisionsByTag;                            // 0x0000(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.SmartObjectActivityResult
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSmartObjectActivityResult final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterPIDController
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FFortAIEncounterPIDController final
{
public:
	float                                         ProportionalGain;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IntegralGain;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DerivativeGain;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x5C];                                       // 0x000C(0x005C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortSmartObjectRuntimeConfigForResult
// 0x0020 (0x0020 - 0x0000)
struct FFortSmartObjectRuntimeConfigForResult final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class USmartObjectSlotValidationFilter> OverridenFilterClassForEntryPoints;          // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIPawnUpgradeProbability
// 0x0058 (0x0058 - 0x0000)
struct FFortAIPawnUpgradeProbability final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   UpgradeProbability;                                // 0x0048(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortSmartObjectEvaluationResult
// 0x0178 (0x0178 - 0x0000)
struct FFortSmartObjectEvaluationResult final
{
public:
	uint8                                         Pad_0[0x78];                                       // 0x0000(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class USmartObjectComponent*                  PickedSmartObjectComponent;                        // 0x0078(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x58];                                      // 0x0080(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayInteractionContext            ActiveGameplayInteractionContext;                  // 0x00D8(0x0068)(Transient, NativeAccessSpecifierPrivate)
	class UGameplayBehaviorConfig*                ActiveBehaviorConfig;                              // 0x0140(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameplayBehavior*                      ActiveGameplayBehavior;                            // 0x0148(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameplayInteractionSmartObjectBehaviorDefinition* ActiveSmartObjectInteractionBehaviorDefinition; // 0x0150(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_158[0x20];                                     // 0x0158(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortSmartObjectEvaluationRequest
// 0x0058 (0x0058 - 0x0000)
struct FFortSmartObjectEvaluationRequest final
{
public:
	TArray<class USmartObjectComponent*>          OptionalApprovedList;                              // 0x0000(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x20];                                      // 0x0010(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DistanceToWeightCurveForSlotPicking;               // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USmartObjectSlotValidationFilter> OverridenFilterClassForEntryPoints;          // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAISmartObjectEvaluationRequestInternalData
// 0x00C0 (0x00C0 - 0x0000)
struct FFortAISmartObjectEvaluationRequestInternalData final
{
public:
	struct FFortSmartObjectEvaluationRequest      Request;                                           // 0x0000(0x0058)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x68];                                      // 0x0058(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.SmartObjectBanned
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FSmartObjectBanned final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.ClientAILODMovementCompOptimizationConfiguration
// 0x01E0 (0x01E0 - 0x0000)
struct FClientAILODMovementCompOptimizationConfiguration final
{
public:
	struct FScalableFloat                         bEnable;                                           // 0x0000(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         bEnableSimulationDataOptimizations;                // 0x0028(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MinDistanceToApplyFrameSkippingWhenVisible;        // 0x0050(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrameSkippingOnLOD1;                               // 0x0078(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         bRequireHittingPawnThresholdForLOD1;               // 0x00A0(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrameSkippingOnLOD2;                               // 0x00C8(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         bRequireHittingPawnThresholdForLOD2;               // 0x00F0(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrameSkippingOnLowestLOD;                          // 0x0118(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrameSkippingOnLowestLODWithSmallViewAngleRendered; // 0x0140(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrameSkippingOnLowestLODWithSmallViewAngleNotRendered; // 0x0168(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FrameSkippingInvisible;                            // 0x0190(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         bForceInvisibleValueWhenNotRenderedForThreshold;   // 0x01B8(0x0028)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.ClientAILODSettings
// 0x02F0 (0x02F0 - 0x0000)
struct FClientAILODSettings final
{
public:
	struct FScalableFloat                         ScoreMultiplier;                                   // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         PreloadingPriorityOverride;                        // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         bSupportCharacterMovementOptimization;             // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FClientAILODMovementCompOptimizationConfiguration MovementCompOptimizationConfiguration;  // 0x0078(0x01E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         bAIPawnOnlyTickMeshWhenRendered;                   // 0x0258(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         bAIPawnApplyEffectOptimizations;                   // 0x0280(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A8[0x48];                                     // 0x02A8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAICommandSOUsageDataBase
// 0x0008 (0x0008 - 0x0000)
struct FFortAICommandSOUsageDataBase
{
public:
	float                                         RequestDuration;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCooldowns;                                  // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.SpawnGroupEnemy
// 0x0010 (0x0010 - 0x0000)
struct FSpawnGroupEnemy final
{
public:
	TSubclassOf<class UFortAIPawnVariant>         EnemyVariantClass;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideVariantSpawnPointValue;                   // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpawnValue;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAICommandSOUsageData
// 0x0008 (0x0010 - 0x0008)
struct FFortAICommandSOUsageData final : public FFortAICommandSOUsageDataBase
{
public:
	class AActor*                                 SOActor;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AICustomTargetConfiguration
// 0x0020 (0x0020 - 0x0000)
struct FAICustomTargetConfiguration final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ValidRequestTypes;                                 // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIActiveCommandSOUsageData
// 0x0010 (0x0010 - 0x0000)
struct FFortAIActiveCommandSOUsageData final
{
public:
	class USmartObjectComponent*                  SOComponent;                                       // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.GoalSelectionQueryInfo
// 0x0028 (0x0028 - 0x0000)
struct FGoalSelectionQueryInfo final
{
public:
	class UEnvQuery*                              GoalSelectionQuery;                                // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  RequiredGameplayTags;                              // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAISmartObjectActivityCondition
// 0x0048 (0x0048 - 0x0000)
struct FFortAthenaAISmartObjectActivityCondition final
{
public:
	struct FGameplayTagQuery                      SmartObjectActivityConditionTagQuery;              // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAISmartObjectAnimConfigRow
// 0x00A0 (0x00A8 - 0x0008)
struct FFortAISmartObjectAnimConfigRow final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0008(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UContextualAnimSceneAsset> SceneAsset;                                      // 0x0028(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0048(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FWorldConditionQueryDefinition         SelectionPreconditions;                            // 0x0090(0x0018)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.InitialGameplayEffectInfo
// 0x0010 (0x0010 - 0x0000)
struct FInitialGameplayEffectInfo final
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffect;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Level;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortInjectedBehaviorEntry
// 0x0040 (0x0040 - 0x0000)
struct FFortInjectedBehaviorEntry final
{
public:
	struct FGameplayTagContainer                  InjectionTags;                                     // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   InjectedBehavior;                                  // 0x0020(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAISpawnerTagQueryInjectedBehavior
// 0x0058 (0x0058 - 0x0000)
struct FFortAISpawnerTagQueryInjectedBehavior final
{
public:
	struct FGameplayTagQuery                      SpawnerTagsQuery;                                  // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FFortInjectedBehaviorEntry>     InjectedBehaviors;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortInstensityCurveSequenceProgression
// 0x0018 (0x0018 - 0x0000)
struct FFortInstensityCurveSequenceProgression final
{
public:
	class UFortIntensityCurveSequence*            CurveSequence;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   SelectionWeight;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AISpawnCountInfo
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FAISpawnCountInfo final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIRuntimeParametersSmartObjectActivityCondition
// 0x0048 (0x0048 - 0x0000)
struct FAIRuntimeParametersSmartObjectActivityCondition final
{
public:
	struct FGameplayTagQuery                      SmartObjectActivityConditionTagQuery;              // 0x0000(0x0048)(Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAISpawnGroupUpgradeUIData
// 0x0060 (0x0060 - 0x0000)
struct FFortAISpawnGroupUpgradeUIData final
{
public:
	bool                                          bAlwaysDisplayHealthBar;                           // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideHealthBarColor;                           // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              UpgradeIconImage;                                  // 0x0008(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            UpgradeIconTintColor;                              // 0x0028(0x0014)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                           HealthBarColorOverride;                            // 0x003C(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UpgradeName;                                       // 0x0050(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.DroppingAgentData
// 0x0018 (0x0018 - 0x0000)
struct FDroppingAgentData final
{
public:
	class AAthenaAIController*                    AIController;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                         MovementBase;                                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIPawnUpgradeData
// 0x0048 (0x0048 - 0x0000)
struct FFortAIPawnUpgradeData final
{
public:
	struct FCurveTableRowHandle                   SpawnPointsMultiplierCurve;                        // 0x0000(0x0010)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                   LifespanMultiplierCurve;                           // 0x0010(0x0010)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                   ScoreMultiplierCurve;                              // 0x0020(0x0010)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGameplayModifierItemDefinition*    ModifierDefinition;                                // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortGameplayModifierItemDefinition*> AdditionalModifiers;                          // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortAIPawnUpgrade
// 0x0058 (0x0058 - 0x0000)
struct FFortAIPawnUpgrade final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnUpgradeData>         PawnUpgradeDataPerPlayerCount;                     // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AIVisibilityRangeSettings
// 0x000C (0x000C - 0x0000)
struct FAIVisibilityRangeSettings final
{
public:
	uint8                                         bUsesRangeSettings : 1;                            // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         VisibilitySettings;                                // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Range;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleTime;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.MMRSpawningBracketBaseDataTableRow
// 0x0008 (0x0010 - 0x0008)
struct FMMRSpawningBracketBaseDataTableRow : public FTableRowBase
{
public:
	int32                                         MMRBracketLow;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MMRBracketHigh;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIVisibilityDataTableRow
// 0x0058 (0x0060 - 0x0008)
struct FFortAIVisibilityDataTableRow final : public FTableRowBase
{
public:
	struct FGameplayTagQuery                      VisibilityTagQuery;                                // 0x0008(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAIVisibilityRangeSettings>     RangeSettings;                                     // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortWorldConditionCheckSmartObjectState
// 0x0018 (0x0028 - 0x0010)
struct FFortWorldConditionCheckSmartObjectState final : public FWorldConditionCommonActorBase
{
public:
	struct FWorldConditionContextDataRef          SmartObjectActorRef;                               // 0x0010(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWorldConditionContextDataRef          UserActorRef;                                      // 0x0018(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWorldConditionContextDataRef          OptionalSlotHandleRef;                             // 0x0020(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIWeaponModDataTableRow
// 0x0058 (0x0060 - 0x0008)
struct FFortAIWeaponModDataTableRow final : public FTableRowBase
{
public:
	struct FGameplayTagQuery                      WeaponModTagQuery;                                 // 0x0008(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         bCanAffectLootScore : 1;                           // 0x0050(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanAffectAccuracy : 1;                            // 0x0050(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LootScore;                                         // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccuracyModifier;                                  // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AthenaMemoryBudgetInterfaces
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FAthenaMemoryBudgetInterfaces final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortVariantSpawnPoints
// 0x0008 (0x0010 - 0x0008)
struct FFortVariantSpawnPoints final : public FTableRowBase
{
public:
	int32                                         BudgetPoints;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAILoadoutTableRow
// 0x0028 (0x0030 - 0x0008)
struct FFortAthenaAILoadoutTableRow final : public FTableRowBase
{
public:
	TArray<struct FItemAndCount>                  Items;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    LootInfo;                                          // 0x0018(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIHotSpotSlotInfo
// 0x0010 (0x0010 - 0x0000)
struct FAIHotSpotSlotInfo
{
public:
	class AAIHotSpot*                             HotSpot;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAILODSetting
// 0x0001 (0x0001 - 0x0000)
struct FFortAthenaAILODSetting
{
public:
	bool                                          bIsValid;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PendingRequestManager
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FPendingRequestManager final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAILODSetting_AIEvaluator
// 0x0067 (0x0068 - 0x0001)
struct FFortAILODSetting_AIEvaluator final : public FFortAthenaAILODSetting
{
public:
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         IntervalMultiplier;                                // 0x0008(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         RandomDeviationMultiplier;                         // 0x0038(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.NPCCustomEffect
// 0x0058 (0x0058 - 0x0000)
struct FNPCCustomEffect final
{
public:
	struct FGameplayTag                           EffectTag;                                         // 0x0000(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          VisualEffect;                                      // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VisualEffectSocket;                                // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundWave>              SoundEffect;                                       // 0x0030(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SoundEffectSocket;                                 // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIRuntimeParametersSmartObjectActivityConfig
// 0x0058 (0x0058 - 0x0000)
struct FAIRuntimeParametersSmartObjectActivityConfig final
{
public:
	struct FGameplayTagQuery                      ActivityRequirements;                              // 0x0000(0x0048)(Transient, NativeAccessSpecifierPublic)
	float                                         MaxDetectionRadius;                                // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDetectionRadiusSqr;                             // 0x004C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivityCooldownOnFinished;                        // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivityCooldownOnInterrupted;                     // 0x0054(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAILODSetting_CharacterMovement
// 0x0187 (0x0188 - 0x0001)
struct FFortAILODSetting_CharacterMovement final : public FFortAthenaAILODSetting
{
public:
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Interval;                                          // 0x0008(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         RandomDeviation;                                   // 0x0030(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinimumDynamicInterval;                            // 0x0058(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaximumDotDifferenceBetweenInputVectors;           // 0x0080(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bDisableAvoidance;                                 // 0x00A8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bBotsEnableNavWalkingMode;                         // 0x00D0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bBotsEnablePhysNavWalkingPathFollowingMode;        // 0x00F8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bSweepWhileNavWalking;                             // 0x0120(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         bGenerateOverlapInNavWalking;                      // 0x0148(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x18];                                     // 0x0170(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.MMRSpawningDataTableInfo
// 0x0018 (0x0018 - 0x0000)
struct FMMRSpawningDataTableInfo final
{
public:
	TSubclassOf<class UFortAthenaAISpawnerData>   AISpawnerData;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Skill;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpawingItemIndex;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAILODSetting_FortWeaponRanged
// 0x0067 (0x0068 - 0x0001)
struct FFortAILODSetting_FortWeaponRanged final : public FFortAthenaAILODSetting
{
public:
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Interval;                                          // 0x0008(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         RandomDeviation;                                   // 0x0038(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.MMRSpawningBaseRuntimeInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FMMRSpawningBaseRuntimeInfo
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.VehicleDigestedTurnInPlace
// 0x0018 (0x0018 - 0x0000)
struct FVehicleDigestedTurnInPlace final
{
public:
	float                                         MovingAngleBegin;                                  // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovingAngleEnd;                                    // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleAngleBegin;                                    // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleAngleEnd;                                      // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinMovingSpeed;                                    // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMissedPathPointReverse;                           // 0x0014(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.VehicleDigestedPIDController
// 0x000C (0x000C - 0x0000)
struct FVehicleDigestedPIDController final
{
public:
	float                                         KP;                                                // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KI;                                                // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KD;                                                // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.VehicleDigestedAppendToPath
// 0x0008 (0x0008 - 0x0000)
struct FVehicleDigestedAppendToPath final
{
public:
	float                                         MinimumPathLengthToEndOfPath;                      // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTimeSinceLastAppend;                            // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.DigestedVehicleDriving
// 0x00B8 (0x00B8 - 0x0000)
struct FDigestedVehicleDriving final
{
public:
	bool                                          bCanTurnInPlace;                                   // 0x0000(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAvoidanceEnabled;                                 // 0x0001(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPreventTurningWhenStopping;                       // 0x0002(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      AvoidanceTagQuery;                                 // 0x0008(0x0048)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                         NavigationOffsetFromObstacles;                     // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bReverseSwapLeftAndRight;                          // 0x0054(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumForwardPIDValueForStopping;                 // 0x0058(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinimumDistanceLeftForBoosting;                    // 0x005C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVehicleDigestedPIDController          ForwardPIDController;                              // 0x0060(0x000C)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVehicleDigestedPIDController          SteeringPIDController;                             // 0x006C(0x000C)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVehicleDigestedAppendToPath           AppendToPath;                                      // 0x0078(0x0008)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVehicleDigestedTurnInPlace            TurnInPlace;                                       // 0x0080(0x0018)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  ModsTags;                                          // 0x0098(0x0020)(Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.DigestedVehicleDrivingCategory
// 0x00D8 (0x00D8 - 0x0000)
struct FDigestedVehicleDrivingCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedVehicleDriving                VehicleDriving;                                    // 0x0020(0x00B8)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortAILODSetting_GenericTickingObject
// 0x0037 (0x0038 - 0x0001)
struct FFortAILODSetting_GenericTickingObject final : public FFortAthenaAILODSetting
{
public:
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         TickMultiplier;                                    // 0x0008(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBehaviorValueBase
// 0x0008 (0x0008 - 0x0000)
struct FFortBehaviorValueBase
{
public:
	class FName                                   Name;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBehaviorValue_Object
// 0x0010 (0x0018 - 0x0008)
struct FFortBehaviorValue_Object final : public FFortBehaviorValueBase
{
public:
	class UObject*                                DefaultValue;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UObject>                    BaseClass;                                         // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.DigestedFiringPattern
// 0x0020 (0x0020 - 0x0000)
struct FDigestedFiringPattern final
{
public:
	float                                         MinRange;                                          // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxRange;                                          // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         HoldTimeDeviation;                                 // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PreventFireTimeDeviation;                          // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FiringPatternHysteresis;                           // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FiringPatternCurve;                                // 0x0018(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedRangedWeaponSkill
// 0x0048 (0x0048 - 0x0000)
struct FDigestedRangedWeaponSkill final
{
public:
	float                                         DelayBetweenShots;                                 // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DelayDeviationTimeBetweenShots;                    // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TriggerHoldDuration;                               // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TriggerHoldDeviationTime;                          // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DelayBeforeFirstShot;                              // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ShotDelayAfterTargeting;                           // 0x0014(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ShotDelayAfterIncomingLethality;                   // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InterruptReloadToShootOdds;                        // 0x001C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StopFiringWhenTargetWillDieOdds;                   // 0x0020(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDigestedFiringPattern>         TargetInAirFiringPatterns;                         // 0x0028(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FDigestedFiringPattern>         FiringPatterns;                                    // 0x0038(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedRangedWeaponSkillCategorySpecialization
// 0x0068 (0x0068 - 0x0000)
struct FDigestedRangedWeaponSkillCategorySpecialization final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedRangedWeaponSkill             WeaponSkill;                                       // 0x0020(0x0048)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortBehaviorValue_String
// 0x0010 (0x0018 - 0x0008)
struct FFortBehaviorValue_String final : public FFortBehaviorValueBase
{
public:
	class FString                                 DefaultValue;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortSpawnAIRequest
// 0x0068 (0x0068 - 0x0000)
struct FFortSpawnAIRequest final
{
public:
	struct FGuid                                  SpawnGroupInstanceGuid;                            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EnemyIndex;                                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SpawnLocation;                                     // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnRotation;                                     // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnPoint;                                        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAbilitySet*>                AbilitySetsToGrantOnSpawn;                         // 0x0050(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCollisionWhenSpawning;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnDelay;                                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortBehaviorValue_Bool
// 0x0004 (0x000C - 0x0008)
struct FFortBehaviorValue_Bool final : public FFortBehaviorValueBase
{
public:
	bool                                          DefaultValue;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.PendingSpawnInfo
// 0x0130 (0x0130 - 0x0000)
struct FPendingSpawnInfo final
{
public:
	TSubclassOf<class AFortAIPawn>                PawnClassToSpawn;                                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnPoint;                                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnLocation;                                     // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SpawnRotation;                                     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnSource;                                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnedFromExternalSpawner;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsEncounterAI;                                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAIEncounterInfo*                   EncounterInfo;                                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DifficultyLevel;                                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAISpawnGroup*                      SpawnGroup;                                        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  SpawnGroupGuid;                                    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EnemyIndexInSpawnGroup;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToSpawn;                                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  PendingSpawnInfoGuid;                              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCollision;                                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKillBuildingActorsAtSpawnLocation;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EncounterAILifespan;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScoreMultiplier;                                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugSpawnedAI;                                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortAbilitySet*>                AbilitySetsToGrantOnSpawn;                         // 0x00A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UFortGameplayModifierItemDefinition*> ModifiersToApplyOnSpawn;                      // 0x00B0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FFortAISpawnGroupUpgradeUIData         UpgradeUIData;                                     // 0x00C0(0x0060)(NativeAccessSpecifierPublic)
	TStructCycleFixup<struct FFortAIPawnLootDropData, 0x0010, 0x04> LootDropData;                    // 0x0120(0x0010)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortBehaviorValue_Class
// 0x0010 (0x0018 - 0x0008)
struct FFortBehaviorValue_Class final : public FFortBehaviorValueBase
{
public:
	TSubclassOf<class UObject>                    DefaultValue;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UObject>                    BaseClass;                                         // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortNPCVerbReactionTableRow
// 0x0070 (0x0078 - 0x0008)
struct FFortNPCVerbReactionTableRow : public FTableRowBase
{
public:
	TArray<struct FInstancedStruct>               VerbFilters;                                       // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaDanceItemDefinition*             EmoteReaction;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>            GameplayEffectReaction;                            // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      ConditionalQuery;                                  // 0x0028(0x0048)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOncePerWorld;                                     // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterRift
// 0x0030 (0x0030 - 0x0000)
struct FFortAIEncounterRift final
{
public:
	int32                                         QueryID;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RiftLocation;                                      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingRift*                          RiftActor;                                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TStructCycleFixup<struct FFortRiftReservationHandle, 0x0004, 0x04> RiftReservationHandle;        // 0x0028(0x0004)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBehaviorValue_Enum
// 0x0010 (0x0018 - 0x0008)
struct FFortBehaviorValue_Enum final : public FFortBehaviorValueBase
{
public:
	uint8                                         DefaultValue;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnum*                                  EnumType;                                          // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.MMRPhaseSpawningDataTableInfo
// 0x0018 (0x0018 - 0x0000)
struct FMMRPhaseSpawningDataTableInfo final
{
public:
	int32                                         GamePhaseIndexToSpawn;                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMMRSpawningDataTableInfo>      SpawningItems;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.MMRSpawningBracketBotDataTableRow
// 0x0010 (0x0020 - 0x0010)
struct FMMRSpawningBracketBotDataTableRow final : public FMMRSpawningBracketBaseDataTableRow
{
public:
	TArray<struct FMMRPhaseSpawningDataTableInfo> PhaseSpawningItems;                                // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIPawnMaterialDefinition
// 0x0028 (0x0028 - 0x0000)
struct FFortAIPawnMaterialDefinition final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0000(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireDynamicInstance;                           // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBehaviorValue_Float
// 0x0004 (0x000C - 0x0008)
struct FFortBehaviorValue_Float final : public FFortBehaviorValueBase
{
public:
	float                                         DefaultValue;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBehaviorValue_GameplayTagContainer
// 0x0020 (0x0028 - 0x0008)
struct FFortBehaviorValue_GameplayTagContainer final : public FFortBehaviorValueBase
{
public:
	struct FGameplayTagContainer                  DefaultValue;                                      // 0x0008(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBehaviorValue_Int32
// 0x0004 (0x000C - 0x0008)
struct FFortBehaviorValue_Int32 final : public FFortBehaviorValueBase
{
public:
	int32                                         DefaultValue;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBehaviorValue_Name
// 0x0004 (0x000C - 0x0008)
struct FFortBehaviorValue_Name final : public FFortBehaviorValueBase
{
public:
	class FName                                   DefaultValue;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBehaviorValue_Rotator
// 0x0018 (0x0020 - 0x0008)
struct FFortBehaviorValue_Rotator final : public FFortBehaviorValueBase
{
public:
	struct FRotator                               DefaultValue;                                      // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBehaviorValue_Vector
// 0x0018 (0x0020 - 0x0008)
struct FFortBehaviorValue_Vector final : public FFortBehaviorValueBase
{
public:
	struct FVector                                DefaultValue;                                      // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBlackboardParameterManager
// 0x0068 (0x0068 - 0x0000)
struct FFortBlackboardParameterManager final
{
public:
	struct FInstancedPropertyBag                  ParameterKeyValues;                                // 0x0000(0x0010)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x58];                                      // 0x0010(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortItemInjectedBehaviorsDataTableRow
// 0x0078 (0x0080 - 0x0008)
struct FFortItemInjectedBehaviorsDataTableRow final : public FTableRowBase
{
public:
	TSoftObjectPtr<class UFortItemDefinition>     ItemDefinition;                                    // 0x0008(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      ItemGameplayTagQuery;                              // 0x0028(0x0048)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FFortAISpawnerTagQueryInjectedBehavior> InjectedBehaviorsByTagQuery;               // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.UtilityTypeFloatPair
// 0x0008 (0x0008 - 0x0000)
struct FUtilityTypeFloatPair final
{
public:
	EFortAIUtility                                Utility;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.UtilityContribution
// 0x0008 (0x0008 - 0x0000)
struct FUtilityContribution final
{
public:
	float                                         MaxContribution;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCombatFactors                            ContributingFactor;                                // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAIDirectorFactor                         ContributingAIDirectorFactor;                      // 0x0005(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFactorContributionType                   ContributionType;                                  // 0x0006(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.UtilityData
// 0x0040 (0x0040 - 0x0000)
struct FUtilityData final
{
public:
	TArray<struct FUtilityContribution>           ContributingFactors;                               // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         ContributionsTotal;                                // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyRecentSelectionPenalty;                      // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecentlySelectedPenaltyPercentage;                 // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PenaltyFallOffRate;                                // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DebugGraphName;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           DebugGraphColor;                                   // 0x0030(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIEncounterPIDControllerSettings
// 0x0030 (0x0030 - 0x0000)
struct FFortAIEncounterPIDControllerSettings final
{
public:
	struct FCurveTableRowHandle                   ProportionalGain;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   IntegralGain;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   DerivativeGain;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortPlayerPerformanceEstimateSettings
// 0x0040 (0x0040 - 0x0000)
struct FFortPlayerPerformanceEstimateSettings final
{
public:
	struct FCurveTableRowHandle                   PlayerPerformanceEstimateTransformMin;             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   PlayerPerformanceEstimateTransformOrigin;          // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   PlayerPerformanceEstimateTransformMax;             // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EncounterPlayerPerformanceWeight;                  // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreviousWavePlayerPerformanceWeight;               // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CampaignPlayerPerformanceWeight;                   // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortEncounterPawnNumberCaps
// 0x0018 (0x0018 - 0x0000)
struct FFortEncounterPawnNumberCaps final
{
public:
	bool                                          bApplyPawnNumberCaps;                              // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCurveTableRowHandle>           PawnCapsPerPlayerCount;                            // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIEncounterSpawnGroupCap
// 0x0020 (0x0020 - 0x0000)
struct FFortAIEncounterSpawnGroupCap final
{
public:
	struct FCurveTableRowHandle                   MinSpawnGroupNumberCap;                            // 0x0000(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   MaxSpawnGroupNumberCap;                            // 0x0010(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIEncounterSpawnGroupCapsCategory
// 0x0140 (0x0140 - 0x0000)
struct FFortAIEncounterSpawnGroupCapsCategory final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bApplyGroupPopulationCurveToCategoryMax;           // 0x0048(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   InitialSpawnGroupAvailabilityDelaySeconds;         // 0x0050(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   SpawnGroupAvailabilityDelaySeconds;                // 0x0060(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      UnlockingTagQuery;                                 // 0x0070(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCap>  SpawnGroupCapsPerPlayerCount;                      // 0x00B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         InitialSpawnGroupAvailabilityTime;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NumActiveCategorySpawnGroups;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 SpawnGroupAvailabilityTimes;                       // 0x00D0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NumSpawnGroupAvailable;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CategorySource;                                    // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x50];                                      // 0x00F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterSpawnGroupCapsProfile
// 0x0030 (0x0030 - 0x0000)
struct FFortAIEncounterSpawnGroupCapsProfile final
{
public:
	struct FGameplayTagContainer                  EncounterTypeTags;                                 // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> PopulationCategories;                      // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIEncounterSpawnPointsProfile
// 0x0040 (0x0040 - 0x0000)
struct FFortAIEncounterSpawnPointsProfile final
{
public:
	struct FGameplayTagContainer                  EncounterTypeTags;                                 // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>           MaxSpawnPointsPerPlayerCount;                      // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>           MinSpawnPointsPerPlayerCount;                      // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAISpawnGroupUpgradeData
// 0x0060 (0x0060 - 0x0000)
struct FFortAISpawnGroupUpgradeData final
{
public:
	TSubclassOf<class UFortAISpawnGroupUpgrade>   SpawnGroupUpgrade;                                 // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAISpawnGroupUpgradeProbabilities> UpgradeProbabilities;                   // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAISpawnGroupCapsCategorySet> SpawnGroupCapsCategories;                    // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      EncounterTagRequirementsQuery;                     // 0x0018(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortAIEncounterPawnDifficultyLevelModifier
// 0x0058 (0x0058 - 0x0000)
struct FFortAIEncounterPawnDifficultyLevelModifier final
{
public:
	struct FGameplayTagQuery                      EncounterTagRequirementsQuery;                     // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   DifficultyLevelModifierCurve;                      // 0x0048(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortPendingStoppedEncounterData
// 0x0010 (0x0010 - 0x0000)
struct FFortPendingStoppedEncounterData final
{
public:
	class UFortAIEncounterInfo*                   Encounter;                                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortObjectiveStatus                          ObjectiveStatus;                                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceDestroyAI;                                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEncounterCompletedSuccessfully;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortEncounterGroupLimitData
// 0x000C (0x000C - 0x0000)
struct FFortEncounterGroupLimitData final
{
public:
	int32                                         DesiredPawnNumCap;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RemainingDesiredLimit;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentEncounterLimit;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIEncounterRequirements
// 0x0050 (0x0050 - 0x0000)
struct FFortAIEncounterRequirements final
{
public:
	EFortMissionType                              AssociatedMissionType;                             // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0008(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortAIBaseLootDropRow
// 0x0038 (0x0040 - 0x0008)
struct FFortAIBaseLootDropRow final : public FTableRowBase
{
public:
	int32                                         Priority;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ItemDropChance;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WorldItemLootTierGroup;                            // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WorldItemInstancedLootTierGroup;                   // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AccountItemLootTierGroup;                          // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AITagsContainer;                                   // 0x0020(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAILootDropModifierRow
// 0x0030 (0x0038 - 0x0008)
struct FFortAILootDropModifierRow final : public FTableRowBase
{
public:
	int32                                         Priority;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ItemDropChanceMultiplier;                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WorldItemLootTierGroup;                            // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AITagsContainer;                                   // 0x0018(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAILootDropModifiers
// 0x0060 (0x0060 - 0x0000)
struct FFortAILootDropModifiers final
{
public:
	struct FFortAIEncounterRequirements           Requirements;                                      // 0x0000(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FDataTableRowHandle>            LootDropModifierRows;                              // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.LODAIUpdateInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FLODAIUpdateInfo final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterQueryData
// 0x0020 (0x0020 - 0x0000)
struct FFortAIEncounterQueryData final
{
public:
	TArray<struct FVector>                        QueryLocations;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         QueryActors;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PlayerLODViewConeConfig
// 0x0080 (0x0080 - 0x0000)
struct FPlayerLODViewConeConfig final
{
public:
	struct FScalableFloat                         ObserverVisionAngleDeg;                            // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ViewConeMaxRadius;                                 // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         AlwaysVisibleRadius;                               // 0x0050(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EFortAILODLevel                               FortAILODLevel;                                    // 0x0078(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.PlayerLODViewConeHysteresisConfig
// 0x0050 (0x0050 - 0x0000)
struct FPlayerLODViewConeHysteresisConfig final
{
public:
	struct FScalableFloat                         AdditionalObserverVisionAngleDeg;                  // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         AdditionalRadius;                                  // 0x0028(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIDirectorPerLODConfig
// 0x0030 (0x0030 - 0x0000)
struct FFortAIDirectorPerLODConfig final
{
public:
	struct FScalableFloat                         MaxNPCCosts;                                       // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EFortAILODLevel                               FortAILODLevel;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIDirectorEventData
// 0x0030 (0x0030 - 0x0000)
struct FAIDirectorEventData final
{
public:
	EFortAIDirectorEvent                          Event;                                             // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   DataMax;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   CoolDownRate;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAIDirectorEventContribution              ContributionType;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAIDirectorEventParticipant               OwnerParticipantType;                              // 0x0029(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIDirectorFactorContribution
// 0x000C (0x000C - 0x0000)
struct FFortAIDirectorFactorContribution final
{
public:
	EFortAIDirectorEvent                          AIDirectorEvent;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxContribution;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAIDirectorFactorContribution             ContributionType;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIDirectorFactorData
// 0x0020 (0x0020 - 0x0000)
struct FFortAIDirectorFactorData final
{
public:
	EFortAIDirectorFactor                         AIDirectorFactor;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortAIDirectorFactorContribution> ContributingEvents;                             // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         MaxValue;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.SpawnGroupProgression
// 0x0008 (0x0008 - 0x0000)
struct FSpawnGroupProgression final
{
public:
	class UFortAISpawnGroup*                      SpawnGroup;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AIEncounterSpawnGroupWeights
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FAIEncounterSpawnGroupWeights final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortSpawnPointsPercentageCurve
// 0x0010 (0x0018 - 0x0008)
struct FFortSpawnPointsPercentageCurve final : public FTableRowBase
{
public:
	class UCurveTable*                            SpawnPointsPercentageCurveTable;                   // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   SpawnPointsPercentageCurveTableRow;                // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRampTime;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortIntensityCurve
// 0x0030 (0x0038 - 0x0008)
struct FFortIntensityCurve final : public FTableRowBase
{
public:
	class UCurveTable*                            IntensityCurveTable;                               // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   IntensityCurveTableRow;                            // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LowPlayerPerformancePeakIntensityThreshold;        // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NormalPlayerPerformancePeakIntensityThreshold;     // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HighPlayerPerformancePeakIntensityThreshold;       // 0x001C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRampTime;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FadeEndIntensityThreshold;                         // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StartIntensityOffsetFloor;                         // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EndIntensityOffsetFloor;                           // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StartIntensityOffsetCeiling;                       // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EndIntensityOffsetCeiling;                         // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.CurrentIntensityAnalyticsBucket
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FCurrentIntensityAnalyticsBucket final
{
public:
	uint8                                         Pad_0[0x38];                                       // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortCurveSequenceInstanceInfo
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FFortCurveSequenceInstanceInfo
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortSpawnPointsPercentageCurveSequenceInstanceInfo
// 0x000C (0x0010 - 0x0004)
struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo final : public FFortCurveSequenceInstanceInfo
{
public:
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSpawnPointsPercentageCurveSequence* SpawnPointsPercentageCurveSequence;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortIntensityCurveSequenceInstanceInfo
// 0x000C (0x0010 - 0x0004)
struct FFortIntensityCurveSequenceInstanceInfo final : public FFortCurveSequenceInstanceInfo
{
public:
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortIntensityCurveSequence*            IntensityCurveSequence;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.SpawnGroupInstanceInfo
// 0x00F8 (0x00F8 - 0x0000)
struct FSpawnGroupInstanceInfo final
{
public:
	class UFortAISpawnGroup*                      SpawnGroup;                                        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumActiveAlive;                                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalGroupCost;                                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpawnPointsUsed;                                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumEngaged;                                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReadyToSpawn;                                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFinishedSpawning;                                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  GroupGuid;                                         // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EnemySpawnDataIndex;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeSelected;                                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NextEnemyToSpawnIndex;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  UpgradeTags;                                       // 0x0038(0x0020)(NativeAccessSpecifierPublic)
	struct FFortAISpawnGroupUpgradeUIData         UpgradeUIData;                                     // 0x0058(0x0060)(NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnUpgradeData>         PawnUpgrades;                                      // 0x00B8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortGameplayModifierItemDefinition*> ModifiersForAllPawns;                         // 0x00C8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AFortAIPawn*>                    PawnList;                                          // 0x00D8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AFortAIPawn*>                    LifespanExpiredList;                               // 0x00E8(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAISpawnerData
// 0x0078 (0x0078 - 0x0000)
struct FFortAISpawnerData final
{
public:
	struct FGuid                                  SpawnGroupInstanceGuid;                            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpawnAIRequest                    ReservedSpawnRequest;                              // 0x0010(0x0068)(NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortEncounterAIDirectorFactor
// 0x000C (0x000C - 0x0000)
struct FFortEncounterAIDirectorFactor final
{
public:
	float                                         CurrentValue;                                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccumulatedPeriodValue;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalPeriodTime;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.EncounterEnvironmentQueryInstance
// 0x0058 (0x0058 - 0x0000)
struct FEncounterEnvironmentQueryInstance final
{
public:
	TStructCycleFixup<struct FEncounterEnvironmentQueryInfo, 0x0028, 0x08> EnvironmentQueryInfo;     // 0x0000(0x0028)(NativeAccessSpecifierPublic)
	int32                                         QueryID;                                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWaitingForQueryResults;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortEncounterDirection                       ChosenDirection;                                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        QueryLocations;                                    // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ABuildingRift>>   FoundRifts;                                        // 0x0040(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         NumTimesUsed;                                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterWaveProgressEstimation
// 0x001C (0x001C - 0x0000)
struct FFortAIEncounterWaveProgressEstimation final
{
public:
	float                                         SectionProgressEstimate;                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SectionStartTime;                                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastWaveProgressUpdateTime;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PeakAndFadeWavePercentage;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAdjustmentPerSecond;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAIWaveProgressSection                    CurrentSection;                                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfWaveSegments;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortGoalActorEncounterDataManagerPair
// 0x0010 (0x0010 - 0x0000)
struct FFortGoalActorEncounterDataManagerPair final
{
public:
	class AActor*                                 GoalActor;                                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirectorDataManager*             EncounterDataManager;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIEncounterSpawnArea
// 0x0058 (0x0058 - 0x0000)
struct FFortAIEncounterSpawnArea final
{
public:
	TArray<struct FEncounterEnvironmentQueryInstance> QueryInstances;                                // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterRift>           PendingRifts;                                      // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterRift>           Rifts;                                             // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        UsedRiftLocations;                                 // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortPathCostEstimator*>         PathEstimators;                                    // 0x0040(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsingFallbackQuery;                               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortEncounterSpawnLocationManagementMode     SpawnLocationManagementMode;                       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterRiftManagerInitializationData
// 0x0130 (0x0130 - 0x0000)
struct FFortAIEncounterRiftManagerInitializationData final
{
public:
	class UFortAIEncounterInfo*                   EncounterInfo;                                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TStructCycleFixup<struct FFortEncounterSettings, 0x00C0, 0x08> EncounterSettings;                // 0x0008(0x00C0)(NativeAccessSpecifierPublic)
	TStructCycleFixup<struct FEncounterEnvironmentQueryInfo, 0x0028, 0x08> CurrentEnvironmentQueryInfo; // 0x00C8(0x0028)(NativeAccessSpecifierPublic)
	TStructCycleFixup<struct FEncounterEnvironmentQueryInfo, 0x0028, 0x08> FallbackEnvironmentQueryInfo; // 0x00F0(0x0028)(NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>              RiftClassTemplate;                                 // 0x0118(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumRiftsToUse;                                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinRiftsToUse;                                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpdateIntervalTimeSeconds;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIEncounterQueryDirectionTracker
// 0x0048 (0x0048 - 0x0000)
struct FFortAIEncounterQueryDirectionTracker final
{
public:
	bool                                          bHasTriedPreviousDirections;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFortEncounterDirection>               PreviousQueryDirections;                           // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EFortEncounterDirection>               ChosenDirections;                                  // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EFortEncounterDirection>               FailedDirections;                                  // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<EFortEncounterDirection>               AvailableDirections;                               // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIGoalInfo
// 0x0028 (0x0028 - 0x0000)
struct FFortAIGoalInfo
{
public:
	TWeakObjectPtr<class AActor>                  Actor;                                             // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                Location;                                          // 0x0008(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bActorAlwaysPerceived;                             // 0x0020(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIDiscouragedGoalTimer
// 0x0038 (0x0038 - 0x0000)
struct FAIDiscouragedGoalTimer final
{
public:
	struct FFortAIGoalInfo                        DiscouragedGoalInfo;                               // 0x0000(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
	double                                        ExpirationTime;                                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumberOfTimesMarkedForDiscouragement;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIAssignmentInfo
// 0x00F8 (0x00F8 - 0x0000)
struct FAIAssignmentInfo final
{
public:
	TWeakObjectPtr<class UFortAIAssignment>       CurrentAssignment;                                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAIGoalInfo                        CurrentGoal;                                       // 0x0008(0x0028)(NoDestructor, NativeAccessSpecifierPrivate)
	float                                         TimeCurrentGoalWasChosen;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TimeExitedLastAssignmentOfType[0x4];               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortAIAssignment>       PreviousAssignment;                                // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAIGoalInfo                        PreviousGoal;                                      // 0x0050(0x0028)(NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bWaitingForQueryResponse;                          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSuppressGoalUpdates;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bReportEnemyGoalSelection;                         // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B[0x7D];                                      // 0x007B(0x007D)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIPawnVariantDefinition
// 0x0068 (0x0068 - 0x0000)
struct FFortAIPawnVariantDefinition final
{
public:
	TSubclassOf<class AFortAIPawn>                PawnClass;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   VariantWeightCurve;                                // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentWeight;                                     // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      RequiredTagsQuery;                                 // 0x0020(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortSpawnGroupEncounterTypeData
// 0x0040 (0x0040 - 0x0000)
struct FFortSpawnGroupEncounterTypeData final
{
public:
	struct FGameplayTagContainer                  EncounterTypeTags;                                 // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   MaxGroupCategoryPopulationDensityCurve;            // 0x0020(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   RespawnDelayCurve;                                 // 0x0030(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAIAssignmentIdentifier
// 0x0030 (0x0030 - 0x0000)
struct FFortAIAssignmentIdentifier final
{
public:
	EAssignmentType                               AssignmentType;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AssignmentGameplayTags;                            // 0x0008(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EFortTeam                                     AssignmentTeam;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.BuildingActorNavArea
// 0x0004 (0x0004 - 0x0000)
struct FBuildingActorNavArea final
{
public:
	int32                                         AreaBits;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortNavLinkPattern
// 0x0008 (0x0008 - 0x0000)
struct FFortNavLinkPattern final
{
public:
	int32                                         PatternBits;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WildcardBits;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AIHotSpotUseInfo
// 0x0008 (0x0018 - 0x0010)
struct FAIHotSpotUseInfo final : public FAIHotSpotSlotInfo
{
public:
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DistanceToTargetComparison
// 0x0038 (0x0038 - 0x0000)
struct FDistanceToTargetComparison final
{
public:
	bool                                          bUseOverriddenValue;                               // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverriddenValue;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  DistanceDataTags;                                  // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseAddedOffset;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AddedOffset;                                       // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EArithmeticKeyOperation                       Operator;                                          // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETargetDistanceComparisonType                 ComparisonType;                                    // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIScalableFloat
// 0x0038 (0x0038 - 0x0000)
struct FAIScalableFloat final
{
public:
	struct FScalableFloat                         ScalableFloat;                                     // 0x0000(0x0028)(Edit, NativeAccessSpecifierPrivate)
	EAIScalableFloatScalingType                   ScalingType;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0xC];                                       // 0x002C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIBotNameDataTableRow
// 0x0020 (0x0028 - 0x0008)
struct FFortAthenaAIBotNameDataTableRow final : public FTableRowBase
{
public:
	class FString                                 Name;                                              // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UniqueID;                                          // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAIBotNameRegionData
// 0x0030 (0x0030 - 0x0000)
struct FFortAthenaAIBotNameRegionData final
{
public:
	class FString                                 RegionId;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>              NameDataTable;                                     // 0x0010(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.MetaNavCachedEntry
// 0x01E8 (0x01E8 - 0x0000)
struct alignas(0x08) FMetaNavCachedEntry final
{
public:
	uint8                                         Pad_0[0x1E8];                                      // 0x0000(0x01E8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.ThreatGridIndex
// 0x0008 (0x0008 - 0x0000)
struct FThreatGridIndex final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.ThreatLocationInfo
// 0x007C (0x0088 - 0x000C)
struct FThreatLocationInfo final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CloudLocation;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   ThreatVolume;                                      // 0x0028(0x0038)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AFortThreatVisualsManager*              ThreatVisualsManager;                              // 0x0060(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AThreatCloud>            CloudActor;                                        // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x1];                                       // 0x0070(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bThreatActivated;                                  // 0x0071(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortThreatDeactivationType                   DeactivationType;                                  // 0x0072(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_73[0x15];                                      // 0x0073(0x0015)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.ThreatLocationArray
// 0x0010 (0x0118 - 0x0108)
struct FThreatLocationArray final : public FFastArraySerializer
{
public:
	TArray<struct FThreatLocationInfo>            Locations;                                         // 0x0108(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.StormWind
// 0x005C (0x0068 - 0x000C)
struct FStormWind final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0028(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Magnitude;                                         // 0x0044(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortThreatVisualsManager*              ThreatVisualsManager;                              // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAIEncounterInfo*>           Encounters;                                        // 0x0050(0x0010)(ZeroConstructor, Transient, RepSkip, UObjectWrapper, NativeAccessSpecifierPublic)
	TStructCycleFixup<struct FFortWindImpulseHandle, 0x0004, 0x04> WindHandle;                       // 0x0060(0x0004)(Transient, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.StormWindArray
// 0x0010 (0x0118 - 0x0108)
struct FStormWindArray final : public FFastArraySerializer
{
public:
	TArray<struct FStormWind>                     StormWinds;                                        // 0x0108(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.GoalUpdateSuppressionHandle
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FGoalUpdateSuppressionHandle final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIGoal
// 0x0010 (0x0038 - 0x0028)
struct FFortAIGoal final : public FFortAIGoalInfo
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.EncounterGoalSelectionTableEntry
// 0x0040 (0x0040 - 0x0000)
struct FEncounterGoalSelectionTableEntry final
{
public:
	struct FGameplayTagContainer                  RequiredGameplayTags;                              // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGoalSelectionCriteria                 GoalSelectionCriteria;                             // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PawnGoalSelectionTableEntry
// 0x0070 (0x0070 - 0x0000)
struct FPawnGoalSelectionTableEntry final
{
public:
	struct FGameplayTagContainer                  RequiredGameplayTags;                              // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FPawnGoalSelectionCriteria             PawnGoalSelectionCriteria;                         // 0x0020(0x0050)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AIHotSpotSlotConfig
// 0x0038 (0x0038 - 0x0000)
struct FAIHotSpotSlotConfig final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortHotSpotSlot                              SlotType;                                          // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.BuildingActorHotSpotDirection
// 0x0028 (0x0028 - 0x0000)
struct FBuildingActorHotSpotDirection final
{
public:
	class UAIHotSpotConfig*                       HotSpotConfig;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMirrorX : 1;                                      // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMirrorY : 1;                                      // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EFortHotSpotDirection                         Direction;                                         // 0x0024(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHotspotTypeConfigMode                        TypeConfigUsage;                                   // 0x0025(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AutoAcquireSlot
// 0x0018 (0x0028 - 0x0010)
struct FAutoAcquireSlot final : public FAIHotSpotSlotInfo
{
public:
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.NavAgentData
// 0x0028 (0x0028 - 0x0000)
struct FNavAgentData final
{
public:
	class FName                                   AgentName;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   BuildingActorHealthToNavAreaStrengthHandle;        // 0x0008(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                   PlayerBuiltBuildingActorHealthToNavAreaStrengthHandle; // 0x0018(0x0010)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.UpdatedNavMeshTiles
// 0x0018 (0x0018 - 0x0000)
struct FUpdatedNavMeshTiles final
{
public:
	class AAthenaNavMesh*                         NavMesh;                                           // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.NavMeshDetectedInfo
// 0x0030 (0x0030 - 0x0000)
struct FNavMeshDetectedInfo final
{
public:
	class AAthenaNavMesh*                         NavMesh;                                           // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x28];                                       // 0x0008(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.BoxNavInvoker
// 0x0020 (0x0020 - 0x0000)
struct FBoxNavInvoker final
{
public:
	class AAthenaNavInvokerBox*                   Invoker;                                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.NavDataSetVariantSettings
// 0x0028 (0x0028 - 0x0000)
struct FNavDataSetVariantSettings final
{
public:
	TSoftObjectPtr<class UWorld>                  Level;                                             // 0x0000(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        OceanFloodLevel;                                   // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.OverriddenSupportedAgentsByReleaseVersion
// 0x000C (0x000C - 0x0000)
struct FOverriddenSupportedAgentsByReleaseVersion final
{
public:
	struct FFortReleaseVersion                    StartVersion;                                      // 0x0000(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortReleaseVersion                    EndVersion;                                        // 0x0004(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNavAgentSelector                      OverriddenSupportedAgentsMask;                     // 0x0008(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PathRendererDetails
// 0x0018 (0x0018 - 0x0000)
struct FPathRendererDetails final
{
public:
	TArray<struct FVector>                        PathPoints;                                        // 0x0000(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	ENavPathRendererStatus                        PathStatus;                                        // 0x0010(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.PathRendererInfo
// 0x0028 (0x0028 - 0x0000)
struct FPathRendererInfo final
{
public:
	TScriptInterface<class IFortNavPathRendererInfoInterface> PathRendererInterface;                 // 0x0000(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.ClimbLinkData
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FClimbLinkData final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        UniqueLinkId;                                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.WeightedAIPerk
// 0x0030 (0x0030 - 0x0000)
struct FWeightedAIPerk final
{
public:
	TSubclassOf<class UFortAIPerkBase>            PerkClass;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         RandomWeight;                                      // 0x0008(0x0028)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PerkAvailabilityContainer
// 0x0018 (0x0018 - 0x0000)
struct FPerkAvailabilityContainer final
{
public:
	TArray<struct FWeightedAIPerk>                AvailablePerks;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         DesiredPerkCount;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIRuntimePerkInfo
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FFortAIRuntimePerkInfo
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortMoveConfig
// 0x0038 (0x0038 - 0x0000)
struct FFortMoveConfig final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 FocusTarget;                                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn>                  PushPawnClassOnBump;                               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.TokenType
// 0x0058 (0x0058 - 0x0000)
struct FTokenType final
{
public:
	struct FGameplayTag                           TokenIdentificationTag;                            // 0x0000(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         NumberOfTokens;                                    // 0x0008(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bAssignTokensBasedOnProximity;                     // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortAICombatTokenConsumerComponent*> Tokens;                                       // 0x0038(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UFortAICombatTokenConsumerComponent*> AwaitingTokens;                               // 0x0048(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.TokenProviderPositioningData
// 0x0130 (0x0130 - 0x0000)
struct FTokenProviderPositioningData final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEnvQuery*                              QueryTemplate;                                     // 0x0020(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         QueryUpdateFrequency;                              // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         DistanceForResultsInvalidation;                    // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MinimumDistanceBetweenPositions;                   // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bOwnerRelativePositions;                           // 0x00A0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOwnerVelocityOffset;                              // 0x00A1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         OffsetMaxLength;                                   // 0x00A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FTimerHandle                           RunQueryHandle;                                    // 0x00D0(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LastQueryLocation;                                 // 0x00D8(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Owner;                                             // 0x00F0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0x38];                                      // 0x00F8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIBotBuildingQueue
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FFortAthenaAIBotBuildingQueue final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIFormationSlotRuntime
// 0x0020 (0x0020 - 0x0000)
struct FFortAthenaAIFormationSlotRuntime final
{
public:
	struct FVector                                LocalLocation;                                     // 0x0000(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn*                              UserPawn;                                          // 0x0018(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortPingInfo
// 0x0108 (0x0108 - 0x0000)
struct FFortPingInfo final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TStructCycleFixup<struct FFortWorldMarkerData, 0x00E8, 0x08> MarkerData;                         // 0x0008(0x00E8)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x18];                                      // 0x00F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DigestedAimingCircleSettings
// 0x0168 (0x0168 - 0x0000)
struct FDigestedAimingCircleSettings final
{
public:
	bool                                          bUseAimingCircle;                                  // 0x0000(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CircleCenterOffsetZ;                               // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCircleOpeningAngleVerticalCurve;                // 0x0008(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCircleOpeningAngleVerticalCurve;                // 0x0030(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCircleOpeningAngleHorizontalCurve;              // 0x0058(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCircleOpeningAngleHorizontalCurve;              // 0x0080(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                         MinCursorRotationSpeed;                            // 0x00A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCursorRotationSpeed;                            // 0x00AC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinCursorUpdateInterval;                           // 0x00B0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCursorUpdateInterval;                           // 0x00B4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinCursorTrackingFrequency;                        // 0x00B8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCursorTrackingFrequency;                        // 0x00BC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CircleShrinkCurve;                                 // 0x00C0(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                         MinDistanceForTimeBetweenHits;                     // 0x00E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxDistanceForTimeBetweenHits;                     // 0x00EC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTimeBetweenHitsAtMinRange;                      // 0x00F0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTimeBetweenHitsAtMinRange;                      // 0x00F4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTimeBetweenHitsAtMaxRange;                      // 0x00F8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTimeBetweenHitsAtMaxRange;                      // 0x00FC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseLastTimeToHitOnWeaponChange;                   // 0x0100(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bForceMissEnabled;                                 // 0x0101(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExtraClampingDistance;                             // 0x0104(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPreventHeadshots;                                 // 0x0108(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         WeaponSpreadContributionToClampCurve;              // 0x0110(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                         KillingBlowGracePeriodAtMinRange;                  // 0x0138(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         KillingBlowGracePeriodAtMaxRange;                  // 0x013C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ExtraHitOddsCurve;                                 // 0x0140(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.AimingCircleSettings
// 0x0438 (0x0438 - 0x0000)
struct FAimingCircleSettings final
{
public:
	struct FScalableFloat                         UseAimingCircle;                                   // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CircleCenterOffsetZ;                               // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCircleOpeningAngleVerticalCurve;                // 0x0050(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCircleOpeningAngleVerticalCurve;                // 0x0078(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCircleOpeningAngleHorizontalCurve;              // 0x00A0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCircleOpeningAngleHorizontalCurve;              // 0x00C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCursorRotationSpeed;                            // 0x00F0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCursorRotationSpeed;                            // 0x0118(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCursorUpdateInterval;                           // 0x0140(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCursorUpdateInterval;                           // 0x0168(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinCursorTrackingFrequency;                        // 0x0190(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxCursorTrackingFrequency;                        // 0x01B8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CircleShrinkCurve;                                 // 0x01E0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinDistanceForTimeBetweenHits;                     // 0x0208(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxDistanceForTimeBetweenHits;                     // 0x0230(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinTimeBetweenHitsAtMinRange;                      // 0x0258(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxTimeBetweenHitsAtMinRange;                      // 0x0280(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MinTimeBetweenHitsAtMaxRange;                      // 0x02A8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxTimeBetweenHitsAtMaxRange;                      // 0x02D0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         UseLastTimeToHitOnWeaponChange;                    // 0x02F8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForceMissEnabled;                                  // 0x0320(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ExtraClampingDistance;                             // 0x0348(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         PreventHeadshots;                                  // 0x0370(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         WeaponSpreadContributionToClampCurve;              // 0x0398(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         KillingBlowGracePeriodAtMinRange;                  // 0x03C0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         KillingBlowGracePeriodAtMaxRange;                  // 0x03E8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ExtraHitOddsCurve;                                 // 0x0410(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.TargetBasedAccuracy
// 0x0118 (0x0118 - 0x0000)
struct FTargetBasedAccuracy final
{
public:
	struct FScalableFloat                         AimTrackingOffsetErrorMultiplier;                  // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimTrackingHeightOffsetErrorMultiplier;            // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimTrackingDistanceErrorMultiplier;                // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimTrackingReactionTimeMultiplier;                 // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimTrackingInterpTimeMultiplier;                   // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimTrackingInAirVelocityThresholdMultiplier;       // 0x00C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimTrackinginAirHeightDataThresholdMultiplier;     // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortBotDisablePOIRequest
// 0x0010 (0x0010 - 0x0000)
struct FFortBotDisablePOIRequest final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaAIServicePlayerBots*             CachedAIServicePlayerBots;                         // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedTargetBasedAccuracy
// 0x001C (0x001C - 0x0000)
struct FDigestedTargetBasedAccuracy final
{
public:
	float                                         AimTrackingOffsetErrorMultiplier;                  // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AimTrackingHeightOffsetErrorMultiplier;            // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AimTrackingDistanceErrorMultiplier;                // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AimTrackingReactionTimeMultiplier;                 // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AimTrackingInterpTimeMultiplier;                   // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AimTrackingInAirVelocityThresholdMultiplier;       // 0x0014(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AimTrackinginAirHeightDataThresholdMultiplier;     // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.TargetBasedAccuracyCategory
// 0x0138 (0x0138 - 0x0000)
struct FTargetBasedAccuracyCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTargetBasedAccuracy                   TargetBasedAccuracy;                               // 0x0020(0x0118)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedTargetBasedAccuracyCategory
// 0x0040 (0x0040 - 0x0000)
struct FDigestedTargetBasedAccuracyCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedTargetBasedAccuracy           TargetBasedAccuracy;                               // 0x0020(0x001C)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.WeaponAccuracy
// 0x07B0 (0x07B0 - 0x0000)
struct FWeaponAccuracy final
{
public:
	struct FScalableFloat                         MaxTrackingOffsetError;                            // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingMaxTrackingOffsetError;                   // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxTrackingDistanceFarError;                       // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingMaxTrackingDistanceFarError;              // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxTrackingDistanceNearError;                      // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingMaxTrackingDistanceNearError;             // 0x00C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TrackingDistanceNearErrorProbability;              // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingActivationProbability;                    // 0x0118(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         FiringRestrictedToTargetingActive;                 // 0x0140(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinimumDistanceForAiming;                          // 0x0168(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinimumDistanceForPawnAiming;                      // 0x0190(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         IdealAttackRange;                                  // 0x01B8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingIdealAttackRange;                         // 0x01E0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxAttackRangeFactor;                              // 0x0208(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ShouldAimAtTargetsFeet;                            // 0x0230(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ChanceToAimAtTargetsFeetWhenTimeToHit;             // 0x0258(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ShouldUseProjectileArcForAiming;                   // 0x0280(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         KeepAimingOnSameSideWhileFiring;                   // 0x02A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxTrackingHeightOffsetError;                      // 0x02D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinRotationInterpSpeed;                            // 0x02F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxRotationInterpSpeed;                            // 0x0320(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ConsiderProjectileTravelTime;                      // 0x0348(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          bOverrideAimingCircleSettings;                     // 0x0370(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAimingCircleSettings                  AimingCircleSettingsOverride;                      // 0x0378(0x0438)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.WeaponAccuracyCategorySpecialization
// 0x07D0 (0x07D0 - 0x0000)
struct FWeaponAccuracyCategorySpecialization final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FWeaponAccuracy                        WeaponAccuracy;                                    // 0x0020(0x07B0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.WeaponAccuracyCategory
// 0x07E0 (0x07E0 - 0x0000)
struct FWeaponAccuracyCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FWeaponAccuracy                        WeaponAccuracy;                                    // 0x0020(0x07B0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FWeaponAccuracyCategorySpecialization> Specializations;                            // 0x07D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.MMRSpawningInfo
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FMMRSpawningInfo final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.MMRSpawningPlayerBotsRuntimeInfo
// 0x0028 (0x0038 - 0x0010)
struct FMMRSpawningPlayerBotsRuntimeInfo final : public FMMRSpawningBaseRuntimeInfo
{
public:
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMMRSpawningInfo>               SpawningInfos;                                     // 0x0020(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.WeaponAimOffset
// 0x00C0 (0x00C0 - 0x0000)
struct FWeaponAimOffset final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimOffsetX;                                        // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimOffsetY;                                        // 0x0070(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AimOffsetZ;                                        // 0x0098(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedWeaponAccuracy
// 0x0330 (0x0330 - 0x0000)
struct FDigestedWeaponAccuracy final
{
public:
	struct FScalableFloat                         TrackingOffsetError;                               // 0x0000(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingTrackingOffsetError;                      // 0x0028(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TrackingDistanceFarError;                          // 0x0050(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingTrackingDistanceFarError;                 // 0x0078(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TrackingDistanceNearError;                         // 0x00A0(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingTrackingDistanceNearError;                // 0x00C8(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TrackingDistanceNearErrorProbability;              // 0x00F0(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingActivationProbability;                    // 0x0118(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         FiringRestrictedToTargetingActive;                 // 0x0140(0x0028)(Transient, NativeAccessSpecifierPrivate)
	float                                         MinimumDistanceForAiming;                          // 0x0168(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinimumDistanceForPawnAiming;                      // 0x016C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         IdealAttackRange;                                  // 0x0170(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TargetingIdealAttackRange;                         // 0x0174(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxAttackRange;                                    // 0x0178(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ChanceToAimAtTargetsFeet;                          // 0x017C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ChanceToAimAtTargetsFeetWhenTimeToHit;             // 0x0180(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ShouldUseProjectileArcForAiming;                   // 0x0188(0x0028)(Transient, NativeAccessSpecifierPrivate)
	bool                                          bKeepAimingOnSameSideWhileFiring;                  // 0x01B0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxTrackingHeightOffsetError;                      // 0x01B4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinRotationInterpSpeed;                            // 0x01B8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxRotationInterpSpeed;                            // 0x01BC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideAimingCircleSettings;                     // 0x01C0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bConsiderProjectileTravelTime;                     // 0x01C1(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDigestedAimingCircleSettings          AimingCircleSettingsOverride;                      // 0x01C8(0x0168)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.GameDifficultyInfo
// 0x0088 (0x0090 - 0x0008)
struct FGameDifficultyInfo final : public FTableRowBase
{
public:
	bool                                          bIsOnboarding;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Difficulty;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DifficultyMatchmakingMinOverride;                  // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DifficultyMatchmakingMaxOverride;                  // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LootLevel;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERatingsEnforcementType                       RatingsEnforcement;                                // 0x001C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequiredRating;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaximumRating;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PvPRating;                                         // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RecommendedRating;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScoreBonus;                                        // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LootTierGroup;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BonusLootTierGroup;                                // 0x0048(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DifficultyIncreaseLootTierGroup;                   // 0x0058(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumDifficultyIncreases;                            // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ThreatDisplayName;                                 // 0x0070(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   ColorParamName;                                    // 0x0080(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultPlayerLives;                                // 0x0084(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PlayerStatClampRowName;                            // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DigestedWeaponAccuracyCategorySpecialization
// 0x0350 (0x0350 - 0x0000)
struct FDigestedWeaponAccuracyCategorySpecialization final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedWeaponAccuracy                WeaponAccuracy;                                    // 0x0020(0x0330)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedWeaponAccuracyCategory
// 0x0360 (0x0360 - 0x0000)
struct FDigestedWeaponAccuracyCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedWeaponAccuracy                WeaponAccuracy;                                    // 0x0020(0x0330)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FDigestedWeaponAccuracyCategorySpecialization> Specializations;                    // 0x0350(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.BotPOI
// 0x0070 (0x0070 - 0x0000)
struct FBotPOI final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0004(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   Box;                                               // 0x0008(0x0038)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBotPOIType                                   Type;                                              // 0x0044(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        NavMeshLocations;                                  // 0x0048(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                          bIsMainPOI;                                        // 0x0058(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Usage;                                             // 0x0059(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x16];                                      // 0x005A(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DigestedWeaponAimOffset
// 0x0060 (0x0060 - 0x0000)
struct FDigestedWeaponAimOffset final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Transient, NativeAccessSpecifierPrivate)
	struct FVector                                AimOffset;                                         // 0x0048(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.TrackingOffsetModifiers
// 0x0168 (0x0168 - 0x0000)
struct FTrackingOffsetModifiers final
{
public:
	struct FScalableFloat                         CombatStartDuration;                               // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         TargetLowHealthThreshold;                          // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         Curves[0x3];                                       // 0x0050(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DistanceCurves[0x3];                               // 0x00C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         InAirHeightCurve;                                  // 0x0140(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBotBackfillSpawnRequest
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FFortBotBackfillSpawnRequest final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.TrackingOffsetModifierInfo
// 0x01B8 (0x01B8 - 0x0000)
struct FTrackingOffsetModifierInfo final
{
public:
	struct FScalableFloat                         MinSkill;                                          // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         MaxSkill;                                          // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTrackingOffsetModifiers               Modifiers;                                         // 0x0050(0x0168)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.DigestedTrackingOffsetModifierCurves
// 0x0028 (0x0028 - 0x0000)
struct FDigestedTrackingOffsetModifierCurves final
{
public:
	int32                                         Values[0xA];                                       // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortWorldConditionInSafeZone
// 0x0008 (0x0018 - 0x0010)
struct FFortWorldConditionInSafeZone final : public FWorldConditionCommonActorBase
{
public:
	struct FWorldConditionContextDataRef          ActorRef;                                          // 0x0010(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.DigestedTrackingOffsetModifiers
// 0x0120 (0x0120 - 0x0000)
struct FDigestedTrackingOffsetModifiers final
{
public:
	float                                         CombatStartDuration;                               // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TargetLowHealthThreshold;                          // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDigestedTrackingOffsetModifierCurves  Curves[0x3];                                       // 0x0008(0x0028)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDigestedTrackingOffsetModifierCurves  DistanceCurves[0x3];                               // 0x0080(0x0028)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDigestedTrackingOffsetModifierCurves  InAirHeightCurve;                                  // 0x00F8(0x0028)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.LookAtDigestedSetting
// 0x0010 (0x0010 - 0x0000)
struct FLookAtDigestedSetting final
{
public:
	float                                         LookAtDuration;                                    // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LookAtDurationDeviation;                           // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LookAtDelay;                                       // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LookAtDelayDeviation;                              // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FocusSetting
// 0x0140 (0x0140 - 0x0000)
struct FFocusSetting final
{
public:
	struct FGameplayTagQuery                      WeaponTagQuery;                                    // 0x0000(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bRequireAmmoToMatch;                               // 0x0048(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         IgnoreThreatTimeWhenNotAttacking;                  // 0x0050(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         IgnoreThreatDeviationWhenNotAttacking;             // 0x0078(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         IgnoreThreatDuration;                              // 0x00A0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         IgnoreThreatDurationDeviation;                     // 0x00C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         IgnoreThreatDistanceWhenFleeing;                   // 0x00F0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         IgnoreThreatDirectionAngleWhenFleeing;             // 0x0118(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.DigestedFocusSetting
// 0x0068 (0x0068 - 0x0000)
struct FDigestedFocusSetting final
{
public:
	struct FGameplayTagQuery                      WeaponTagQuery;                                    // 0x0000(0x0048)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bRequireAmmoToMatch;                               // 0x0048(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IgnoreThreatTimeWhenNotAttacking;                  // 0x004C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IgnoreThreatDeviationWhenNotAttacking;             // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IgnoreThreatDuration;                              // 0x0054(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IgnoreThreatDurationDeviation;                     // 0x0058(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IgnoreThreatDistanceWhenFleeing;                   // 0x005C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IgnoreThreatDirectionCosAngleWhenFleeing;          // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AttributeClamp
// 0x0040 (0x0040 - 0x0000)
struct FAttributeClamp final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EClampType                                    ClampType;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClampValue;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.PlayerClampInfo
// 0x0010 (0x0018 - 0x0008)
struct FPlayerClampInfo final : public FTableRowBase
{
public:
	TArray<struct FAttributeClamp>                AttributeClamps;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.LookAtSetting
// 0x00A0 (0x00A0 - 0x0000)
struct FLookAtSetting final
{
public:
	struct FScalableFloat                         LookAtDuration;                                    // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LookAtDurationDeviation;                           // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LookAtDelay;                                       // 0x0050(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         LookAtDelayDeviation;                              // 0x0078(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.MeleeWeaponSkill
// 0x00C8 (0x00C8 - 0x0000)
struct FMeleeWeaponSkill final
{
public:
	struct FScalableFloat                         IdealAttackDistance;                               // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         IdealAttackDistanceTolerance;                      // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinCooldownDelayBetweenMeleeAttackAttempts;        // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxCooldownDelayBetweenMeleeAttackAttempts;        // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxHeightDifferenceExtentMultiplierToAttemptMeleeAttack; // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortBotPOIExcludedZoneDataTableRow
// 0x0098 (0x00A0 - 0x0008)
struct FFortBotPOIExcludedZoneDataTableRow final : public FTableRowBase
{
public:
	struct FVector                                Location;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoxHalfSize;                                       // 0x0020(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         UsagesToExclude;                                   // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      PlaylistQuery;                                     // 0x0040(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                 MapPath;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0098(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.MeleeWeaponSkillCategory
// 0x00E8 (0x00E8 - 0x0000)
struct FMeleeWeaponSkillCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FMeleeWeaponSkill                      WeaponSkill;                                       // 0x0020(0x00C8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedMeleeWeaponSkill
// 0x0014 (0x0014 - 0x0000)
struct FDigestedMeleeWeaponSkill final
{
public:
	float                                         IdealAttackDistance;                               // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         IdealAttackDistanceTolerance;                      // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinCooldownDelayBetweenMeleeAttackAttempts;        // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxCooldownDelayBetweenMeleeAttackAttempts;        // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxHeightDifferenceExtentMultiplierToAttemptMeleeAttack; // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedMeleeWeaponSkillCategory
// 0x0038 (0x0038 - 0x0000)
struct FDigestedMeleeWeaponSkillCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedMeleeWeaponSkill              WeaponSkill;                                       // 0x0020(0x0014)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIBotBuildDescriptor
// 0x0010 (0x0010 - 0x0000)
struct FFortAthenaAIBotBuildDescriptor final
{
public:
	struct FIntVector                             Location;                                          // 0x0000(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrientedConstructionBuildingType             BuildingType;                                      // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AthenaFortAIBotWeightedBuildingList
// 0x0038 (0x0038 - 0x0000)
struct FAthenaFortAIBotWeightedBuildingList final
{
public:
	struct FScalableFloat                         Weight;                                            // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortAthenaAIBotBuildDescriptor> BuildDescriptors;                                 // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AthenaFortAIBotDigestedWeightedBuildingList
// 0x0018 (0x0018 - 0x0000)
struct FAthenaFortAIBotDigestedWeightedBuildingList final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortAthenaAIBotBuildDescriptor> BuildDescriptors;                                 // 0x0008(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.MMRSpawningBracketNPCDataTableRow
// 0x0008 (0x0018 - 0x0010)
struct FMMRSpawningBracketNPCDataTableRow final : public FMMRSpawningBracketBaseDataTableRow
{
public:
	float                                         Skill;                                             // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIBotRunTimeCustomizationData
// 0x000C (0x000C - 0x0000)
struct FFortAthenaAIBotRunTimeCustomizationData final
{
public:
	struct FGameplayTag                           PredefinedCosmeticSetTag;                          // 0x0000(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CullDistanceSquared;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckForOverlaps;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasCustomSquadId;                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         CustomSquadId;                                     // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DigestedEvasiveManeuverSkillSettings
// 0x0058 (0x0058 - 0x0000)
struct FDigestedEvasiveManeuverSkillSettings final
{
public:
	float                                         JumpDelay;                                         // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         JumpRandomDeviationDelay;                          // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CrouchDelay;                                       // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CrouchRandomDeviationDelay;                        // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DodgeDelay;                                        // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DodgeRandomDeviationDelay;                         // 0x0014(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CrouchOverlayWeight;                               // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         JumpOverlayWeight;                                 // 0x001C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         NoOverlayWeight;                                   // 0x0020(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DodgeWeight;                                       // 0x0024(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DodgeJumpWeight;                                   // 0x0028(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DodgeDistanceMax;                                  // 0x002C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DodgeDistanceMin;                                  // 0x0030(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CrouchTimeMax;                                     // 0x0034(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CrouchTimeMin;                                     // 0x0038(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugName;                                         // 0x0040(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.EvasiveManeuverSkillSettings
// 0x0258 (0x0258 - 0x0000)
struct FEvasiveManeuverSkillSettings final
{
public:
	struct FScalableFloat                         CrouchOverlayWeight;                               // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         JumpOverlayWeight;                                 // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         NoOverlayWeight;                                   // 0x0050(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeWeight;                                       // 0x0078(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeJumpWeight;                                   // 0x00A0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         JumpDelay;                                         // 0x00C8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         JumpRandomDeviationDelay;                          // 0x00F0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrouchDelay;                                       // 0x0118(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrouchRandomDeviationDelay;                        // 0x0140(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeDelay;                                        // 0x0168(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeRandomDeviationDelay;                         // 0x0190(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeDistanceMax;                                  // 0x01B8(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         DodgeDistanceMin;                                  // 0x01E0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrouchTimeMax;                                     // 0x0208(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         CrouchTimeMin;                                     // 0x0230(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.DigestedEvasiveManeuverSkillSettingsSpecialization
// 0x00C0 (0x00C0 - 0x0000)
struct FDigestedEvasiveManeuverSkillSettingsSpecialization final
{
public:
	float                                         OddsToBeUsed;                                      // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxDuration;                                       // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxDurationRandomDeviation;                        // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Cooldown;                                          // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CooldownRandomDeviation;                           // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DistanceMinSquared;                                // 0x0014(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DistanceMaxSquared;                                // 0x0018(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      WeaponTagQuery;                                    // 0x0020(0x0048)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedEvasiveManeuverSkillSettings  EvasiveManeuverSkillSettings;                      // 0x0068(0x0058)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.EvasiveManeuverSkillSettingsSpecialization
// 0x03C8 (0x03C8 - 0x0000)
struct FEvasiveManeuverSkillSettingsSpecialization final
{
public:
	struct FScalableFloat                         OddsToBeUsed;                                      // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxDuration;                                       // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxDurationRandomDeviation;                        // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         Cooldown;                                          // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CooldownRandomDeviation;                           // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FString                                 DebugName;                                         // 0x00C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DistanceMin;                                       // 0x00D8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DistanceMax;                                       // 0x0100(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      WeaponTagQuery;                                    // 0x0128(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FEvasiveManeuverSkillSettings          EvasiveManeuverSkillSettings;                      // 0x0170(0x0258)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortBotHealingItems
// 0x0070 (0x0070 - 0x0000)
struct FFortBotHealingItems final
{
public:
	struct FScalableFloat                         UseItemResourceThreshold;                          // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      ItemTagQuery;                                      // 0x0028(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBotHealingItemsList
// 0x0010 (0x0010 - 0x0000)
struct FFortBotHealingItemsList final
{
public:
	TArray<struct FFortBotHealingItems>           HealthItems;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBotDigestedHealingItemsList
// 0x0010 (0x0010 - 0x0000)
struct FFortBotDigestedHealingItemsList final
{
public:
	TArray<struct FFortBotDigestedHealingItems>   HealthItems;                                       // 0x0000(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBotHealingItemsSpec
// 0x0058 (0x0058 - 0x0000)
struct FFortBotHealingItemsSpec final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortBotHealingItemsList               HealthItemsList;                                   // 0x0048(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.FortBotDigestedHealingItemsSpec
// 0x0058 (0x0058 - 0x0000)
struct FFortBotDigestedHealingItemsSpec final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortBotDigestedHealingItemsList       HealthItemsList;                                   // 0x0048(0x0010)(Transient, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.BotEquipWeaponInfo
// 0x0098 (0x0098 - 0x0000)
struct FBotEquipWeaponInfo final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DistanceEffectivenessWithThreat;                   // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DistanceEffectivenessNoThreat;                     // 0x0070(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedBotEquipWeaponInfo
// 0x0098 (0x0098 - 0x0000)
struct FDigestedBotEquipWeaponInfo final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DistanceEffectivenessWithThreat;                   // 0x0048(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DistanceEffectivenessNoThreat;                     // 0x0070(0x0028)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.WeaponAmmoCheat
// 0x0058 (0x0058 - 0x0000)
struct FWeaponAmmoCheat final
{
public:
	struct FGameplayTag                           WeaponTag;                                         // 0x0000(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HasInfiniteAmmo;                                   // 0x0008(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         CheckLoadedAmmoForInfiniteAmmo;                    // 0x0030(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.BotKnockbackSettings
// 0x00C0 (0x00C0 - 0x0000)
struct FBotKnockbackSettings final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ShouldAllowCharacterToBeLaunched;                  // 0x0048(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ShouldStopActiveMovement;                          // 0x0070(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         IgnoreMoveInputDuration;                           // 0x0098(0x0028)(Edit, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedBotKnockbackSettings
// 0x0050 (0x0050 - 0x0000)
struct FDigestedBotKnockbackSettings final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Transient, NativeAccessSpecifierPrivate)
	bool                                          bShouldAllowCharacterToBeLaunched;                 // 0x0048(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShouldStopActiveMovement;                         // 0x0049(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IgnoreMoveInputDuration;                           // 0x004C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.AlertLevelInfo
// 0x0010 (0x0010 - 0x0000)
struct FAlertLevelInfo final
{
public:
	TArray<class UAISenseConfig*>                 SensesConfig;                                      // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedPerceptionStateSettings
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FDigestedPerceptionStateSettings final
{
public:
	float                                         ForgetTime;                                        // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ForgetTimeDeviation;                               // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ForgetDistance;                                    // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ForgetDistanceDeviation;                           // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10[0x28];                                      // 0x0010(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.DigestedTokenTargetWeightHeuristic
// 0x0050 (0x0050 - 0x0000)
struct FDigestedTokenTargetWeightHeuristic final
{
public:
	struct FGameplayTagQuery                      TokenTagQuery;                                     // 0x0000(0x0048)(Transient, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.SoundPerceptionDigestedSetting
// 0x000C (0x000C - 0x0000)
struct FSoundPerceptionDigestedSetting final
{
public:
	float                                         Loudness;                                          // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IgnoreTime;                                        // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverrideReactionDistanceSq;                        // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.SightReactionSpecialization
// 0x0070 (0x0070 - 0x0000)
struct FSightReactionSpecialization final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SightMinAdditionTime;                              // 0x0020(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SightMaxAdditionTime;                              // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedSightReactionSpecialization
// 0x0070 (0x0070 - 0x0000)
struct FDigestedSightReactionSpecialization final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SightMinAdditionTime;                              // 0x0020(0x0028)(Transient, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SightMaxAdditionTime;                              // 0x0048(0x0028)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortAthenaAIBotDigestedTargetHeuristicSettings
// 0x01A0 (0x01A0 - 0x0000)
struct FFortAthenaAIBotDigestedTargetHeuristicSettings final
{
public:
	TArray<struct FDigestedTokenTargetWeightHeuristic> TokenWeights;                                 // 0x0000(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FDigestedPerceptionStateSettings       PerceptionStateSettings[0x6];                      // 0x0010(0x0038)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                         ThreatDamageWeight;                                // 0x0160(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ThreatDamageWeightMultiplier;                      // 0x0164(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ThreatTimeSinceLastDamageMultiplier;               // 0x0168(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                         ThreatLoFWeight;                                   // 0x0190(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DBNOWeightModifier;                                // 0x0194(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GameParticipantWeightModifier;                     // 0x0198(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIBotDigestedTargetHeuristicSettingsSpecialization
// 0x01E8 (0x01E8 - 0x0000)
struct FFortAthenaAIBotDigestedTargetHeuristicSettingsSpecialization final
{
public:
	struct FGameplayTagQuery                      TargetTagQuery;                                    // 0x0000(0x0048)(Transient, NativeAccessSpecifierPrivate)
	struct FFortAthenaAIBotDigestedTargetHeuristicSettings Settings;                                 // 0x0048(0x01A0)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.PerceptionStateSettings
// 0x00C8 (0x00C8 - 0x0000)
struct FPerceptionStateSettings final
{
public:
	struct FScalableFloat                         ForgetTime;                                        // 0x0000(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForgetTimeDeviation;                               // 0x0028(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForgetDistance;                                    // 0x0050(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForgetDistanceDeviation;                           // 0x0078(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ThreatDistanceWeight;                              // 0x00A0(0x0028)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.SoundPerceptionSetting
// 0x0078 (0x0078 - 0x0000)
struct FSoundPerceptionSetting final
{
public:
	struct FScalableFloat                         Loudness;                                          // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         IgnoreTime;                                        // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         OverrideReactionDistance;                          // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.TokenTargetWeightHeuristic
// 0x0070 (0x0070 - 0x0000)
struct FTokenTargetWeightHeuristic final
{
public:
	struct FGameplayTagQuery                      TokenTagQuery;                                     // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Weight;                                            // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAIBotTargetHeuristicSettings
// 0x0358 (0x0358 - 0x0000)
struct FFortAthenaAIBotTargetHeuristicSettings final
{
public:
	struct FPerceptionStateSettings               ThreatSeeingPerceptionSettings;                    // 0x0000(0x00C8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPerceptionStateSettings               ThreatLKPPerceptionSettings;                       // 0x00C8(0x00C8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPerceptionStateSettings               ThreatAlertedPerceptionSettings;                   // 0x0190(0x00C8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ThreatDamageWeight;                                // 0x0258(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ThreatDamageWeightMultiplier;                      // 0x0280(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ThreatTimeSinceLastDamageMultiplier;               // 0x02A8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ThreatLoFWeight;                                   // 0x02D0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         DBNOWeightModifier;                                // 0x02F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         GameParticipantWeightModifier;                     // 0x0320(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FTokenTargetWeightHeuristic>    TokenWeights;                                      // 0x0348(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAIBotTargetHeuristicSettingsSpecialization
// 0x03A0 (0x03A0 - 0x0000)
struct FFortAthenaAIBotTargetHeuristicSettingsSpecialization final
{
public:
	struct FGameplayTagQuery                      TargetTagQuery;                                    // 0x0000(0x0048)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaAIBotTargetHeuristicSettings Settings;                                         // 0x0048(0x0358)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.PlaystyleSwitchToAggressiveDataDigested
// 0x0058 (0x0058 - 0x0000)
struct FPlaystyleSwitchToAggressiveDataDigested final
{
public:
	struct FGameplayTagQuery                      TagQueryToMatch;                                   // 0x0000(0x0048)(Transient, NativeAccessSpecifierPrivate)
	float                                         TurnToAggressiveMinimumDistanceSquared;            // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TurnToAggressiveTime;                              // 0x004C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DamageThresholdToSwitchToAggressive;               // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SwitchBackToDefensivePreventionTime;               // 0x0054(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.PlaystyleSwitchToAggressiveData
// 0x00E8 (0x00E8 - 0x0000)
struct FPlaystyleSwitchToAggressiveData final
{
public:
	struct FGameplayTagQuery                      TagQueryToMatch;                                   // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TurnToAggressiveMinimumDistance;                   // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TurnToAggressiveTime;                              // 0x0070(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SwitchBackToDefensivePreventionTime;               // 0x0098(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DamageThresholdToSwitchToAggressive;               // 0x00C0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FiringPattern
// 0x00D0 (0x00D0 - 0x0000)
struct FFiringPattern final
{
public:
	struct FScalableFloat                         MinRange;                                          // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MaxRange;                                          // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         HoldTimeDeviation;                                 // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         PreventFireTimeDeviation;                          // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         FiringPatternHysteresis;                           // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCurveFloat*                            FiringPatternCurve;                                // 0x00C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.RangedWeaponSkill
// 0x0188 (0x0188 - 0x0000)
struct FRangedWeaponSkill final
{
public:
	struct FScalableFloat                         DelayBetweenShots;                                 // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DelayDeviationTimeBetweenShots;                    // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TriggerHoldDuration;                               // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TriggerHoldDeviationTime;                          // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         DelayBeforeFirstShot;                              // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ShotDelayAfterTargeting;                           // 0x00C8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ShotDelayAfterIncomingLethality;                   // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFiringPattern>                 TargetInAirFiringPatterns;                         // 0x0118(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFiringPattern>                 FiringPatterns;                                    // 0x0128(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InterruptReloadToShootOdds;                        // 0x0138(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         StopFiringWhenTargetWillDieOdds;                   // 0x0160(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.RangedWeaponSkillCategorySpecialization
// 0x01A8 (0x01A8 - 0x0000)
struct FRangedWeaponSkillCategorySpecialization final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkill                     WeaponSkill;                                       // 0x0020(0x0188)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.RangedWeaponSkillCategory
// 0x01B8 (0x01B8 - 0x0000)
struct FRangedWeaponSkillCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkill                     WeaponSkill;                                       // 0x0020(0x0188)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FRangedWeaponSkillCategorySpecialization> Specializations;                         // 0x01A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.DigestedRangedWeaponSkillCategory
// 0x0078 (0x0078 - 0x0000)
struct FDigestedRangedWeaponSkillCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FDigestedRangedWeaponSkill             WeaponSkill;                                       // 0x0020(0x0048)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FDigestedRangedWeaponSkillCategorySpecialization> Specializations;                 // 0x0068(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.VehiclePIDController
// 0x0078 (0x0078 - 0x0000)
struct FVehiclePIDController final
{
public:
	struct FScalableFloat                         KP;                                                // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         KI;                                                // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         KD;                                                // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.VehicleAppendToPath
// 0x0050 (0x0050 - 0x0000)
struct FVehicleAppendToPath final
{
public:
	struct FScalableFloat                         MinimumPathLengthToEndOfPath;                      // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MinTimeSinceLastAppend;                            // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.VehicleTurnInPlace
// 0x00D0 (0x00D0 - 0x0000)
struct FVehicleTurnInPlace final
{
public:
	struct FScalableFloat                         MovingAngleBegin;                                  // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MovingAngleEnd;                                    // 0x0028(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         IdleAngleBegin;                                    // 0x0050(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         IdleAngleEnd;                                      // 0x0078(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MinMovingSpeed;                                    // 0x00A0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bMissedPathPointReverse;                           // 0x00C8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.VehicleDriving
// 0x0328 (0x0328 - 0x0000)
struct FVehicleDriving final
{
public:
	bool                                          bCanTurnInPlace;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVehicleTurnInPlace                    TurnInPlace;                                       // 0x0008(0x00D0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ReverseSwapLeftAndRight;                           // 0x00D8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinimumForwardPIDValueForStopping;                 // 0x0100(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinimumDistanceLeftForBoosting;                    // 0x0128(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FVehiclePIDController                  ForwardPIDController;                              // 0x0150(0x0078)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FVehiclePIDController                  SteeringPIDController;                             // 0x01C8(0x0078)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                          bAvoidanceEnabled;                                 // 0x0240(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPreventTurningWhenStopping;                       // 0x0241(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      AvoidanceTagQuery;                                 // 0x0248(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         NavigationOffsetFromObstacles;                     // 0x0290(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FVehicleAppendToPath                   AppendToPath;                                      // 0x02B8(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  ModsTags;                                          // 0x0308(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.VehicleDrivingCategory
// 0x0348 (0x0348 - 0x0000)
struct FVehicleDrivingCategory final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FVehicleDriving                        VehicleDriving;                                    // 0x0020(0x0328)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortAthenaAIObjectTrackerQuerySimplified
// 0x0080 (0x0080 - 0x0000)
struct FFortAthenaAIObjectTrackerQuerySimplified
{
public:
	EFortAthenaAIObjectTrackerQueryOrder          PickOrder;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustBeUsable;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      RequiredTagsQuery;                                 // 0x0008(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                MaximumDistance;                                   // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayspace*                         RequiredToBeInPlayspace;                           // 0x0068(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAthenaAIObjectTrackerQuery
// 0x0018 (0x0098 - 0x0080)
struct FFortAthenaAIObjectTrackerQuery final : public FFortAthenaAIObjectTrackerQuerySimplified
{
public:
	struct FVector                                StartLocation;                                     // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortSmartObjectCustomVerb
// 0x000C (0x000C - 0x0000)
struct FFortSmartObjectCustomVerb final
{
public:
	struct FGameplayTag                           VerbTag;                                           // 0x0000(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InstigatorName;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActivityName;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortSmartObjectSlotDefinitionData
// 0x0028 (0x0030 - 0x0008)
struct FFortSmartObjectSlotDefinitionData final : public FSmartObjectDefinitionData
{
public:
	float                                         CooldownOnFinished;                                // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CooldownOnInterrupted;                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Radius;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SlotCooldownOnFinished;                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SlotCooldownOnInterrupted;                         // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFortAthenaSmartObjectPriority                Priority;                                          // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFortAthenaSmartObjectUrgency                 Urgency;                                           // 0x001D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortSmartObjectCustomVerb>     CustomVerbs;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.FortAthenaSmartObjectSlotStateData
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FFortAthenaSmartObjectSlotStateData final : public FSmartObjectSlotStateData
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.SmartObjectRecentlyUsed
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSmartObjectRecentlyUsed final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIRuntimeParametersSmartObjectActivity
// 0x00B0 (0x00B0 - 0x0000)
struct FAIRuntimeParametersSmartObjectActivity final
{
public:
	struct FAIRuntimeParametersSmartObjectActivityCondition SmartObjectActivityCondition;            // 0x0000(0x0048)(Transient, NativeAccessSpecifierPublic)
	struct FAIRuntimeParametersSmartObjectActivityConfig SmartObjectActivityConfig;                  // 0x0048(0x0058)(Transient, NativeAccessSpecifierPublic)
	uint8                                         bEnabled : 1;                                      // 0x00A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActivityId;                                        // 0x00A4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastUseTimestamp;                                  // 0x00A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Cooldown;                                          // 0x00AC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAISmartObjectActivityConfig
// 0x00C0 (0x00C0 - 0x0000)
struct FFortAthenaAISmartObjectActivityConfig final
{
public:
	struct FGameplayTagQuery                      ActivityRequirements;                              // 0x0000(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MaxDetectionRadius;                                // 0x0048(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ActivityCooldownOnFinished;                        // 0x0070(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ActivityCooldownOnInterrupted;                     // 0x0098(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.SpawnerDataComponentAffiliationSharedBBConfiguration
// 0x0040 (0x0040 - 0x0000)
struct FSpawnerDataComponentAffiliationSharedBBConfiguration final
{
public:
	struct FGameplayTag                           FactionTag;                                        // 0x0000(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaximumDistance;                                   // 0x0008(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           SharedBlackboardTag;                               // 0x0030(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardData*                        SharedBlackboard;                                  // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.EscalateBehaviorSettings
// 0x0198 (0x0198 - 0x0000)
struct FEscalateBehaviorSettings final
{
public:
	struct FScalableFloat                         EscalateBehaviorEnabled;                           // 0x0000(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         EscalateMeterFillTime;                             // 0x0028(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         EscalateVisionAngleCutoff;                         // 0x0050(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         EscalatePlayerOnPathForwardDistance;               // 0x0078(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         EscalatePlayerOnPathPerpindicularDistance;         // 0x00A0(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         EscalatePlayerOnPathZCutoff;                       // 0x00C8(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         EscalatePlayerAimingAngleCutoff;                   // 0x00F0(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         StopEscalateRequiredDistance;                      // 0x0118(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         StopEscalateRequiredTime;                          // 0x0140(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         StopEscalateAngleCutoff;                           // 0x0168(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           EscalateDefaultSpeechTag;                          // 0x0190(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           EscalateAimingSpeechTag;                           // 0x0194(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.ConstructionBuildingInfo
// 0x0018 (0x0018 - 0x0000)
struct FConstructionBuildingInfo final
{
public:
	TSubclassOf<class ABuildingSMActor>           BuildingActorClass[0x3];                           // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.ConstructionBuildingList
// 0x0090 (0x0090 - 0x0000)
struct FConstructionBuildingList final
{
public:
	struct FConstructionBuildingInfo              BuildingList[0x6];                                 // 0x0000(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAIWeightedCosmeticLoadout
// 0x0158 (0x0158 - 0x0000)
struct FFortAthenaAIWeightedCosmeticLoadout final
{
public:
	TStructCycleFixup<struct FFortAthenaLoadout, 0x0130, 0x08> CosmeticLoadout;                      // 0x0000(0x0130)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                         Weight;                                            // 0x0130(0x0028)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.TeleportSettings
// 0x0038 (0x0038 - 0x0000)
struct FTeleportSettings final
{
public:
	struct FScalableFloat                         CheckTeleportConditionsTimeInterval;               // 0x0000(0x0028)(Edit, NativeAccessSpecifierPublic)
	float                                         TeleportRange;                                     // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeNeededOutsideTeleportRange;                    // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TeleportAbilityTag;                                // 0x0030(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.PickupTagConvertInfo
// 0x0048 (0x0048 - 0x0000)
struct FPickupTagConvertInfo final
{
public:
	struct FGameplayTagContainer                  PickupTags;                                        // 0x0000(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScalableFloat                         ConvertDamage;                                     // 0x0020(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AILootInfoRowEntry
// 0x0110 (0x0110 - 0x0000)
struct FAILootInfoRowEntry final
{
public:
	struct FGameplayTagQuery                      OptionalTagQuery;                                  // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      OptionalPlaylistTagQuery;                          // 0x0048(0x0048)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bShouldDropInventoryOnDeath : 1;                   // 0x0090(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShouldDropLootOnDeath : 1;                        // 0x0090(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShouldGrantLootOnSpawn : 1;                       // 0x0090(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShouldBotPickRandomLootTier : 1;                  // 0x0090(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LootTiers;                                         // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UFortItemDefinition>> ItemClassToDropOnDeathInsteadOfGrant;             // 0x00A8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> ItemToDropOnDeathInsteadOfGrant;               // 0x00B8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      ItemTagQueryToDropOnDeathInsteadOfGrant;           // 0x00C8(0x0048)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortAthenaAILootInfoDataTableRow
// 0x0010 (0x0018 - 0x0008)
struct FFortAthenaAILootInfoDataTableRow final : public FTableRowBase
{
public:
	TArray<struct FAILootInfoRowEntry>            LootDroppingBehaviors;                             // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.WeightedAIInventoryLoadout
// 0x0038 (0x0038 - 0x0000)
struct FWeightedAIInventoryLoadout final
{
public:
	struct FScalableFloat                         Weight;                                            // 0x0000(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FItemAndCount>                  Items;                                             // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortBotTargetInfo
// 0x0148 (0x0148 - 0x0000)
struct FFortBotTargetInfo final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SupportingActor;                                   // 0x0010(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         AlternateTargetingActor;                           // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x110];                                     // 0x0038(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBotThreatActorInfo
// 0x0018 (0x0018 - 0x0000)
struct FFortBotThreatActorInfo final
{
public:
	class AActor*                                 ThreatActor;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBotTargetHandler
// 0x0040 (0x0040 - 0x0000)
struct FFortBotTargetHandler final
{
public:
	TArray<struct FFortBotTargetInfo>             Targets;                                           // 0x0000(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x30];                                      // 0x0010(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.BotDelayedStimulus
// 0x0068 (0x0068 - 0x0000)
struct FBotDelayedStimulus final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x60];                                       // 0x0008(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.BotPerceivedSound
// 0x0028 (0x0028 - 0x0000)
struct FBotPerceivedSound final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x20];                                       // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.PatrolPathLeash
// 0x0060 (0x0060 - 0x0000)
struct FPatrolPathLeash final
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasInnerLeash;                                    // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InnerWidth;                                        // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InnerHeight;                                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.LeashInfoOverride
// 0x0008 (0x0008 - 0x0000)
struct FLeashInfoOverride final
{
public:
	float                                         LeashInnerRadius;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeashOuterRadius;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.QueryableTagContainerEntry
// 0x0068 (0x0068 - 0x0000)
struct FQueryableTagContainerEntry final
{
public:
	struct FGameplayTagQuery                      Query;                                             // 0x0000(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0048(0x0020)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.QueryableTagContainer
// 0x0010 (0x0010 - 0x0000)
struct FQueryableTagContainer final
{
public:
	TArray<struct FQueryableTagContainerEntry>    Entries;                                           // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.TrapDetectionState
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FTrapDetectionState final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIRuntimePerkInfo_Bunker
// 0x0028 (0x0068 - 0x0040)
struct FFortAIRuntimePerkInfo_Bunker final : public FFortAIRuntimePerkInfo
{
public:
	float                                         OddsToBeUsedAgainstUnknownThreat;                  // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OddsToUseRoofBuilding;                             // 0x0044(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OddsToBuildForwardRamp;                            // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitialBuildDelay;                                 // 0x004C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SamePieceBuildDelay;                               // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SamePieceBuildDelayRandomDeviation;                // 0x0054(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DifferentPieceBuildDelay;                          // 0x0058(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DifferentPieceBuildDelayRandomDeviation;           // 0x005C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OddsToSelectRandomMaterial;                        // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortAIRuntimePerkInfo_EvasiveManeuvers
// 0x0060 (0x00A0 - 0x0040)
struct FFortAIRuntimePerkInfo_EvasiveManeuvers final : public FFortAIRuntimePerkInfo
{
public:
	uint8                                         Pad_40[0x58];                                      // 0x0040(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceMinSquared;                                // 0x0098(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceMaxSquared;                                // 0x009C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};

// ScriptStruct FortniteAI.BotDebugInfo
// 0x0038 (0x0038 - 0x0000)
struct FBotDebugInfo final
{
public:
	int32                                         BotID;                                             // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadID;                                           // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BTActiveTasks;                                     // 0x0008(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlertLevel                                   AlertLevel;                                        // 0x0018(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0020(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.BotPOIDebugInfo
// 0x0060 (0x0060 - 0x0000)
struct FBotPOIDebugInfo final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0004(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   Box;                                               // 0x0008(0x0038)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0040(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBotPOIType                                   Type;                                              // 0x0044(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Usage;                                             // 0x0045(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NavMeshLocationsCount;                             // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMainPOI;                                        // 0x004C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugInfo;                                         // 0x0050(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.BotPOIExcludedZonesDebugInfo
// 0x0040 (0x0040 - 0x0000)
struct FBotPOIExcludedZonesDebugInfo final
{
public:
	struct FBox                                   Box;                                               // 0x0000(0x0038)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         UsagesToExclude;                                   // 0x0038(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.ClientAIPlayerList
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FClientAIPlayerList final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AIPopulationCountSnapshot
// 0x0014 (0x0014 - 0x0000)
struct FAIPopulationCountSnapshot final
{
public:
	int32                                         NumTotalSpawnedBots;                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumAliveBots;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumAlivePlayerBots;                                // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumAliveNPCBots;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumAliveAIPawns;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.AthenaAIServiceGroupInfo
// 0x0040 (0x0040 - 0x0000)
struct FAthenaAIServiceGroupInfo final
{
public:
	int32                                         GroupId;                                           // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPawnComponent_AIGroup*             GroupLeader;                                       // 0x0008(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortPawnComponent_AIGroup*>     GroupMembers;                                      // 0x0010(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  GroupTags;                                         // 0x0020(0x0020)(Transient, NativeAccessSpecifierPrivate)
};

// ScriptStruct FortniteAI.CachedSupplyDrop
// 0x0028 (0x0028 - 0x0000)
struct FCachedSupplyDrop final
{
public:
	class AFortAthenaSupplyDrop*                  supplydrop;                                        // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInOctree;                                         // 0x0008(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastLocation;                                      // 0x0010(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.MovingLootInfo
// 0x0018 (0x0018 - 0x0000)
struct FMovingLootInfo final
{
public:
	struct FVector                                LastLocationInOctree;                              // 0x0000(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.ClusterLoot
// 0x0040 (0x0040 - 0x0000)
struct FClusterLoot final
{
public:
	struct FBox                                   ClusterBox;                                        // 0x0000(0x0038)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x0038(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortBotClusterLootWeightDataTableRow
// 0x0008 (0x0010 - 0x0008)
struct FFortBotClusterLootWeightDataTableRow final : public FTableRowBase
{
public:
	struct FGameplayTag                           tag;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Weight;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.BattleBusPOI
// 0x0090 (0x0090 - 0x0000)
struct FBattleBusPOI final
{
public:
	struct FScalableFloat                         IsEnabled;                                         // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      POIFilterQuery;                                    // 0x0028(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class AFortPoiVolume*>                 ValidPOIVolumeList;                                // 0x0070(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x10];                                      // 0x0080(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.NavigationPOI
// 0x0080 (0x0080 - 0x0000)
struct FNavigationPOI final
{
public:
	struct FScalableFloat                         IsEnabled;                                         // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      POIFilterQuery;                                    // 0x0028(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class AFortPoiVolume*>                 ValidPOIVolumeList;                                // 0x0070(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.CachedPOIVolumeLocations
// 0x0020 (0x0020 - 0x0000)
struct FCachedPOIVolumeLocations final
{
public:
	class AFortPoiVolume*                         POIVolume;                                         // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortServerBotInfo
// 0x0018 (0x0018 - 0x0000)
struct FFortServerBotInfo final
{
public:
	class AFortAthenaAIBotController*             BotController;                                     // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPoiVolume*                         SelectedPoiVolume;                                 // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.UpdateBotSkillInfo
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FUpdateBotSkillInfo final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.AthenaAITrackedZone
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FAthenaAITrackedZone final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.BotPOIExcludedZone
// 0x0040 (0x0040 - 0x0000)
struct FBotPOIExcludedZone final
{
public:
	struct FBox                                   Box;                                               // 0x0000(0x0038)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         UsagesToExclude;                                   // 0x0038(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct FortniteAI.FortWorldConditionAthenaGamePhase
// 0x0008 (0x0018 - 0x0010)
struct FFortWorldConditionAthenaGamePhase final : public FWorldConditionCommonBase
{
public:
	EAthenaGamePhaseStep                          PhaseStep;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SafeZonePhase;                                     // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.FortWorldConditionPerceivedHostilePlayer
// 0x0008 (0x0018 - 0x0010)
struct FFortWorldConditionPerceivedHostilePlayer final : public FWorldConditionCommonActorBase
{
public:
	struct FWorldConditionContextDataRef          ActorRef;                                          // 0x0010(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct FortniteAI.GameRewardOverridesInfo
// 0x0038 (0x0040 - 0x0008)
struct FGameRewardOverridesInfo final : public FTableRowBase
{
public:
	class FString                                 MissionName;                                       // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideRewardsTag;                                // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LootLevel;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LootTierGroup;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

