#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicMediaBasePlayer

#include "Basic.hpp"

#include "EpicMediaBasePlayer_classes.hpp"
#include "EpicMediaBasePlayer_parameters.hpp"


namespace SDK
{

// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.ClearSyncTimes
// (Final, Native, Public, BlueprintCallable)

void UEpicBaseStreamingVideo::ClearSyncTimes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "ClearSyncTimes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.GetLicensedAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicBaseStreamingVideo::GetLicensedAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "GetLicensedAudio");

	Params::EpicBaseStreamingVideo_GetLicensedAudio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.GetMediaPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaPlayer*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaPlayer* UEpicBaseStreamingVideo::GetMediaPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "GetMediaPlayer");

	Params::EpicBaseStreamingVideo_GetMediaPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.GetMediaPlayerOptions
// (Native, Public)
// Parameters:
// struct FMediaPlayerOptions              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMediaPlayerOptions UEpicBaseStreamingVideo::GetMediaPlayerOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "GetMediaPlayerOptions");

	Params::EpicBaseStreamingVideo_GetMediaPlayerOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.GetMediaSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEpicStreamMediaSource*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEpicStreamMediaSource* UEpicBaseStreamingVideo::GetMediaSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "GetMediaSource");

	Params::EpicBaseStreamingVideo_GetMediaSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.GetSoundComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaSoundComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSoundComponent* UEpicBaseStreamingVideo::GetSoundComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "GetSoundComponent");

	Params::EpicBaseStreamingVideo_GetSoundComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.HandleLicensedAudioTreatmentChanged
// (Final, Native, Private)
// Parameters:
// EUCPTypes                               UCPType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::HandleLicensedAudioTreatmentChanged(EUCPTypes UCPType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "HandleLicensedAudioTreatmentChanged");

	Params::EpicBaseStreamingVideo_HandleLicensedAudioTreatmentChanged Parms{};

	Parms.UCPType = UCPType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.HandleMediaClosed
// (Final, Native, Protected)

void UEpicBaseStreamingVideo::HandleMediaClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "HandleMediaClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.HandleMediaEndReached
// (Final, Native, Protected)

void UEpicBaseStreamingVideo::HandleMediaEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "HandleMediaEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.HandleMediaOpened
// (Final, Native, Protected)
// Parameters:
// const class FString&                    OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::HandleMediaOpened(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "HandleMediaOpened");

	Params::EpicBaseStreamingVideo_HandleMediaOpened Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.HandleMediaOpenedFailed
// (Final, Native, Protected)
// Parameters:
// const class FString&                    FailedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::HandleMediaOpenedFailed(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "HandleMediaOpenedFailed");

	Params::EpicBaseStreamingVideo_HandleMediaOpenedFailed Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.HandleMediaResumed
// (Native, Protected)

void UEpicBaseStreamingVideo::HandleMediaResumed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "HandleMediaResumed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.Init
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMediaTexture*                    InVideoTexture                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMediaPlayer*                     InMediaPlayer                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEpicStreamMediaSource*           InMediaSource                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCDNFailover                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicBaseStreamingVideo::Init(class UMediaTexture* InVideoTexture, class UMediaPlayer* InMediaPlayer, class UEpicStreamMediaSource* InMediaSource, bool InCDNFailover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "Init");

	Params::EpicBaseStreamingVideo_Init Parms{};

	Parms.InVideoTexture = InVideoTexture;
	Parms.InMediaPlayer = InMediaPlayer;
	Parms.InMediaSource = InMediaSource;
	Parms.InCDNFailover = InCDNFailover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.MethodDebounce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDebounce                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::MethodDebounce(bool bDebounce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "MethodDebounce");

	Params::EpicBaseStreamingVideo_MethodDebounce Parms{};

	Parms.bDebounce = bDebounce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.OnFailedURL
// (Native, Protected)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::OnFailedURL(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "OnFailedURL");

	Params::EpicBaseStreamingVideo_OnFailedURL Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.OnSuccessfulURL
// (Native, Protected)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::OnSuccessfulURL(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "OnSuccessfulURL");

	Params::EpicBaseStreamingVideo_OnSuccessfulURL Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.Open
// (Native, Public, BlueprintCallable)
// Parameters:
// const struct FMediaPlayerOptions&       InMediaOptions                                         (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicBaseStreamingVideo::Open(const struct FMediaPlayerOptions& InMediaOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "Open");

	Params::EpicBaseStreamingVideo_Open Parms{};

	Parms.InMediaOptions = std::move(InMediaOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.Release
// (Native, Public, BlueprintCallable)

void UEpicBaseStreamingVideo::Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "Release");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.RetryOnError
// (Final, Native, Protected)
// Parameters:
// EBaseMediaTerminalErrorReason           Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicBaseStreamingVideo::RetryOnError(EBaseMediaTerminalErrorReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "RetryOnError");

	Params::EpicBaseStreamingVideo_RetryOnError Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.SetCreateAudioComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCreateAudioComponent                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::SetCreateAudioComponent(bool bInCreateAudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "SetCreateAudioComponent");

	Params::EpicBaseStreamingVideo_SetCreateAudioComponent Parms{};

	Parms.bInCreateAudioComponent = bInCreateAudioComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.SetEnableExternalCloseCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::SetEnableExternalCloseCallback(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "SetEnableExternalCloseCallback");

	Params::EpicBaseStreamingVideo_SetEnableExternalCloseCallback Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.SetOpenTimeout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  InTimeoutTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::SetOpenTimeout(double InTimeoutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "SetOpenTimeout");

	Params::EpicBaseStreamingVideo_SetOpenTimeout Parms{};

	Parms.InTimeoutTime = InTimeoutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.SetSoundSubmixes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaSoundComponent*             InSoundComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundSubmixBase*                 InDefault                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundSubmixBase*                 InLicensed                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::SetSoundSubmixes(class UMediaSoundComponent* InSoundComponent, class USoundSubmixBase* InDefault, class USoundSubmixBase* InLicensed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "SetSoundSubmixes");

	Params::EpicBaseStreamingVideo_SetSoundSubmixes Parms{};

	Parms.InSoundComponent = InSoundComponent;
	Parms.InDefault = InDefault;
	Parms.InLicensed = InLicensed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.SetSyncTimes
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FDateTime&                 InNowTime                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDateTime&                 InStartTime                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DynamicStart                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffset_s                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelay_s                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::SetSyncTimes(const struct FDateTime& InNowTime, const struct FDateTime& InStartTime, bool DynamicStart, float InOffset_s, float InDelay_s)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "SetSyncTimes");

	Params::EpicBaseStreamingVideo_SetSyncTimes Parms{};

	Parms.InNowTime = std::move(InNowTime);
	Parms.InStartTime = std::move(InStartTime);
	Parms.DynamicStart = DynamicStart;
	Parms.InOffset_s = InOffset_s;
	Parms.InDelay_s = InDelay_s;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.SetVideoSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Width                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Height                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::SetVideoSize(const int32 Width, const int32 Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "SetVideoSize");

	Params::EpicBaseStreamingVideo_SetVideoSize Parms{};

	Parms.Width = Width;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.Start
// (Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InVUID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMediaTexture*                    InVideoTexture                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::Start(const class FString& InVUID, class UMediaTexture* InVideoTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "Start");

	Params::EpicBaseStreamingVideo_Start Parms{};

	Parms.InVUID = std::move(InVUID);
	Parms.InVideoTexture = InVideoTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.Stop
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRelease                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEpicBaseStreamingVideo::Stop(bool bRelease, bool bStopPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "Stop");

	Params::EpicBaseStreamingVideo_Stop Parms{};

	Parms.bRelease = bRelease;
	Parms.bStopPlayer = bStopPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EpicMediaBasePlayer.EpicBaseStreamingVideo.IsSyncStartTimeSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEpicBaseStreamingVideo::IsSyncStartTimeSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicBaseStreamingVideo", "IsSyncStartTimeSet");

	Params::EpicBaseStreamingVideo_IsSyncStartTimeSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

