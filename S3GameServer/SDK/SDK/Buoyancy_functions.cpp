#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buoyancy

#include "Basic.hpp"

#include "Buoyancy_classes.hpp"
#include "Buoyancy_parameters.hpp"


namespace SDK
{

// Function Buoyancy.BuoyancyEventInterface.OnSurfaceTouchBegin
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AWaterBody*                       WaterBodyActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              WaterComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              SubmergedComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SubmergedVolume                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SubmergedCenterOfMass                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SubmergedVelocity                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBuoyancyEventInterface::OnSurfaceTouchBegin(class AWaterBody* WaterBodyActor, class UPrimitiveComponent* WaterComponent, class UPrimitiveComponent* SubmergedComponent, float SubmergedVolume, const struct FVector& SubmergedCenterOfMass, const struct FVector& SubmergedVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BuoyancyEventInterface", "OnSurfaceTouchBegin");

	Params::BuoyancyEventInterface_OnSurfaceTouchBegin Parms{};

	Parms.WaterBodyActor = WaterBodyActor;
	Parms.WaterComponent = WaterComponent;
	Parms.SubmergedComponent = SubmergedComponent;
	Parms.SubmergedVolume = SubmergedVolume;
	Parms.SubmergedCenterOfMass = std::move(SubmergedCenterOfMass);
	Parms.SubmergedVelocity = std::move(SubmergedVelocity);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Buoyancy.BuoyancyEventInterface.OnSurfaceTouchEnd
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AWaterBody*                       WaterBodyActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              WaterComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              SubmergedComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SubmergedVolume                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SubmergedCenterOfMass                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SubmergedVelocity                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBuoyancyEventInterface::OnSurfaceTouchEnd(class AWaterBody* WaterBodyActor, class UPrimitiveComponent* WaterComponent, class UPrimitiveComponent* SubmergedComponent, float SubmergedVolume, const struct FVector& SubmergedCenterOfMass, const struct FVector& SubmergedVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BuoyancyEventInterface", "OnSurfaceTouchEnd");

	Params::BuoyancyEventInterface_OnSurfaceTouchEnd Parms{};

	Parms.WaterBodyActor = WaterBodyActor;
	Parms.WaterComponent = WaterComponent;
	Parms.SubmergedComponent = SubmergedComponent;
	Parms.SubmergedVolume = SubmergedVolume;
	Parms.SubmergedCenterOfMass = std::move(SubmergedCenterOfMass);
	Parms.SubmergedVelocity = std::move(SubmergedVelocity);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Buoyancy.BuoyancyEventInterface.OnSurfaceTouching
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AWaterBody*                       WaterBodyActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              WaterComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              SubmergedComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SubmergedVolume                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SubmergedCenterOfMass                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SubmergedVelocity                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IBuoyancyEventInterface::OnSurfaceTouching(class AWaterBody* WaterBodyActor, class UPrimitiveComponent* WaterComponent, class UPrimitiveComponent* SubmergedComponent, float SubmergedVolume, const struct FVector& SubmergedCenterOfMass, const struct FVector& SubmergedVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BuoyancyEventInterface", "OnSurfaceTouching");

	Params::BuoyancyEventInterface_OnSurfaceTouching Parms{};

	Parms.WaterBodyActor = WaterBodyActor;
	Parms.WaterComponent = WaterComponent;
	Parms.SubmergedComponent = SubmergedComponent;
	Parms.SubmergedVolume = SubmergedVolume;
	Parms.SubmergedCenterOfMass = std::move(SubmergedCenterOfMass);
	Parms.SubmergedVelocity = std::move(SubmergedVelocity);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Buoyancy.BuoyancySubsystem.IsEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuoyancySubsystem::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuoyancySubsystem", "IsEnabled");

	Params::BuoyancySubsystem_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

