#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseAbilities_0

#include "Basic.hpp"

#include "VerseAbilities_0_classes.hpp"
#include "VerseAbilities_0_parameters.hpp"


namespace SDK
{

// Function VerseAbilities._Root.ability_property_link$Factory
// (Static, HasOutParams)
// Parameters:
// struct Fability_property_link           RetVal                                                 (Parm, OutParm, ReturnParm)

struct Fability_property_link VerseAbilities_0::U_Root::ability_property_link_Factory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("_Root", "ability_property_link$Factory");

	Params::_Root_ability_property_link_Factory Parms{};

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseAbilities._Root.ability_property_link$OverrideFactory
// (Static, HasOutParams)
// Parameters:
// struct Fability_property_link           RetVal                                                 (Parm, OutParm, ReturnParm)
// const TMap<FVerseStringProperty_, uint8>&__verse_0xFB48ED96__InitOverrideMap                    (ConstParm, Parm, ContainsInstancedReference)

struct Fability_property_link VerseAbilities_0::U_Root::ability_property_link_OverrideFactory(const TMap<FVerseStringProperty_, uint8>& __verse_0xFB48ED96__InitOverrideMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("_Root", "ability_property_link$OverrideFactory");

	Params::_Root_ability_property_link_OverrideFactory Parms{};

	Parms.__verse_0xFB48ED96__InitOverrideMap = std::move(__verse_0xFB48ED96__InitOverrideMap);

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseAbilities._Root.$InitCDO
// ()

void VerseAbilities_0::U_Root::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("_Root", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.ability.$Block
// ()

void Uability::_Block()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability", "$Block");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.ability.$InitCDO
// (HasDefaults)

void Uability::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.ability.$InitInstance
// ()

void Uability::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.ability._L_2fUnrealEngine_2ecom_2fAbilities_2fability_N_REndAbility
// (Native, Public, BlueprintCallable)
// Parameters:
// const struct VerseAbilities_0::Ftuple_L_R&__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Uability::_L_2fUnrealEngine_2ecom_2fAbilities_2fability_N_REndAbility(const struct VerseAbilities_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability", "_L_2fUnrealEngine_2ecom_2fAbilities_2fability_N_REndAbility");

	Params::ability__L_2fUnrealEngine_2ecom_2fAbilities_2fability_N_REndAbility Parms{};

	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VerseAbilities.ability.Activate
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UConcurrency_task*                __verse_0xC1E81372_CallingTask                         (ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
// int64                                   __verse_0xA3A00DDB_CallerResumeState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   __verse_0x2AC0E4D8_CallerCancelState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct VerseAbilities_0::Ftuple_L_R&__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UConcurrency_task*                RetVal                                                 (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

class UConcurrency_task* Uability::Activate(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct VerseAbilities_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability", "Activate");

	Params::ability_Activate Parms{};

	Parms.__verse_0xC1E81372_CallingTask = __verse_0xC1E81372_CallingTask;
	Parms.__verse_0xA3A00DDB_CallerResumeState = __verse_0xA3A00DDB_CallerResumeState;
	Parms.__verse_0x2AC0E4D8_CallerCancelState = __verse_0x2AC0E4D8_CallerCancelState;
	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseAbilities.ability.CallActivate
// (Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UConcurrency_task*                __verse_0xC1E81372_CallingTask                         (ExportObject, Parm, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)
// int64                                   __verse_0xA3A00DDB_CallerResumeState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   __verse_0x2AC0E4D8_CallerCancelState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct VerseAbilities_0::Ftuple_L_R&__verse_0xB2CDDD72_Argument                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UConcurrency_task*                RetVal                                                 (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash)

class UConcurrency_task* Uability::CallActivate(class UConcurrency_task* __verse_0xC1E81372_CallingTask, int64 __verse_0xA3A00DDB_CallerResumeState, int64 __verse_0x2AC0E4D8_CallerCancelState, const struct VerseAbilities_0::Ftuple_L_R& __verse_0xB2CDDD72_Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability", "CallActivate");

	Params::ability_CallActivate Parms{};

	Parms.__verse_0xC1E81372_CallingTask = __verse_0xC1E81372_CallingTask;
	Parms.__verse_0xA3A00DDB_CallerResumeState = __verse_0xA3A00DDB_CallerResumeState;
	Parms.__verse_0x2AC0E4D8_CallerCancelState = __verse_0x2AC0E4D8_CallerCancelState;
	Parms.__verse_0xB2CDDD72_Argument = std::move(__verse_0xB2CDDD72_Argument);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function VerseAbilities.ability_component.$Block
// ()

void Uability_component::_Block()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability_component", "$Block");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.ability_component.$InitCDO
// ()

void Uability_component::_InitCDO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability_component", "$InitCDO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.ability_component.$InitInstance
// ()

void Uability_component::_InitInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ability_component", "$InitInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VerseAbilities.task_ability$Activate.Update
// (Native, Public, HasOutParams)
// Parameters:
// int64                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int64 Utask_ability_Activate::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("task_ability$Activate", "Update");

	Params::task_ability_Activate_Update Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VerseAbilities.task_ability$CallActivate.Update
// (Public, HasOutParams)
// Parameters:
// int64                                   RetVal                                                 (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int64 Utask_ability_CallActivate::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("task_ability$CallActivate", "Update");

	Params::task_ability_CallActivate_Update Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

