#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMCoreRuntime

#include "Basic.hpp"

#include "DeveloperSettings_classes.hpp"
#include "Engine_classes.hpp"
#include "FMCoreRuntime_structs.hpp"


namespace SDK
{

// Class FMCoreRuntime.FMCoreDeveloperSettings
// 0x0000 (0x0030 - 0x0030)
class UFMCoreDeveloperSettings final : public UDeveloperSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMCoreDeveloperSettings">();
	}
	static class UFMCoreDeveloperSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMCoreDeveloperSettings>();
	}
};

// Class FMCoreRuntime.FMCoreMusicFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFMCoreMusicFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 GetDegreeShiftFromProgression(EHarmonicProgression Progression);
	static EMusicInterval GetIntervalAtStepInScale(int32 ScaleStep, EMusicKeyMode KeyMode);
	static EMusicInterval GetIntervalForNote(const struct FMidiNote& Note, EMusicKey Key);
	static int32 GetIntervalStepInScale(EMusicInterval Interval, EMusicKeyMode KeyMode);
	static struct FMidiNote GetMidiNoteFromScale(EMusicKey Key, int32 Octave, EMusicInterval Interval);
	static struct FMidiNote SnapToScale(const struct FMidiNote& Note, EMusicKey Key, EMusicKeyMode KeyMode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMCoreMusicFunctionLibrary">();
	}
	static class UFMCoreMusicFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMCoreMusicFunctionLibrary>();
	}
};

// Class FMCoreRuntime.FMCoreMusicManagerComponent
// 0x0090 (0x0130 - 0x00A0)
class UFMCoreMusicManagerComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(int32 CurrentTempo)> OnTempoChangedDelegate;                       // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float CurrentSpeed)> OnSpeedChangedDelegate;                       // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EMusicKey CurrentKey)> OnKeyChangedDelegate;                       // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EMusicKeyMode CurrentMode)> OnModeChangedDelegate;                 // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FFMCoreTimeSignature& TimeSignature)> OnTimeSignatureChanged; // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EMusicKey                                     StartingKey;                                       // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicKeyMode                                 StartingMode;                                      // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartingTempo;                                     // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartingSpeed;                                     // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartingTimeSignatureNumerator;                    // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartingTimeSignatureDenominator;                  // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicKey                                     CurrentKey;                                        // 0x0104(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EMusicKeyMode                                 CurrentMode;                                       // 0x0105(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentTempo;                                      // 0x0108(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentSpeed;                                      // 0x010C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFMCoreTimeSignature                   CurrentTimeSignature;                              // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	EMusicKey                                     ServerKey;                                         // 0x0118(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EMusicKeyMode                                 ServerMode;                                        // 0x0119(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ServerTempo;                                       // 0x011C(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ServerSpeed;                                       // 0x0120(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFMCoreTimeSignature                   ServerTimeSignature;                               // 0x0124(0x0008)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ServerKeyChanged();
	void OnRep_ServerModeChanged();
	void OnRep_ServerSpeedChanged();
	void OnRep_ServerTempoChanged();
	void OnRep_ServerTimeSignatureChanged();
	void TriggerKeyChange(EMusicKey InKey);
	void TriggerModeChange(EMusicKeyMode InMode);
	void TriggerSpeedChange(float Speed, bool bLocalChangeOnly);
	void TriggerTempoChange(int32 BPM, bool bLocalChangeOnly);
	void TriggerTimeSignatureChange(int32 Numerator, int32 Denominator);

	void GetCurrentAudioState(EMusicKey* OutKey, EMusicKeyMode* OutKeyMode, int32* OutTempo) const;
	EMusicKey GetCurrentKey() const;
	EMusicKeyMode GetCurrentKeyMode() const;
	float GetCurrentSpeed() const;
	int32 GetCurrentTempo() const;
	struct FFMCoreTimeSignature GetCurrentTimeSignature() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMCoreMusicManagerComponent">();
	}
	static class UFMCoreMusicManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMCoreMusicManagerComponent>();
	}
};

// Class FMCoreRuntime.FMPlayspaceScopedSystemComponent
// 0x0010 (0x00B0 - 0x00A0)
class UFMPlayspaceScopedSystemComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(bool Success)>  OnAddedToPlayspaceSystemManager;                   // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

public:
	bool RemoveFromPlayspaceSystemManager();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMPlayspaceScopedSystemComponent">();
	}
	static class UFMPlayspaceScopedSystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMPlayspaceScopedSystemComponent>();
	}
};

// Class FMCoreRuntime.FMPlayspaceScopedSystemManager
// 0x00C0 (0x0160 - 0x00A0)
class UFMPlayspaceScopedSystemManager final : public UActorComponent
{
public:
	TMap<TSubclassOf<class AActor>, TSubclassOf<class AActor>> VKClassRedirects;                     // 0x00A0(0x0050)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           VKClassDenyList;                                   // 0x00F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           UEFNNotableActors;                                 // 0x0100(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class AActor*, struct FFMPlayspaceSystemInfo> PlayspacesSystemInfo;                         // 0x0110(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static void GetOrCreateSystemForActorBP(TSubclassOf<class AActor> SystemClass, class AActor* Requester, class AActor** OutActor, ESystemGetResult* OutWasValid);
	static void GetSystemForActorIfExistsBP(TSubclassOf<class AActor> SystemClass, class AActor* Requester, class AActor** OutActor, ESystemGetResult* OutWasValid);

	void MulticastNewSystemCreated(class AActor* PlayspaceActor, TSubclassOf<class AActor> SystemClass, class AActor* CreatedActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FMPlayspaceScopedSystemManager">();
	}
	static class UFMPlayspaceScopedSystemManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFMPlayspaceScopedSystemManager>();
	}
};

}

