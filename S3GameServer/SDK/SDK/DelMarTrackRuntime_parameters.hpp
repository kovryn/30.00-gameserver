#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarTrackRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "DelMarTrackRuntime_structs.hpp"


namespace SDK::Params
{

// Function DelMarTrackRuntime.DelMarTrackBase.GetAllTrackSegmentActors
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_GetAllTrackSegmentActors final
{
public:
	TArray<class ADelMarTrackSegmentBase*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.OnMetadataChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_OnMetadataChanged final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SplineIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.OnSplineClosedLoopChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_OnSplineClosedLoopChanged final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SplineIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.OnSplinePointAdded
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_OnSplinePointAdded final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SplineIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.OnSplinePointChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_OnSplinePointChanged final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SplineIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.OnSplinePointRemoved
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_OnSplinePointRemoved final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SplineIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.PostSplineSegmentGenerated
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_PostSplineSegmentGenerated final
{
public:
	class UDelMarTrackSplineComponent*            SplineComp;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.PreSplineSegmentGenerated
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_PreSplineSegmentGenerated final
{
public:
	class UDelMarTrackSplineComponent*            SplineComp;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.SetTrackTypeTagAtIndex
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_SetTrackTypeTagAtIndex final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           tag;                                               // 0x0004(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.ForceValidOOBTube
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBase_ForceValidOOBTube final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.ForceValidTrack
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_ForceValidTrack final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetDistanceRangeFromPointRange
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_GetDistanceRangeFromPointRange final
{
public:
	struct FDelMarTrackPointIndexRange            InRange;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarTrackPointDistanceRange         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetEndCapClass
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_GetEndCapClass final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetForwardDistance
// 0x000C (0x000C - 0x0000)
struct DelMarTrackBase_GetForwardDistance final
{
public:
	float                                         Start;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         End;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetLoopDistance
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_GetLoopDistance final
{
public:
	float                                         InTotalDistance;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetMetaDataAtSplinePoint
// 0x0088 (0x0088 - 0x0000)
struct DelMarTrackBase_GetMetaDataAtSplinePoint final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarSplinePointMetaData             ReturnValue;                                       // 0x0008(0x0080)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetNextSplinePoint
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_GetNextSplinePoint final
{
public:
	int32                                         InSplinePoint;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetNextSplineSegment
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_GetNextSplineSegment final
{
public:
	int32                                         InSplineSegmentIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetPreviousSplinePoint
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_GetPreviousSplinePoint final
{
public:
	int32                                         InSplinePoint;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetPreviousSplineSegment
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_GetPreviousSplineSegment final
{
public:
	int32                                         InSplineSegmentIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetSegmentClassAtSplinePoint
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_GetSegmentClassAtSplinePoint final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetSegmentTrackTypeTag
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackBase_GetSegmentTrackTypeTag final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0004(0x0004)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetStartCapClass
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_GetStartCapClass final
{
public:
	int32                                         SplineIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.GetTransitionSegmentClass
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_GetTransitionSegmentClass final
{
public:
	int32                                         FromSplineIndex;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ToSplineIndex;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.IsCosmetic
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBase_IsCosmetic final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.IsDistanceWithinRange
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackBase_IsDistanceWithinRange final
{
public:
	float                                         InDistance;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDistance;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndDistance;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.IsPointInOOBTube
// 0x0020 (0x0020 - 0x0000)
struct DelMarTrackBase_IsPointInOOBTube final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackBase.IsPrimary
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBase_IsPrimary final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.IsSecondary
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBase_IsSecondary final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBase.IsTrackable
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBase_IsTrackable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.MergeTrack
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrack_MergeTrack final
{
public:
	class ADelMarTrack*                           OtherTrack;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          MergeToEndPoint;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CopyFromStartPoint;                                // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrack.SplitTrackAtPoint
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrack_SplitTrackAtPoint final
{
public:
	int32                                         SplitAtPoint;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrack.GetParentEndDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrack_GetParentEndDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.GetParentStartDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrack_GetParentStartDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.GetPrimaryDistance
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrack_GetPrimaryDistance final
{
public:
	float                                         DistanceOnThisTrack;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.GetPrimaryEndDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrack_GetPrimaryEndDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.GetPrimaryStartDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrack_GetPrimaryStartDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.GetSecondaryEndTrack
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrack_GetSecondaryEndTrack final
{
public:
	class ADelMarTrack*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrack.GetSecondaryStartTrack
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrack_GetSecondaryStartTrack final
{
public:
	class ADelMarTrack*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBlueprintFunctionLibrary.IsTrackRadiusCheckDisabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBlueprintFunctionLibrary_IsTrackRadiusCheckDisabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackBlueprintFunctionLibrary.TrackPositionDebugDrawEnabled
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackBlueprintFunctionLibrary_TrackPositionDebugDrawEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSegmentBase.ContainsDistanceAlongSpline
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSegmentBase_ContainsDistanceAlongSpline final
{
public:
	float                                         DistanceAlongSpline;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackSegmentBase.GetSplineDistanceRange
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSegmentBase_GetSplineDistanceRange final
{
public:
	struct FDelMarTrackPointDistanceRange         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSegmentBase.GetSplineMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSegmentBase_GetSplineMeshComponent final
{
public:
	class USplineMeshComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.OnAttachedTrackPointAdded
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackOobTube_OnAttachedTrackPointAdded final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.OnAttachedTrackPointChanged
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackOobTube_OnAttachedTrackPointChanged final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.OnAttachedTrackPointRemoved
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackOobTube_OnAttachedTrackPointRemoved final
{
public:
	class UDelMarTrackSplineComponent*            InSpline;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.OnConstructTubeMesh
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackOobTube_OnConstructTubeMesh final
{
public:
	class USplineMeshComponent*                   TubeMeshComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTransitionMesh;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTransitionIn;                                   // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.DetermineTubeMeshTransitionType
// 0x000C (0x000C - 0x0000)
struct DelMarTrackOobTube_DetermineTubeMeshTransitionType final
{
public:
	int32                                         CurrentPointIndex;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NextPointIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarTrackOobTubeTransitionType             ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.GetSplinePointTagAtIndex
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTube_GetSplinePointTagAtIndex final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0004(0x0004)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.HasTubeMeshAtDistance
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTube_HasTubeMeshAtDistance final
{
public:
	float                                         InDistance;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.IsAttachedToPrimaryTrack
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackOobTube_IsAttachedToPrimaryTrack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.IsAttachedToSecondaryTrack
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackOobTube_IsAttachedToSecondaryTrack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTube.IsSplinePointOffset
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTube_IsSplinePointOffset final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetAttachedTrack
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetAttachedTrack final
{
public:
	class ADelMarTrack*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetDefaultSubsectionCount
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackOobTubeProxy_GetDefaultSubsectionCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetDefaultTransitionMeshLength
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetDefaultTransitionMeshLength final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetMinimumMeshScale
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetMinimumMeshScale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetOobTubeActor
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetOobTubeActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetSmallestSubsectionLength
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetSmallestSubsectionLength final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetSplineComponent
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetSplineComponent final
{
public:
	class USplineComponent*                       ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetSplineMetadata
// 0x0030 (0x0030 - 0x0000)
struct DelMarTrackOobTubeProxy_GetSplineMetadata final
{
public:
	int32                                         PointIndex;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarTrackOobTubePointMetaData       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeProxy.GetSplineVisualizationOffset
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeProxy_GetSplineVisualizationOffset final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeCollectionProxy.GetOobTubeProxy
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackOobTubeCollectionProxy_GetOobTubeProxy final
{
public:
	int32                                         OobTubeIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarTrackOobTubeProxy*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeCollectionProxy.RegisterOobTube
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackOobTubeCollectionProxy_RegisterOobTube final
{
public:
	class AActor*                                 OobTubeActor;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackOobTubeCollectionProxy.GetNumOobTubeProxies
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackOobTubeCollectionProxy_GetNumOobTubeProxies final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.FindClosestLocationForSegmentToWorldPlane
// 0x0058 (0x0058 - 0x0000)
struct DelMarTrackSplineComponent_FindClosestLocationForSegmentToWorldPlane final
{
public:
	struct FVector                                WorldPlaneOrigin;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldPlaneNormal;                                  // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SegmentIndex;                                      // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0034(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClosestLocationToWorldPlaneResult     ReturnValue;                                       // 0x0038(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.FindClosestLocationToWorldPlane
// 0x0058 (0x0058 - 0x0000)
struct DelMarTrackSplineComponent_FindClosestLocationToWorldPlane final
{
public:
	struct FVector                                WorldPlaneOrigin;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldPlaneNormal;                                  // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClosestLocationToWorldPlaneResult     ReturnValue;                                       // 0x0038(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.FindInputKeyForNeighboringSegmentClosestToWorldPlane
// 0x0058 (0x0058 - 0x0000)
struct DelMarTrackSplineComponent_FindInputKeyForNeighboringSegmentClosestToWorldPlane final
{
public:
	struct FVector                                WorldPlaneOrigin;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldPlaneNormal;                                  // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SegmentIndex;                                      // 0x0030(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutClosestSegmentIndex;                            // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClosestLocationToWorldPlaneResult     ReturnValue;                                       // 0x0038(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetForwardDistance
// 0x000C (0x000C - 0x0000)
struct DelMarTrackSplineComponent_GetForwardDistance final
{
public:
	float                                         Start;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         End;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetLoopDistance
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetLoopDistance final
{
public:
	float                                         InTotalDistance;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetNextSplinePoint
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetNextSplinePoint final
{
public:
	int32                                         InSplinePoint;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetNextSplineSegment
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetNextSplineSegment final
{
public:
	int32                                         InSplineSegmentIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetPreviousSplinePoint
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetPreviousSplinePoint final
{
public:
	int32                                         InSplinePoint;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetPreviousSplineSegment
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetPreviousSplineSegment final
{
public:
	int32                                         InSplineSegmentIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetRotationalMinimalFrames
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackSplineComponent_GetRotationalMinimalFrames final
{
public:
	TArray<struct FDelMarRotationalMinimalFrame>  ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetRotationalMinimalUpVectorAtDistanceAlongSpline
// 0x0020 (0x0020 - 0x0000)
struct DelMarTrackSplineComponent_GetRotationalMinimalUpVectorAtDistanceAlongSpline final
{
public:
	float                                         DistanceAlongSpline;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetRotationalMinimalUpVectorAtSplinePoint
// 0x0020 (0x0020 - 0x0000)
struct DelMarTrackSplineComponent_GetRotationalMinimalUpVectorAtSplinePoint final
{
public:
	int32                                         SplinePoint;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplineCoordinateSpace                        CoordinateSpace;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetSplinePointAtDistanceAlongSpline
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetSplinePointAtDistanceAlongSpline final
{
public:
	float                                         DistanceAlongSpline;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetSplinePointClosestToDistanceAlongSpline
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackSplineComponent_GetSplinePointClosestToDistanceAlongSpline final
{
public:
	float                                         DistanceAlongSpline;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.GetSplinePointClosestToWorldLocation
// 0x0020 (0x0020 - 0x0000)
struct DelMarTrackSplineComponent_GetSplinePointClosestToWorldLocation final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.IsDistanceAheadOfOtherDistance
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackSplineComponent_IsDistanceAheadOfOtherDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OtherDistance;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseDistance;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.IsDistanceBehindOtherDistance
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackSplineComponent_IsDistanceBehindOtherDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OtherDistance;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseDistance;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackSplineComponent.IsDistanceWithinRange
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackSplineComponent_IsDistanceWithinRange final
{
public:
	float                                         InDistance;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDistance;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndDistance;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackPaletteTrackType.AddSegmentClassActorToStyle
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackPaletteTrackType_AddSegmentClassActorToStyle final
{
public:
	struct FGameplayTag                           StyleTag;                                          // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SegmentClass;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPerformanceScrubber.TimelineTickFloatCallback
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPerformanceScrubber_TimelineTickFloatCallback final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPerformanceScrubber.UpdateSplines
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackPerformanceScrubber_UpdateSplines final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.SetActiveTrack
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackPositionComponent_SetActiveTrack final
{
public:
	class ADelMarTrackBase*                       Track;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TrackSegmentIndex;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetActiveSegmentIndex
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPositionComponent_GetActiveSegmentIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetActiveTrack
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackPositionComponent_GetActiveTrack final
{
public:
	class ADelMarTrackBase*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetActiveTrackDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPositionComponent_GetActiveTrackDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetActiveTrackPosition
// 0x0020 (0x0020 - 0x0000)
struct DelMarTrackPositionComponent_GetActiveTrackPosition final
{
public:
	struct FTrackPosition                         ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetActiveTrackRadius
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPositionComponent_GetActiveTrackRadius final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetDistanceAlongSpline
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPositionComponent_GetDistanceAlongSpline final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetLastKnowGoodSplineLocation
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetLastKnowGoodSplineLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetPrimaryDistance
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPositionComponent_GetPrimaryDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetPrimaryTrack
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackPositionComponent_GetPrimaryTrack final
{
public:
	class ADelMarTrackBase*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetPrimaryWorldLocationAlongSpline
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetPrimaryWorldLocationAlongSpline final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetRawClosestSplineLocation
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetRawClosestSplineLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetRawDistanceAlongSpline
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackPositionComponent_GetRawDistanceAlongSpline final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetTrackRadius
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackPositionComponent_GetTrackRadius final
{
public:
	const class ADelMarTrackBase*                 InTrack;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDistanceAlongTrack;                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetWorldDirectionAlongSpline
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetWorldDirectionAlongSpline final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetWorldLocationAlongSpline
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetWorldLocationAlongSpline final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetWorldRightVectorAlongSpline
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetWorldRightVectorAlongSpline final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetWorldTransformAlongSpline
// 0x0060 (0x0060 - 0x0000)
struct DelMarTrackPositionComponent_GetWorldTransformAlongSpline final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.GetWorldUpVectorAlongSpline
// 0x0018 (0x0018 - 0x0000)
struct DelMarTrackPositionComponent_GetWorldUpVectorAlongSpline final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.HasValidPosition
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackPositionComponent_HasValidPosition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.IsOnPrimaryTrack
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackPositionComponent_IsOnPrimaryTrack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPositionComponent.IsTouchingTrack
// 0x0001 (0x0001 - 0x0000)
struct DelMarTrackPositionComponent_IsTouchingTrack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackPrefabSegment.GetSockets
// 0x0010 (0x0010 - 0x0000)
struct DelMarTrackPrefabSegment_GetSockets final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackTubeAudioComponent.SetRadius
// 0x0004 (0x0004 - 0x0000)
struct DelMarTrackTubeAudioComponent_SetRadius final
{
public:
	float                                         InRadius;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function DelMarTrackRuntime.DelMarTrackTubeAudioComponent.SetSpline
// 0x0008 (0x0008 - 0x0000)
struct DelMarTrackTubeAudioComponent_SetSpline final
{
public:
	class USplineComponent*                       NewSpline;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

