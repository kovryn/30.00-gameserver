#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreatureBaseRidableComponent

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SlateCore_structs.hpp"
#include "RidingCodeRuntime_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CreatureBaseRidableComponent.CreatureBaseRidableComponent_C
// 0x06D8 (0x0E00 - 0x0728)
#pragma pack(push, 0x1)
class alignas(0x10) UCreatureBaseRidableComponent_C : public UControllableRidableComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0728(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  T_CreatureIsBeingRidden;                           // 0x0730(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_CreatureIsBeingRidden;                          // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_CreatureIsBeingRidden_Passive;                  // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugDisplay;                                     // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DebugTickRate;                                     // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebugServerRiderLocation;                          // 0x0770(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleRadiusOffset;                               // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleHalfHeightOffset;                           // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_RidingSpecialAbility;                            // 0x0798(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequence*                          IdleAnim_Add;                                      // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          RunAnim_Add;                                       // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            TurnBS;                                            // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MinSpeedToRun;                                     // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_RampIntoSpeed;                                 // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_RampIntoSpeed_ADS;                             // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_PlayRate;                                      // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_PlayRate_ADS;                                  // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpringAlpha;                                       // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpringAlpha_ADS;                                   // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Idle_Alpha;                                        // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Idle_Alpha_ADS;                                    // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_Alpha;                                         // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Run_Alpha_ADS;                                     // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Turn_Alpha;                                        // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Turn_Alpha_ADS;                                    // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Clamp_AnimPose_LastResort;                         // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Clamp_Foot_R_Adjust;                               // 0x0840(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Clamp_Foot_L_Adjust;                               // 0x0858(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        CapsuleRadiusOffset_Emote;                         // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CapsuleHalfHeightOffset_Emote;                     // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Clamp_Location_Offset;                             // 0x0880(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Clamp_Rotation_Offset;                             // 0x0898(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Clamp_ScaleAdjust;                                 // 0x08B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RidableSocketName;                                 // 0x08C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC[0x4];                                      // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RidableSocket_Alpha;                               // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_CooldownOverride;                               // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_CreatureOverrideCooldown;                        // 0x08E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<ECollisionChannel, ECollisionResponse>   OriginalCollisionResponseMap;                      // 0x0900(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSoundIndicatorIconPicker              RidingSoundIndicatorIconOverride;                  // 0x0950(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(double JumpPitchInterpSpeed)> AudioOnJump;                         // 0x0978(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              AudioOnJumpApex;                                   // 0x0988(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	uint8                                         MovementMode;                                      // 0x0998(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFalling;                                          // 0x0999(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99A[0x6];                                      // 0x099A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         RidingAbilityEnable_HF;                            // 0x09A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        JumpAttach_GroundHeightMin;                        // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpAttach_GroundHeightBuffer;                     // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAltRidingMessage;                               // 0x09D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Riding_Interaction_Text;                           // 0x09E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        currentEnergyValue;                                // 0x09F0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UPlayerRiderComponent_C*                PlayerRiderComponentRef;                           // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ANPC_Pawn_Wildlife_Parent_C*            NPCPawnWildlifeRef;                                // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        previousTimeTracked;                               // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        energyTrackingDeltaTime;                           // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldHaveEnergy;                                  // 0x0A18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A19[0x7];                                      // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EnergyRateOfDecayStopped;                          // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          allowUpdateEnergyTrackingTick;                     // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          lastBeingRiddenState;                              // 0x0A29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2A[0x6];                                      // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   EnergyRateOfDecayMoving;                           // 0x0A30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   EnergyRateOfDecaySprinting;                        // 0x0A40(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentEnergyRateOfRecharge;                       // 0x0A50(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   ExhaustedEnergyRateOfRecharge;                     // 0x0A58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        EnergyWarningThreshold;                            // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnergyCriticalThreshold;                           // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          energyWarningActive;                               // 0x0A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          energyCriticalActive;                              // 0x0A79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7A[0x6];                                      // 0x0A7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        minMovementSpeedTreshold;                          // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumping;                                         // 0x0A88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EnergyRegenThreshold;                              // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysRegenWhenNotRidden;                          // 0x0A98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A99[0x7];                                      // 0x0A99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GE_EnergyWarning;                                  // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_EnergyCritical;                                 // 0x0AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            GE_EnergyDepleted;                                 // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_EnergyWarning;                                   // 0x0AB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_EnergyCritical;                                  // 0x0AD8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_EnergyDepleted;                                  // 0x0AF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_CannotRideBucket;                                // 0x0B18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 Gameplay_Effect;                                   // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SprintingAbilityTag;                               // 0x0B40(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_EatToRefuel;                                    // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            IconBrush;                                         // 0x0B50(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_Creature_Sprint;                                // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundLibrary*                          RidingFoleySoundLibrary;                           // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TagsPreventSprinting;                              // 0x0C20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class FText Name, const struct FSlateBrush& Icon)> RidableUIStart; // 0x0C40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(double Energy, bool bIsResting)> RidableUIUpdateEnergy;            // 0x0C50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           OutOfEnergySoundLibTag;                            // 0x0C60(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SprintStartSoundLibTag;                            // 0x0C64(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             Riding_Interaction_Type;                           // 0x0C68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C69[0x7];                                      // 0x0C69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StartInAirTimestamp;                               // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RetryJumpExitTimerHandle;                          // 0x0C78(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        JumpExitBufferStartTimeStamp;                      // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         JumpExitBufferTime;                                // 0x0C88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           JumpExitBufferTimerHandle;                         // 0x0CB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           MountLandedCueTag;                                 // 0x0CB8(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GE_BlockCreatureAttackOnDismount;                  // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          EnergyRegenActive;                                 // 0x0CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC9[0x7];                                      // 0x0CC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  BlockPetting_TagContainer;                         // 0x0CD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          infiniteStaminaBuffEnabled;                        // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x3];                                      // 0x0CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           InfiniteStaminaEffect_GameplayCueTag;              // 0x0CF4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Cannot_Ride_Rider_Bucket;                          // 0x0CF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         JumpFatigue_Enabled;                               // 0x0D18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         JumpFatigue_ApplyFatigueMinJumpCount;              // 0x0D40(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSubclassOf<class UGameplayEffect>            JumpFatigueGameplayEffect;                         // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          JumpFatigueDebugEnabled;                           // 0x0D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x3];                                      // 0x0D71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         JumpFatigueJumpCount;                              // 0x0D74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpFatigue_LastLandingTimeStamp;                  // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         JumpFatigue_ResetCounterDelay;                     // 0x0D80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          JumpFatigue_ShouldTimeStampNextLanding;            // 0x0DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA9[0x3];                                      // 0x0DA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            JumpFatigue_GEHandle;                              // 0x0DAC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB4[0x4];                                      // 0x0DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           JumpFatigue_RemovalTimerHandle;                    // 0x0DB8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         JumpFatigue_GeDurationPostLanding;                 // 0x0DC0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_NotPetable_IsBeingRidden;                       // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowRidingInteraction;                           // 0x0DF0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Activate_Regen();
	void Added_FBD936634BCC61A726DA279226E2F4BE();
	void ApplyCollisionResponse(TArray<ECollisionChannel>& Channels, ECollisionResponse Response);
	void ApplyGEToSelf(TSubclassOf<class UGameplayEffect> GameplayEffectClass, bool* IsValidClass);
	void CancelJumpExitAndJump();
	void CanJumpExit(bool* CanJumpExit_0);
	void CheatSetStaminaPercent(const float StaminaPercent);
	void Check_Regen_on_Started_Riding();
	void Check_Regen_on_Stopped_Riding();
	void CommitEnergyCosts(bool RequireAllEnergy, double EnergyCost, bool* Success);
	void ConvertedDispatcher_Event_0(bool Converted, class AFortPawn* InstigatorPawn);
	void Deactivate_Regen();
	void DetermineRateOfChange(double* RateOfChange);
	void EnergyTrackingStart();
	void EnergyTrackingStop();
	void ExecuteBufferedJumpExit();
	void ExecuteUbergraph_CreatureBaseRidableComponent(int32 EntryPoint);
	void ForceTaming(class AActor* PlayerPawn, class AActor* CreaturePawn, bool* IsTamingEnabled);
	void GetRiderLocation(struct FVector* Location);
	void GetRidingInfoFromTarget(double* JumpAttachGroundHeightMin, double* JumpAttachGroundHeightBuffer, bool* UsesAltRidingMessage);
	void HandleAbilityHeld();
	void HandleAbilityStarted();
	void HandleAbilityStopped();
	void HandleCancelSprint(const bool bAbilityInputHeld, const bool bForceCancel);
	void HandleEnemyFoleySoundLibrary(class UActorComponent* Rider, bool bIsRiding);
	void HandleJumpStarted();
	void HandleJumpStopped();
	void HandleRiderStartedRiding(class URiderComponent* Rider);
	void HandleRiderStoppedRiding(class URiderComponent* Rider);
	void JumpFatigue_CheckApplyFatigue();
	void JumpFatigue_CountJumps();
	void JumpFatigue_Landed();
	void JumpFatigue_LandTimeStamp();
	void JumpFatigue_RemoveFatigue();
	void KickRiderOffSelf();
	void ManualEnergyDepleted();
	void MountLandedClient(const struct FHitResult& Hit);
	void MountLandedServer_JumpFatigue(const struct FHitResult& Hit);
	void NPCPawnInteractWithDispatcher_Event_0(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn);
	void OnEatToRefuel(double EnergyCost);
	void OnEnergyDepletedClient();
	void OnEnergyUpdate(double Energy, bool bWarningActive);
	void OnJumping(double JumpPitchInterpSpeed);
	void OnJumpingApex();
	void OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnPawnHealthChanged_Event_0();
	void OnRep_currentEnergyValue();
	void OnRep_IdleAnim_Add();
	void OnSprintStarted();
	void Propagate_Immunity_Fall_Damage();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Removed_AD51144144164FD235EE5BA4F6E87456();
	void Removed_C4C6E29B4217C014B9DE0E80B7134D6E();
	void RemoveGEByTag(const struct FGameplayTagContainer& Tags);
	void RestoreCollisionResponses();
	void ReTryJumpExit();
	void SetInfiniteStaminaBuff(bool Enabled);
	void SetWildlifeHealth();
	void Should_Convert_Jump_Exit_to_Jump(bool* Out);
	void ShouldBufferJumpExitToRetryJump(bool* Output);
	void StopSprinting();
	void TestThreshold(bool isDecaying, double CurrentValue, double testTreshold, bool PreviousState, bool* crossedThreshold);
	void ToggleRiding(class AActor* PlayerPawn, class AActor* Target, bool ShouldRide, bool* bChangedRiding);
	void ToggleRidingAlternative();
	void TryConvertBufferedJumpExitToJump();
	void UpdateAnimInputBool(class AFortPawn* FortPawn, bool IsBeingRidden_0);
	void UpdateDebug();
	void UpdateEnergy();
	void UpdateLootAnimalGlow(double Scale);
	void UpdateValue(double TargetValue, double RateOfChange, double DeltaTime, double* updatedValue, bool* EnergyDepleted);
	void UseEnergyAmountServer(double EnergyCost);

	bool CanBePet(class URiderComponent* Rider) const;
	bool CanRiderPlayEmote(const class URiderComponent* Rider) const;
	void GetRiderCapsuleSize(class URiderComponent* Rider, double* RiderCapsuleRadius, double* RiderCapsuleHH) const;
	void GetRidingCapsuleSize(const class URiderComponent* Rider, float OriginalRadius, float OriginalHalfHeight, float* OutRadius, float* OutHalfHeight) const;
	void GetRidingEmoteCapsuleSize(const class URiderComponent* Rider, float OriginalRadius, float OriginalHalfHeight, float* OutRadius, float* OutHalfHeight) const;
	void IsSwimming(bool* IsSwimming_0) const;
	bool ShouldCameraFocusOnRidable(const class URiderComponent* Rider) const;
	bool ShouldSetAsViewTarget(const class URiderComponent* Rider) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CreatureBaseRidableComponent_C">();
	}
	static class UCreatureBaseRidableComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreatureBaseRidableComponent_C>();
	}
};
#pragma pack(pop)

}

