#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortCreativeStreamingComponent

#include "Basic.hpp"

#include "FortCreativeStreamingComponent_structs.hpp"
#include "EpicMediaBasePlayer_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class FortCreativeStreamingComponent.FortCreativeStreamingComponent
// 0x0220 (0x02C0 - 0x00A0)
class UFortCreativeStreamingComponent final : public UActorComponent
{
public:
	class USoundSubmix*                           DefaultSubmix;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSubmix*                           LicensedSubmix;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSubmix*                           AudioAnalysisSubmix;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           JukeboxMPC;                                        // 0x00B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVideoPlayerDeviceAudioAnalysisSettings AudioAnalysisSettings;                            // 0x00C0(0x0040)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USoundConcurrency*                      SoundConcurrency;                                  // 0x0100(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundConcurrency*                      MirrorSoundConcurrency;                            // 0x0108(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                            AudioSoundClass;                                   // 0x0110(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              VideoMaterial;                                     // 0x0118(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaterialSlot;                                      // 0x0120(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortDownloadLocalizedOverlays*         LocalizedOverlays;                                 // 0x0128(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMediaSubtitlesPlayer*              SubtitlesPlayer;                                   // 0x0130(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x30];                                     // 0x0138(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnPlayCompleted;                                   // 0x0168(0x0010)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FVideoPlayerDeviceMediaMetadata& MetaData)> CMSMetadataEvent; // 0x0178(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortBaseStreamingVideo*                BaseStreamingVideoPlayer;                          // 0x0190(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVideoPlayerDeviceComponents           DeviceComponents;                                  // 0x0198(0x0030)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FVideoPlayerDeviceMediaMetadata        CurrentlyPlayingData;                              // 0x01C8(0x0048)(Transient, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class AActor>                  MirroredDevice;                                    // 0x0210(0x0020)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                        MirrorAudioComponent;                              // 0x0230(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundAttenuation*                      MirrorSoundAttenuation;                            // 0x0238(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_240[0x1];                                      // 0x0240(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EFortStreamingVideoSelectionMode              StreamingMode;                                     // 0x0241(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_242[0x26];                                     // 0x0242(0x0026)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const TArray<float>& Magnitude)> OnSubmixSpectralAnalysisDelegate;                // 0x0268(0x000C)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_274[0x14];                                     // 0x0274(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVideoPlayerDeviceCMSEventData         CMSEventData;                                      // 0x0288(0x0038)(Transient, NativeAccessSpecifierPrivate)

public:
	void CMSEventEnded(const class UMediaCMSEvent* Event);
	void CMSEventStarted(const class UMediaCMSEvent* Event);
	void DisableScreenAndAudio(bool bDisabled);
	void ForceRestart();
	void HandleCMSEvents(const struct FVideoPlayerDeviceCMSEventData& EventData, bool bEnable);
	void HandleVideoStreamingSuccess();
	void HandleVideoStreamingTerminalError(EBaseMediaTerminalErrorReason ErrorReason);
	void Init(const bool InUsesAudio, const bool InUsesVideo, class UStaticMeshComponent* ScreenMesh);
	void OnAudioAnalysisSpectrumUpdated(const TArray<float>& MagnitudeArray);
	void OnMediaSoundComponentActivated(class UActorComponent* Component, bool bReset);
	void OnRep_StreamingSelectionMode();
	void OnStreamingDeviceChanged();
	void Play();
	void PrintVideoPlayerDebugData();
	void Restart();
	void Seek(const struct FTimespan& SeekTime);
	void SetFullScreenComponents(const bool bEnable);
	void SetRestartStreamWhenPlaying(const bool bNewRestartStreamWhenPlaying);
	void Stop();
	void StreamedVideoOnMediaPlayerClosed();
	void StreamedVideoOnMediaPlayerEndReached();
	void StreamedVideoOpeningTimeout();
	void TearDownComponent();
	void UpdateStaticMesh(class UStaticMeshComponent* ScreenMesh);
	void UseDeviceOverrideMode();
	void UseMirrorMode(class AActor* NewMirrorDevice);
	void UseMirrorModeByName(const class FString& DeviceName);
	void UsePriorityMode();

	struct FVideoPlayerDeviceComponents GetDeviceComponents() const;
	EFortStreamingVideoDeviceState GetDeviceState() const;
	class UFortBaseStreamingVideo* GetFortBaseStreamingVideo() const;
	struct FVideoPlayerDeviceComponents GetStreamingComponents() const;
	class AFortCreativeStreamingController* GetStreamingController() const;
	class AActor* GetStreamingDevice() const;
	EFortStreamingVideoSelectionMode GetStreamingVideoSelectionMode() const;
	bool IsComponentInitialized() const;
	bool IsDevicePlaying() const;
	bool IsRestartStreamWhenPlaying() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortCreativeStreamingComponent">();
	}
	static class UFortCreativeStreamingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCreativeStreamingComponent>();
	}
};

}

