#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixMetasound

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "HarmonixMidi_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "HarmonixMetasound_structs.hpp"
#include "MetasoundFrontend_structs.hpp"
#include "Harmonix_structs.hpp"


namespace SDK
{

// Class HarmonixMetasound.MetasoundOfflinePlayerComponent
// 0x0048 (0x00E8 - 0x00A0)
class UMetasoundOfflinePlayerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       MetaSoundSource;                                   // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x30];                                      // 0x00B8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetasoundOfflinePlayerComponent">();
	}
	static class UMetasoundOfflinePlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetasoundOfflinePlayerComponent>();
	}
};

// Class HarmonixMetasound.MidiClockUpdateSubsystem
// 0x0060 (0x0090 - 0x0030)
class UMidiClockUpdateSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x60];                                      // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MidiClockUpdateSubsystem">();
	}
	static class UMidiClockUpdateSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMidiClockUpdateSubsystem>();
	}
};

// Class HarmonixMetasound.MidiEventInfoBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UMidiEventInfoBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 GetChannel(const struct FMidiEventInfo& Event);
	static struct FMidiEventInfo GetMidiEventInfo(const struct FMetaSoundOutput& Output, bool* Success);
	static int32 GetNoteNumber(const struct FMidiEventInfo& Event);
	static int32 GetVelocity(const struct FMidiEventInfo& Event);
	static bool IsMidiEventInfo(const struct FMetaSoundOutput& Output);
	static bool IsNote(const struct FMidiEventInfo& Event);
	static bool IsNoteOff(const struct FMidiEventInfo& Event);
	static bool IsNoteOn(const struct FMidiEventInfo& Event);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MidiEventInfoBlueprintLibrary">();
	}
	static class UMidiEventInfoBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMidiEventInfoBlueprintLibrary>();
	}
};

// Class HarmonixMetasound.MidiStepSequence
// 0x0050 (0x0078 - 0x0028)
class UMidiStepSequence final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Pages;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Rows;                                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Columns;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStepSequenceTable                     StepTable;                                         // 0x0040(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableRowsAbove(int32 FirstDisabledRow);
	struct FStepSequenceCell GetCell(int32 Row, int32 Column);
	struct FStepSequenceCell GetCellOnPage(int32 Page, int32 Row, int32 Column);
	struct FStepSequenceCell SetCell(int32 Row, int32 Column, bool State);
	struct FStepSequenceCell SetCellContinuation(int32 Row, int32 Column, bool bState);
	struct FStepSequenceCell SetCellContinuationOnPage(int32 Page, int32 Row, int32 Column, bool bState);
	struct FStepSequenceCell SetCellOnPage(int32 Page, int32 Row, int32 Column, bool State);
	void SetNumColumns(int32 Count);
	void SetNumPages(int32 Count);
	void SetNumRows(int32 Count);
	bool SetRowNoteNumber(int32 RowIndex, int32 MidiNoteNumber);
	bool SetRowVelocity(int32 RowIndex, int32 MidiVelocoty);
	bool SetStepSkipIndex(int32 StepIndex);
	void SetStepTable(const struct FStepSequenceTable& NewStepTable);
	struct FStepSequenceCell ToggleCell(int32 Row, int32 Column);
	struct FStepSequenceCell ToggleCellOnPage(int32 Page, int32 Row, int32 Column);

	const struct FStepSequenceTable GetStepTable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MidiStepSequence">();
	}
	static class UMidiStepSequence* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMidiStepSequence>();
	}
};

// Class HarmonixMetasound.MusicParameterBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UMusicParameterBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void SetMusicLoopConfiguration(class UMetasoundParameterPack* Target, class FName ParameterName, struct FMusicLoopConfiguration& Value, ESetParamResult* Result, bool OnlyIfExists);
	static void SetMusicSeekRequest(class UMetasoundParameterPack* Target, class FName ParameterName, struct FMusicSeekRequest& Value, ESetParamResult* Result, bool OnlyIfExists);
	static void SetMusicTimestamp(class UMetasoundParameterPack* Target, class FName ParameterName, struct FMusicTimestamp& Value, ESetParamResult* Result, bool OnlyIfExists);

	struct FMusicLoopConfiguration GetMusicLoopConfiguration(class UMetasoundParameterPack* Target, class FName ParameterName, ESetParamResult* Result);
	struct FMusicSeekRequest GetMusicSeekRequest(class UMetasoundParameterPack* Target, class FName ParameterName, ESetParamResult* Result);
	struct FMusicTimestamp GetMusicTimestamp(class UMetasoundParameterPack* Target, class FName ParameterName, ESetParamResult* Result);
	bool HasMusicLoopConfiguration(class UMetasoundParameterPack* Target, class FName Name_0);
	bool HasMusicSeekRequest(class UMetasoundParameterPack* Target, class FName Name_0);
	bool HasMusicTimestamp(class UMetasoundParameterPack* Target, class FName Name_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MusicParameterBlueprintLibrary">();
	}
	static class UMusicParameterBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicParameterBlueprintLibrary>();
	}
};

// Class HarmonixMetasound.MusicTimestampBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UMusicTimestampBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FMusicTimestamp GetMusicTimestamp(const struct FMetaSoundOutput& Output, bool* Success);
	static bool IsMusicTimestamp(const struct FMetaSoundOutput& Output);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MusicTimestampBlueprintLibrary">();
	}
	static class UMusicTimestampBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicTimestampBlueprintLibrary>();
	}
};

// Class HarmonixMetasound.HarmonixPeakTamer
// 0x0020 (0x0048 - 0x0028)
class UHarmonixPeakTamer final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UHarmonixPeakTamer* CreateHarmonixPeakTamer();

	void Configure(const struct FHarmonixPeakTamerSettings& Settings);
	void Update(float InputValue, float DeltaTimeSeconds);

	float GetPeak() const;
	float GetValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HarmonixPeakTamer">();
	}
	static class UHarmonixPeakTamer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHarmonixPeakTamer>();
	}
};

// Class HarmonixMetasound.TimeSignatureBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UTimeSignatureBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FTimeSignature GetTimeSignature(const struct FMetaSoundOutput& Output, bool* Success);
	static bool IsTimeSignature(const struct FMetaSoundOutput& Output);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TimeSignatureBlueprintLibrary">();
	}
	static class UTimeSignatureBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTimeSignatureBlueprintLibrary>();
	}
};

// Class HarmonixMetasound.MusicClockComponent
// 0x0370 (0x0410 - 0x00A0)
class UMusicClockComponent final : public UActorComponent
{
public:
	EMusicClockDriveMethod                        DriveMethod;                                       // 0x00A0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MetasoundOutputName;                               // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                        MetasoundsAudioComponent;                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMidiFile*                              TempoMap;                                          // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tempo;                                             // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeSignatureNum;                                  // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeSignatureDenom;                                // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentBeatDurationSec;                            // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentBarDurationSec;                             // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentClockAdvanceRate;                           // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RunPastMusicEnd;                                   // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECalibratedMusicTimebase                      TimebaseForBarAndBeatEvents;                       // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EMusicClockState State)> PlayStateEvent;                           // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 BeatNumber, int32 BeatInBar)> BeatEvent;                     // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 BarNumber)> BarEvent;                                        // 0x00F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& SectionName, float SectionStartMs, float SectionLengthMs)> SectionEvent; // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              MusicClockConnectedEvent;                          // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              MusicClockDisconnectedEvent;                       // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMidiSongPos                           CurrentSmoothedAudioRenderSongPos;                 // 0x0138(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FMidiSongPos                           CurrentVideoRenderSongPos;                         // 0x0178(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FMidiSongPos                           CurrentPlayerExperiencedSongPos;                   // 0x01B8(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1F8[0x218];                                    // 0x01F8(0x0218)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UMusicClockComponent* CreateMetasoundDrivenMusicClock(class UObject* WorldContextObject, class UAudioComponent* InAudioComponent, class FName MetasoundOuputPinName, bool Start_0);
	static class UMusicClockComponent* CreateWallClockDrivenMusicClock(class UObject* WorldContextObject, class UMidiFile* WithTempoMap, bool Start_0);

	bool ConnectToMetasoundOnAudioComponent(class UAudioComponent* InAudioComponent);
	void ConnectToWallClockForMidi(class UMidiFile* InTempoMap);
	void Continue();
	void Pause();
	void Start();
	void Stop();

	float BarToMs(float Bar) const;
	float BeatToMs(float Beat) const;
	float GetBarsIncludingCountIn(ECalibratedMusicTimebase Timebase) const;
	float GetBeatInBarAtMs(float Ms) const;
	float GetBeatsIncludingCountIn(ECalibratedMusicTimebase Timebase) const;
	float GetCountInSeconds() const;
	struct FMidiSongPos GetCurrentPlayerExperiencedSongPos() const;
	int32 GetCurrentSectionIndex(ECalibratedMusicTimebase Timebase) const;
	float GetCurrentSectionLengthMs(ECalibratedMusicTimebase Timebase) const;
	class FString GetCurrentSectionName(ECalibratedMusicTimebase Timebase) const;
	float GetCurrentSectionStartMs(ECalibratedMusicTimebase Timebase) const;
	struct FMidiSongPos GetCurrentSmoothedAudioRenderSongPos() const;
	struct FMusicTimestamp GetCurrentTimestamp(ECalibratedMusicTimebase Timebase) const;
	struct FMidiSongPos GetCurrentVideoRenderSongPos() const;
	float GetDeltaBar(ECalibratedMusicTimebase Timebase) const;
	float GetDeltaBeat(ECalibratedMusicTimebase Timebase) const;
	float GetDistanceFromCurrentBar(ECalibratedMusicTimebase Timebase) const;
	float GetDistanceFromCurrentBeat(ECalibratedMusicTimebase Timebase) const;
	float GetDistanceToClosestBar(ECalibratedMusicTimebase Timebase) const;
	float GetDistanceToClosestBeat(ECalibratedMusicTimebase Timebase) const;
	float GetDistanceToNextBar(ECalibratedMusicTimebase Timebase) const;
	float GetDistanceToNextBeat(ECalibratedMusicTimebase Timebase) const;
	float GetMsPerBarAtMs(float Ms) const;
	float GetMsPerBeatAtMs(float Ms) const;
	float GetNumBeatsInBarAtMs(float Ms) const;
	int32 GetNumSections() const;
	float GetSecondsFromBarOne(ECalibratedMusicTimebase Timebase) const;
	float GetSecondsIncludingCountIn(ECalibratedMusicTimebase Timebase) const;
	float GetSectionEndMsAtMs(float Ms) const;
	float GetSectionLengthMsAtMs(float Ms) const;
	class FString GetSectionNameAtMs(float Ms) const;
	float GetSectionStartMsAtMs(float Ms) const;
	float GetSongLengthBars() const;
	float GetSongLengthBeats() const;
	float GetSongLengthMs() const;
	const struct FMidiSongPos GetSongPos(ECalibratedMusicTimebase Timebase) const;
	float GetSongRemainingMs(ECalibratedMusicTimebase Timebase) const;
	const TArray<struct FSongSection> GetSongSections() const;
	EMusicClockState GetState() const;
	float MeasureSpanProgress(const struct FMusicalTimeSpan& Span, ECalibratedMusicTimebase Timebase) const;
	float TickToMs(float Tick) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MusicClockComponent">();
	}
	static class UMusicClockComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicClockComponent>();
	}
};

// Class HarmonixMetasound.MusicTempometerComponent
// 0x00B8 (0x0158 - 0x00A0)
class UMusicTempometerComponent final : public UActorComponent
{
public:
	class FName                                   SecondsIncludingCountInParameterName;              // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BarsIncludingCountInParameterName;                 // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BeatsIncludingCountInParameterName;                // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SecondsFromBarOneParameterName;                    // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TimestampBarParameterName;                         // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TimestampBeatInBarParameterName;                   // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BarProgressParameterName;                          // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BeatProgressParameterName;                         // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TimeSignatureNumeratorParameterName;               // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TimeSignatureDenominatorParameterName;             // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TempoParameterName;                                // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMidiSongPos                           SongPos;                                           // 0x00D0(0x0040)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0x30];                                     // 0x0110(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UMusicClockComponent*                   MusicClock;                                        // 0x0140(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialParameterCollection*           MaterialParameterCollection;                       // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialParameterCollectionInstance*   MaterialParameterCollectionInstance;               // 0x0150(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetClock(class UMusicClockComponent* InClockComponent);
	void SetClockFromActor(class AActor* Actor);
	void SetMaterialParameterCollection(class UMaterialParameterCollection* InMaterialParameterCollection);

	float GetBarProgress() const;
	float GetBarsIncludingCountIn() const;
	float GetBeatProgress() const;
	float GetBeatsIncludingCountIn() const;
	const class UMusicClockComponent* GetClock() const;
	const class UMusicClockComponent* GetClockNoMutex() const;
	class UMaterialParameterCollection* GetMaterialParameterCollection() const;
	float GetSecondsFromBarOne() const;
	float GetSecondsIncludingCountIn() const;
	const struct FMidiSongPos GetSongPos() const;
	float GetTempo() const;
	float GetTimeSignatureDenominator() const;
	float GetTimeSignatureNumerator() const;
	struct FMusicTimestamp GetTimeStamp() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MusicTempometerComponent">();
	}
	static class UMusicTempometerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicTempometerComponent>();
	}
};

}

