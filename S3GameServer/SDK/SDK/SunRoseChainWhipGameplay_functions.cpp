#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SunRoseChainWhipGameplay

#include "Basic.hpp"

#include "SunRoseChainWhipGameplay_classes.hpp"
#include "SunRoseChainWhipGameplay_parameters.hpp"


namespace SDK
{

// Function SunRoseChainWhipGameplay.FortCheatManager_SunRoseChainWhip.SunRoseApplyHookShot
// (Final, Exec, Native, Public)
// Parameters:
// const float                             Delay                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_SunRoseChainWhip::SunRoseApplyHookShot(const float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_SunRoseChainWhip", "SunRoseApplyHookShot");

	Params::FortCheatManager_SunRoseChainWhip_SunRoseApplyHookShot Parms{};

	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SunRoseChainWhipGameplay.FortCheatManager_SunRoseChainWhip.SunRoseRemoveHookShotShooter
// (Final, Exec, Native, Public)

void UFortCheatManager_SunRoseChainWhip::SunRoseRemoveHookShotShooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_SunRoseChainWhip", "SunRoseRemoveHookShotShooter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SunRoseChainWhipGameplay.FortCheatManager_SunRoseChainWhip.SunRoseSpawnHookShotShooter
// (Final, Exec, Native, Public)

void UFortCheatManager_SunRoseChainWhip::SunRoseSpawnHookShotShooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager_SunRoseChainWhip", "SunRoseSpawnHookShotShooter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

