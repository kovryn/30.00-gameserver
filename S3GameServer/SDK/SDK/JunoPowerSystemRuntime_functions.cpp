#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JunoPowerSystemRuntime

#include "Basic.hpp"

#include "JunoPowerSystemRuntime_classes.hpp"
#include "JunoPowerSystemRuntime_parameters.hpp"


namespace SDK
{

// Function JunoPowerSystemRuntime.JunoPowerBank.HandleInventoryChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<class UFortItem*>&         AddedItems                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class UFortItem*>&         RemovedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AJunoPowerBank::HandleInventoryChanged(const TArray<class UFortItem*>& AddedItems, const TArray<class UFortItem*>& RemovedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerBank", "HandleInventoryChanged");

	Params::JunoPowerBank_HandleInventoryChanged Parms{};

	Parms.AddedItems = std::move(AddedItems);
	Parms.RemovedItems = std::move(RemovedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerCenter.HandleInventoryChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const TArray<class UFortItem*>&         AddedItems                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class UFortItem*>&         RemovedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AJunoPowerCenter::HandleInventoryChanged(const TArray<class UFortItem*>& AddedItems, const TArray<class UFortItem*>& RemovedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerCenter", "HandleInventoryChanged");

	Params::JunoPowerCenter_HandleInventoryChanged Parms{};

	Parms.AddedItems = std::move(AddedItems);
	Parms.RemovedItems = std::move(RemovedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerCenter.GetCurrentPowerCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AJunoPowerCenter::GetCurrentPowerCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerCenter", "GetCurrentPowerCapacity");

	Params::JunoPowerCenter_GetCurrentPowerCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerCenter.GetCurrentPowerItemGUID
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid AJunoPowerCenter::GetCurrentPowerItemGUID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerCenter", "GetCurrentPowerItemGUID");

	Params::JunoPowerCenter_GetCurrentPowerItemGUID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerCenter.GetMaxPowerCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AJunoPowerCenter::GetMaxPowerCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerCenter", "GetMaxPowerCapacity");

	Params::JunoPowerCenter_GetMaxPowerCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerCenter.GetPowerCapacityPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AJunoPowerCenter::GetPowerCapacityPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerCenter", "GetPowerCapacityPercent");

	Params::JunoPowerCenter_GetPowerCapacityPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerCenter.GetPowerConsumptionAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AJunoPowerCenter::GetPowerConsumptionAmount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerCenter", "GetPowerConsumptionAmount");

	Params::JunoPowerCenter_GetPowerConsumptionAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.AddPowerChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Channel                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoPowerConsumerComponent::AddPowerChannel(const struct FGameplayTag& Channel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "AddPowerChannel");

	Params::JunoPowerConsumerComponent_AddPowerChannel Parms{};

	Parms.Channel = std::move(Channel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.ConsumePower
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UJunoPowerConsumerComponent::ConsumePower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "ConsumePower");

	Params::JunoPowerConsumerComponent_ConsumePower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.HasPower
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UJunoPowerConsumerComponent::HasPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "HasPower");

	Params::JunoPowerConsumerComponent_HasPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.OnAttached
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FGraphIslandHandle&        IslandHandle                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoPowerConsumerComponent::OnAttached(const struct FGraphIslandHandle& IslandHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "OnAttached");

	Params::JunoPowerConsumerComponent_OnAttached Parms{};

	Parms.IslandHandle = std::move(IslandHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.OnDetached
// (Final, Native, Private)

void UJunoPowerConsumerComponent::OnDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "OnDetached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.RegisterPowerConsumer
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Channels                                               (ConstParm, Parm, NativeAccessSpecifierPublic)

void UJunoPowerConsumerComponent::RegisterPowerConsumer(const struct FGameplayTagContainer& Channels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "RegisterPowerConsumer");

	Params::JunoPowerConsumerComponent_RegisterPowerConsumer Parms{};

	Parms.Channels = std::move(Channels);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerConsumerComponent.RemovePowerChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Channel                                                (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJunoPowerConsumerComponent::RemovePowerChannel(const struct FGameplayTag& Channel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerConsumerComponent", "RemovePowerChannel");

	Params::JunoPowerConsumerComponent_RemovePowerChannel Parms{};

	Parms.Channel = std::move(Channel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.OnRep_AttachedPowerCenters
// (Final, Native, Private)

void UJunoPowerManagerComponent::OnRep_AttachedPowerCenters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "OnRep_AttachedPowerCenters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.OnRep_IsConsumingPower
// (Final, Native, Private)

void UJunoPowerManagerComponent::OnRep_IsConsumingPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "OnRep_IsConsumingPower");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetAttachedPowerConsumerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FConsumerChannelPowerInfo>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FConsumerChannelPowerInfo> UJunoPowerManagerComponent::GetAttachedPowerConsumerInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetAttachedPowerConsumerInfo");

	Params::JunoPowerManagerComponent_GetAttachedPowerConsumerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetCurrentPowerCapacity
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJunoPowerManagerComponent::GetCurrentPowerCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetCurrentPowerCapacity");

	Params::JunoPowerManagerComponent_GetCurrentPowerCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetCurrentPowerCapacityPercent
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJunoPowerManagerComponent::GetCurrentPowerCapacityPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetCurrentPowerCapacityPercent");

	Params::JunoPowerManagerComponent_GetCurrentPowerCapacityPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetCurrentPowerItem
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UFortWorldItem*             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortWorldItem* UJunoPowerManagerComponent::GetCurrentPowerItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetCurrentPowerItem");

	Params::JunoPowerManagerComponent_GetCurrentPowerItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetCurrentPowerItemDurability
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJunoPowerManagerComponent::GetCurrentPowerItemDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetCurrentPowerItemDurability");

	Params::JunoPowerManagerComponent_GetCurrentPowerItemDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetMaxPowerCapacity
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJunoPowerManagerComponent::GetMaxPowerCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetMaxPowerCapacity");

	Params::JunoPowerManagerComponent_GetMaxPowerCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetMaxPowerItemDurability
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJunoPowerManagerComponent::GetMaxPowerItemDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetMaxPowerItemDurability");

	Params::JunoPowerManagerComponent_GetMaxPowerItemDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetMaxPowerItemsCount
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UJunoPowerManagerComponent::GetMaxPowerItemsCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetMaxPowerItemsCount");

	Params::JunoPowerManagerComponent_GetMaxPowerItemsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetPowerCenterInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AJunoPowerCenter*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AJunoPowerCenter* UJunoPowerManagerComponent::GetPowerCenterInUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetPowerCenterInUse");

	Params::JunoPowerManagerComponent_GetPowerCenterInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JunoPowerSystemRuntime.JunoPowerManagerComponent.GetRemainingPowerItemsCount
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UJunoPowerManagerComponent::GetRemainingPowerItemsCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JunoPowerManagerComponent", "GetRemainingPowerItemsCount");

	Params::JunoPowerManagerComponent_GetRemainingPowerItemsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

