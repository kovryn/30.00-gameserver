#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimCoreRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PilgrimCoreRuntime_structs.hpp"
#include "SparksDanceEmotesRuntime_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayAbilities_classes.hpp"
#include "EnhancedInput_classes.hpp"
#include "GameplayEventRouter_structs.hpp"
#include "ModularGameplay_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "PlayspaceSystem_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "EpicMediaBasePlayer_structs.hpp"
#include "SparksCosmeticsRuntime_classes.hpp"
#include "SparksCoreRuntime_structs.hpp"
#include "Harmonix_structs.hpp"
#include "CommonInput_structs.hpp"
#include "SparksMidiParser_structs.hpp"
#include "SparksMidiParser_classes.hpp"
#include "SparksMusicPlayspaceRuntime_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "SparksCMS_structs.hpp"
#include "FMCoreRuntime_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class PilgrimCoreRuntime.NetworkedMusicClockManager
// 0x0268 (0x0308 - 0x00A0)
class UNetworkedMusicClockManager final : public UGameFrameworkComponent
{
public:
	uint8                                         Pad_A0[0x88];                                      // 0x00A0(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnStartSongSyncCountdown;                          // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 BeatNumber, int32 BeatInBar)> OnBeatEvent;                   // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 BarNumber)> OnBarEvent;                                      // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMusicClockComponent*                   OwnedMusicClockComponent;                          // 0x0158(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAudioComponent>         WeakMetasoundPlayer;                               // 0x0160(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAudioComponent>         WeakMetasoundMixer;                                // 0x0168(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ServerStartTime;                                   // 0x0170(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSongTimestampData                     CurrentSongServerTimestamp;                        // 0x0178(0x0048)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TimeToStartSyncedClock;                            // 0x01C0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FTimerHandle                           ClientLatencyCatchupTimerHandle;                   // 0x01E8(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                           ServerTimestampRecordingTimerHandle;               // 0x01F0(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ServerTimestampRecordingFrequency;                 // 0x01F8(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinDeltaForSeek;                                   // 0x0220(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinDeltaForSpeedAdjust;                            // 0x0248(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         EndCorrectionDelta;                                // 0x0270(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SpeedAdjustmentFactor;                             // 0x0298(0x0028)(Edit, NativeAccessSpecifierPrivate)
	float                                         CurrentSpeed;                                      // 0x02C0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   MetasoundSpeedParamName;                           // 0x02C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   MetasoundSeekParamName;                            // 0x02C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   MetasoundTriggerName;                              // 0x02CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   MetasoundOuputPinName;                             // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetasoundGeneratorHandle*              MetasoundPlayerGeneratorHandle;                    // 0x02D8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMetasoundParameterPack*                MetasoundPlayerSeekParamPack;                      // 0x02E0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EPilgrimSongPlayMethod                        PlayMethod;                                        // 0x02E8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventListenerHandle           SongLoadedGameplayEventHandle;                     // 0x02EC(0x001C)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBar(int32 BarNumber);
	void OnBeat(int32 BeatNumber, int32 BeatInBar);
	void OnRep_CurrentSongServerTimestamp();
	void OnRep_ServerStartTime();
	void PlayServerAuthoritativeSong(class UPilgrimSongMetadata* SongToPlay);
	void SetClientAudioComponentsToUse(class UAudioComponent* InMetasoundPlayer, class UAudioComponent* InMetasoundMixer);

	class UMusicClockComponent* GetOwnedMusicClock() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NetworkedMusicClockManager">();
	}
	static class UNetworkedMusicClockManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNetworkedMusicClockManager>();
	}
};

// Class PilgrimCoreRuntime.PilgramGuitarTiltOverdriveTrigger
// 0x0000 (0x0050 - 0x0050)
class UPilgramGuitarTiltOverdriveTrigger final : public UInputTrigger
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgramGuitarTiltOverdriveTrigger">();
	}
	static class UPilgramGuitarTiltOverdriveTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgramGuitarTiltOverdriveTrigger>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAbilityTask_WaitForBars
// 0x0020 (0x0098 - 0x0078)
class UPilgrimAbilityTask_WaitForBars final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnBarHit;                                          // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         BarCount;                                          // 0x0088(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         TargetBar;                                         // 0x008C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         EndAfterHits;                                      // 0x0090(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CurrentIteration;                                  // 0x0094(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UPilgrimAbilityTask_WaitForBars* WaitForBars(class UGameplayAbility* OwningAbility, int32 BarsToWaitFor, int32 LoopFor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAbilityTask_WaitForBars">();
	}
	static class UPilgrimAbilityTask_WaitForBars* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAbilityTask_WaitForBars>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAbilityTask_WaitForBeats
// 0x0020 (0x0098 - 0x0078)
class UPilgrimAbilityTask_WaitForBeats final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnBeatHit;                                         // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         BeatCount;                                         // 0x0088(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         TargetBeat;                                        // 0x008C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         EndAfterHits;                                      // 0x0090(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CurrentIteration;                                  // 0x0094(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UPilgrimAbilityTask_WaitForBeats* WaitForBeats(class UGameplayAbility* OwningAbility, int32 BeatsToWaitFor, int32 LoopFor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAbilityTask_WaitForBeats">();
	}
	static class UPilgrimAbilityTask_WaitForBeats* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAbilityTask_WaitForBeats>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAbilityTask_WaitForSection
// 0x0028 (0x00A0 - 0x0078)
class UPilgrimAbilityTask_WaitForSection final : public UAbilityTask
{
public:
	TMulticastInlineDelegate<void()>              OnSectionStarted;                                  // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 TargetSectionName;                                 // 0x0088(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bWaitForNextSection;                               // 0x0098(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimAbilityTask_WaitForSection* WaitForSection(class UGameplayAbility* OwningAbility, bool bShouldWaitForNextSection, const class FString& SectionName);

	void OnSectionEvent(const class FString& SectionName, float SectionStartMs, float SectionLengthMs);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAbilityTask_WaitForSection">();
	}
	static class UPilgrimAbilityTask_WaitForSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAbilityTask_WaitForSection>();
	}
};

// Class PilgrimCoreRuntime.PilgrimActorPool
// 0x00B0 (0x00D8 - 0x0028)
class UPilgrimActorPool final : public UObject
{
public:
	struct FPilgrimActorPoolParams                ActorPoolParams;                                   // 0x0028(0x0010)(NoDestructor, NativeAccessSpecifierPrivate)
	TSet<class AActor*>                           AvailableActors;                                   // 0x0038(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TSet<class AActor*>                           InUseActors;                                       // 0x0088(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	void InitPool(const struct FPilgrimActorPoolParams& PilgrimActorPoolParams);
	void ReturnAllWidgets();
	bool TryReturnItem(class AActor* ActorToPutBack);

	int32 GetNumAvailableItems() const;
	int32 GetNumInUseItems() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimActorPool">();
	}
	static class UPilgrimActorPool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimActorPool>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAnalytics
// 0x00A8 (0x0148 - 0x00A0)
class UPilgrimAnalytics final : public UPlayspaceComponent
{
public:
	struct FMusicClockCatchUpData                 CurrentCatchUpSession;                             // 0x00A0(0x0018)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x90];                                      // 0x00B8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAnalytics">();
	}
	static class UPilgrimAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAnalytics>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAsyncAction_RequestLeaderboard
// 0x00E8 (0x0118 - 0x0030)
class UPilgrimAsyncAction_RequestLeaderboard final : public UCancellableAsyncAction
{
public:
	TMulticastInlineDelegate<void(const struct FPilgrimLeaderboardPage& ResultPage, const struct FPilgrimLeaderboardRequestParams& RequestParams)> OnSuccess; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error, const struct FPilgrimLeaderboardRequestParams& RequestParams)> OnFailure; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0xC8];                                      // 0x0050(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimAsyncAction_RequestLeaderboard* PilgrimRequestLeaderboard(class UObject* WorldContextObject, const class FName SongShortName, const class FString& SpotlightGroup, EPilgrimLeaderboardType LeaderboardType, class AFortPlayerController* RequestingPlayer, bool bFriendsOnly, bool bCenteredOnRequestingPlayer, int32 Page, bool bIsSpotlightCompetition, bool bUseCache);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAsyncAction_RequestLeaderboard">();
	}
	static class UPilgrimAsyncAction_RequestLeaderboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAsyncAction_RequestLeaderboard>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAsyncAction_RequestPersonalBest
// 0x0260 (0x0290 - 0x0030)
class UPilgrimAsyncAction_RequestPersonalBest final : public UCancellableAsyncAction
{
public:
	TMulticastInlineDelegate<void(const struct FPilgrimPersonalBestResult& PersonalBestResult, const struct FPilgrimPersonalBestParams& RequestParams)> OnSuccess; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& Error, const struct FPilgrimPersonalBestParams& RequestParams)> OnFailure; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x240];                                     // 0x0050(0x0240)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimAsyncAction_RequestPersonalBest* PilgrimRequestPersonalBest(class UObject* WorldContextObject, class AFortPlayerController* RequestingPlayer, const struct FUniqueNetIdRepl& PlayerAccountId, const class FName SongShortName, EPilgrimTrackType InstrumentType, int32 BandSize, int32 SetlistIndex, bool bUseCache);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAsyncAction_RequestPersonalBest">();
	}
	static class UPilgrimAsyncAction_RequestPersonalBest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAsyncAction_RequestPersonalBest>();
	}
};

// Class PilgrimCoreRuntime.PilgrimAsyncAction_RequestPlayerFeed
// 0x00D0 (0x0100 - 0x0030)
class UPilgrimAsyncAction_RequestPlayerFeed final : public UCancellableAsyncAction
{
public:
	TMulticastInlineDelegate<void(const struct FPilgrimPlayerFeedResult& FeedResult, const struct FPilgrimPlayerFeedParams& RequestParams)> OnSuccess; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class FText Error, const struct FPilgrimPlayerFeedParams& RequestParams)> OnFailure; // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0xB0];                                      // 0x0050(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimAsyncAction_RequestPlayerFeed* PilgrimRequestPlayerFeed(class UObject* WorldContextObject, class AFortPlayerController* RequestingPlayer, const struct FGameplayTagQuery& SongQuery, const struct FSongShortNameMatcher& SongShortNameMatcher, const TArray<EPilgrimLeaderboardType>& Leaderboards, const TArray<struct FUniqueNetIdRepl>& FriendIds, EPilgrimPlayerFeedSortType SortType, bool bAllScores, bool bRequirePlayerScore);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimAsyncAction_RequestPlayerFeed">();
	}
	static class UPilgrimAsyncAction_RequestPlayerFeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimAsyncAction_RequestPlayerFeed>();
	}
};

// Class PilgrimCoreRuntime.PilgrimBeatMarker
// 0x0060 (0x02F0 - 0x0290)
class APilgrimBeatMarker final : public AActor
{
public:
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class APilgrimNowBar>          ParentNowBarPtr;                                   // 0x0298(0x0020)(BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B8[0x38];                                     // 0x02B8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBeatMarkerPassedNowBar();
	void OnPlacedOnTrack();
	void SetupNumLanes(int32 NumLanes);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimBeatMarker">();
	}
	static class APilgrimBeatMarker* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimBeatMarker>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTrackItemMgr
// 0x0038 (0x00D8 - 0x00A0)
class UPilgrimTrackItemMgr : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x4];                                       // 0x00A0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class APilgrimTrack>           Track;                                             // 0x00A4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimActorPool*                      ItemPool;                                          // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPilgrimGame>            PilgrimGame;                                       // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x18];                                      // 0x00C0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTrackItemMgr">();
	}
	static class UPilgrimTrackItemMgr* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimTrackItemMgr>();
	}
};

// Class PilgrimCoreRuntime.PilgrimBeatMarkerTrackItemMgr
// 0x0018 (0x00F0 - 0x00D8)
class UPilgrimBeatMarkerTrackItemMgr final : public UPilgrimTrackItemMgr
{
public:
	TArray<class APilgrimBeatMarker*>             ActiveBeatMarkers;                                 // 0x00D8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimBeatMarkerTrackItemMgr">();
	}
	static class UPilgrimBeatMarkerTrackItemMgr* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimBeatMarkerTrackItemMgr>();
	}
};

// Class PilgrimCoreRuntime.PilgrimBeatValidatedAbility
// 0x0088 (0x0BC8 - 0x0B40)
class UPilgrimBeatValidatedAbility final : public UFortGameplayAbility
{
public:
	struct FScalableFloat                         MaxTimeDelta;                                      // 0x0B40(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinClosenessToBeatMsForBonus;                      // 0x0B68(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MinServerClosenessToBeatMsForBonus;                // 0x0B90(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayAbility>           AbilityToRunForOnBeat;                             // 0x0BB8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayAbility>           AbilityToRunForOffBeat;                            // 0x0BC0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBeatAbilityActivated(bool bOnBeat);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimBeatValidatedAbility">();
	}
	static class UPilgrimBeatValidatedAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimBeatValidatedAbility>();
	}
};

// Class PilgrimCoreRuntime.PilgrimClientSettingRecordPartition
// 0x00D8 (0x0100 - 0x0028)
class UPilgrimClientSettingRecordPartition final : public UFortClientSettingRecordPartition
{
public:
	float                                         TrackSpeedMultiplier;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrackBackgroundOpacity;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseAlternative5LaneTouchLayout;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGuitarLeftyFlip;                               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseProColorsForAllParts;                          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNonProTrackInputButtonVisibility;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProTrackInputButtonVisibility;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         KeyboardAndMouseGeneralPresetIndex;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KeyboardAndMouseExpertPresetIndex;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ControllerGeneralPresetIndex;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ControllerExpertPresetIndex;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPilgrimPresetConfiguration*            PilgrimPresetConfiguration;                        // 0x0048(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SelectedGeneralControllerPreset;                   // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<uint8, int32>                            SelectedControllerPresetIndices;                   // 0x0060(0x0050)(NativeAccessSpecifierPublic)
	TMap<uint8, int32>                            SelectedKeyboardAndMousePresetIndices;             // 0x00B0(0x0050)(NativeAccessSpecifierPublic)

public:
	void SetControllerExpertPresetIndex(int32 NewIndex);
	void SetControllerGeneralPresetIndex(int32 NewIndex);
	void SetIsGuitarLeftyFlip(bool bNewUseGuitarLeftyFlip);
	void SetKeyboardAndMouseExpertPresetIndex(int32 NewIndex);
	void SetKeyboardAndMouseGeneralPresetIndex(int32 NewIndex);
	void SetNonProTrackInputButtonVisibility(bool bNewNonProTrackInputButtonVisibility);
	void SetProTrackInputButtonVisibility(bool bNewProTrackInputButtonVisibility);
	void SetSelectedGeneralControllerPreset(const class FString& NewSelectedGeneralControllerPreset);
	void SetTrackBackgroundOpacity(float NewOpacity);
	void SetTrackSpeedMultiplier(float NewMultiplier);
	void SetUseAlternative5LaneTouchLayout(bool NewUseAlternative5LaneTouchLayout);
	void SetUseProColorsForAllParts(bool bNewUseProColorsForAllParts);

	int32 GetControllerExpertPresetIndex() const;
	int32 GetControllerGeneralPresetIndex() const;
	bool GetIsGuitarLeftyFlip() const;
	int32 GetKeyboardAndMouseExpertPresetIndex() const;
	int32 GetKeyboardAndMouseGeneralPresetIndex() const;
	bool GetNonProTrackInputButtonVisibility() const;
	bool GetProTrackInputButtonVisibility() const;
	class FString GetSelectedGeneralControllerPreset() const;
	float GetTrackBackgroundOpacity() const;
	float GetTrackSpeedMultiplier() const;
	bool GetUseAlternative5LaneTouchLayout() const;
	bool GetUseProColorsForAllParts() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimClientSettingRecordPartition">();
	}
	static class UPilgrimClientSettingRecordPartition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimClientSettingRecordPartition>();
	}
};

// Class PilgrimCoreRuntime.PilgrimCoreBandStateComponent
// 0x0010 (0x00B0 - 0x00A0)
class UPilgrimCoreBandStateComponent : public UPlayspaceComponent
{
public:
	TArray<class FName>                           OwnedSongs;                                        // 0x00A0(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	void OnRep_OwnedSongs();

	class UPilgrimSongMetadata* GetCurrentSong() const;
	class UPilgrimSongMetadata* GetNextSong() const;
	class UPilgrimSongMetadata* GetSongAtIndex(int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimCoreBandStateComponent">();
	}
	static class UPilgrimCoreBandStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimCoreBandStateComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimCorePlayerStateComponent
// 0x0018 (0x00C0 - 0x00A8)
class UPilgrimCorePlayerStateComponent : public USparksPlayerStateComponent
{
public:
	TMulticastInlineDelegate<void(EPilgrimPeripheralInputMode PlasticInstrumentInputMode)> OnPeripheralInputModeChanged; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EPilgrimSongDifficulty                        SongDifficulty;                                    // 0x00B8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EPilgrimTrackType                             InstrumentChoice;                                  // 0x00B9(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsReady;                                          // 0x00BA(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPregameChoicesLocked;                             // 0x00BB(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimCorePlayerStateComponent* GetPilgrimCorePlayerStateComponent(const class APlayerState* PlayerState);

	void OnRep_InstrumentChoice(EPilgrimTrackType PrevInstrument);
	void OnRep_IsReady(bool bPrevIsReady);
	void OnRep_SongDifficulty(EPilgrimSongDifficulty PrevDifficulty);
	void ServerSetIsReady(bool bInIsReady);
	void SetInstrumentChoice(EPilgrimTrackType Instrument);
	void SetSongDifficulty(EPilgrimSongDifficulty Difficulty);

	EPilgrimTrackType GetInstrumentChoice() const;
	bool GetIsReady() const;
	EPilgrimSongDifficulty GetSongDifficulty() const;
	EPilgrimTrackType GetTrackTypeForGameplay() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimCorePlayerStateComponent">();
	}
	static class UPilgrimCorePlayerStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimCorePlayerStateComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimCore_BPFL
// 0x0000 (0x0028 - 0x0028)
class UPilgrimCore_BPFL final : public UBlueprintFunctionLibrary
{
public:
	static float GetPlatformTimeSeconds();
	static bool InstrumentTypesAreEqual(ESparksInstrumentType SparksType, EPilgrimTrackType PilgrimType);
	static bool IsGuitarPeripheralAllowed(const class UObject* WorldContextObject);
	static EPilgrimTrackType MidiTrackNameToPilgrimTrackType(const class FString& MidiTrackName);
	static class FString PilgrimTrackTypeToMidiTrackName(EPilgrimTrackType PilgrimType);
	static ESparksInstrumentType PilgrimTrackTypeToSparksInstrument(EPilgrimTrackType PilgrimType);
	static bool ShouldUseTouchUIForLocalPlayer(const class UObject* WorldContextObject);
	static EPilgrimTrackType SparksInstrumentToPilgrimTrackType(ESparksInstrumentType SparksType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimCore_BPFL">();
	}
	static class UPilgrimCore_BPFL* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimCore_BPFL>();
	}
};

// Class PilgrimCoreRuntime.PilgrimCustomSetlist
// 0x0048 (0x00E8 - 0x00A0)
class UPilgrimCustomSetlist final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UPilgrimCustomSetlist* Setlist, bool bIsLocked)> OnLockedStateChanged; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPilgrimCustomSetlistEntry>     SetlistEntries;                                    // 0x00D0(0x0010)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxSongsPerPlayer;                                 // 0x00E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsSetlistLocked;                                  // 0x00E4(0x0001)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_MaxSongsPerPlayer(int32 PrevMax);
	void OnRep_SetlistEntries();
	void ServerAddSongForPlayer(class FName SongShortName, class APlayerState* Player);
	void ServerRemoveAllSongs();
	void ServerRemoveAllSongsForPlayer(class APlayerState* Player);
	void ServerRemoveSongAtIndex(int32 Index_0, class FName SongShortName, class APlayerState* Player);
	void ServerRemoveSongForPlayer(class FName SongShortName, class APlayerState* Player, bool bRemoveAll);
	void ServerSetIsSetlistLocked(bool bInIsLocked);
	void ServerSetMaxSongsPerPlayer(int32 NewMax);

	bool CanAddSongForPlayer(class FName SongShortName, class APlayerState* Player, EPilgrimCantAddSongReason* OutReason, class APlayerState** OutAddedByPlayer) const;
	void FindEntriesForPlayer(class APlayerState* Player, TArray<int32>* OutMatchingEntryIndicies) const;
	void FindEntriesForSong(class FName SongShortName, TArray<int32>* OutMatchingEntryIndicies) const;
	void FindEntriesForSongAndPlayer(class FName SongShortName, class APlayerState* Player, TArray<int32>* OutMatchingEntryIndicies) const;
	bool GetIsSetlistLocked() const;
	int32 GetMaxSongsPerPlayer() const;
	void GetSetlistEntryAtIndex(int32 Index_0, class FName* OutSongShortName, class APlayerState** OutAddedByPlayer) const;
	TArray<class FName> GetSongsAddedByPlayer(class APlayerState* Player) const;
	bool HasAnyoneAddedSong(class FName SongShortName, class APlayerState** OutAddedByPlayer) const;
	bool HasPlayerAddedSong(class FName SongShortName, class APlayerState* Player) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimCustomSetlist">();
	}
	static class UPilgrimCustomSetlist* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimCustomSetlist>();
	}
};

// Class PilgrimCoreRuntime.PilgrimDanceSynchronizerComponent
// 0x0038 (0x0130 - 0x00F8)
class UPilgrimDanceSynchronizerComponent final : public USparksDanceSynchronizerComponent
{
public:
	uint8                                         Pad_F8[0x38];                                      // 0x00F8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimDanceSynchronizerComponent">();
	}
	static class UPilgrimDanceSynchronizerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimDanceSynchronizerComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimDelayUntilTimeBeforeMidiTick
// 0x0030 (0x0060 - 0x0030)
class UPilgrimDelayUntilTimeBeforeMidiTick final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class UObject* PassthroughObject)> OnFinished;                     // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimGame*                           PilgrimGame;                                       // 0x0050(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                Passthrough;                                       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UPilgrimDelayUntilTimeBeforeMidiTick* PilgrimDelayUntilTimeBeforeMidiTick(class UObject* PassthroughObject, class UPilgrimGame* PilgrimGameContext, int32 MidiTick, float SecondsBeforeTick, ECalibratedMusicTimebase Timebase);

	void TimerTick();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimDelayUntilTimeBeforeMidiTick">();
	}
	static class UPilgrimDelayUntilTimeBeforeMidiTick* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimDelayUntilTimeBeforeMidiTick>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGame
// 0x0640 (0x06E0 - 0x00A0)
class UPilgrimGame final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FPilgrimGameProgress& Score)> OnGameScoreUpdated;     // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnSongEnded;                                       // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x10];                                      // 0x00D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool Enabled)>  OnAutoplayUpdated;                                 // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool Enabled)>  OnDisableMissUpdated;                              // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         CurrentSeekMs;                                     // 0x0100(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpMarkerStart;                                   // 0x0104(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpMarkerEnd;                                     // 0x0108(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimScoringModel*                   ScoringModel;                                      // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPilgrimGameConfig*                     PilgrimGameConfig;                                 // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimPlayerControllerComponent*      OwnerControllerComponent;                          // 0x0130(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                        MetasoundPlayer;                                   // 0x0138(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                        MetasoundMixer;                                    // 0x0140(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMusicClockComponent*                   MusicClock;                                        // 0x0148(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMetasoundGeneratorHandle*              MetasoundPlayerGeneratorHandle;                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMetasoundParameterPack*                MetasoundPlayerSeekParamPack;                      // 0x0158(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimMediaStreamer*                  PilgrimMediaStreamer;                              // 0x0160(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APilgrimTrack*                          MainTrack;                                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundBase*                             MissSound;                                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimGameEvaluator*                  PilgrimGameEvaluator;                              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<EPilgrimTrackLane, struct FPilgrimGameInProgressSustain> InProgressSustains;                // 0x0180(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D0[0x438];                                    // 0x01D0(0x0438)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimSongData*                       SongData;                                          // 0x0608(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_610[0x18];                                     // 0x0610(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimMidiEventRouter*                MidiEventRouter;                                   // 0x0628(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_630[0xB0];                                     // 0x0630(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddTrack(class APilgrimTrack* Track);
	void ApplySettingsFromConfig(const class UPilgrimGameConfig* GameConfig);
	void CheatEndSong();
	void CheatSetJumpMarkers(const class FString& FromTime, const class FString& ToTime);
	void CheatSetPerformanceData(const struct FPilgrimCheatPerformanceArgument& PerformanceArgument);
	void EndGame(bool bFadeOut, float FadeOutDurationSeconds);
	const struct FPilgrimGameConfigSettings GetGameConfigSettings();
	int32 GetNumLanes();
	void OnControlMappingsRebuilt();
	void OnEndedByServer();
	void OnInputMethodChanged(ECommonInputType CurrentInputType);
	void OnMusicReachedEndOfPlayback();
	void OnMusicResumed();
	void PlaySong(class UAudioComponent* InMetasoundPlayer, class UAudioComponent* InMetasoundMixer, class UMusicClockComponent* InMusicClock, class UPilgrimSongMetadata* InSong);
	void PlaySongStreamed(class UAudioComponent* InMetasoundPlayer, class UAudioComponent* InMetasoundMixer, class UMusicClockComponent* InMusicClock, class UPilgrimMediaStreamer* InStreamer);
	void ProcessSwing(EPilgrimTrackLane Lane, bool bIsPress);
	void SeekToTime(int32 Milliseconds);
	void SetDifficultyAndTrackType(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType);
	void SetJumpMarkers(const int32 FromMillisecnods, const int32 ToMilliseconds);
	void SetLocalPlayer(class APlayerController* OwnerPC);
	void StopSong();

	struct FPilgrimSongMeasurePosition GetCurrentMeasureBeatTick() const;
	float GetCurrentODValue() const;
	float GetCurrentSongMs(ECalibratedMusicTimebase InTimebase) const;
	float GetCurrentSongTick(ECalibratedMusicTimebase InTimebase) const;
	bool GetGemBreakForTrackDifficulty(EPilgrimTrackType Track, EPilgrimSongDifficulty Difficulty, struct FPilgrimGemBreak* FoundBreak, float* BarsLeftInBreak, struct FPilgrimGemBreak* NextBreak, float* BarsTillNextBreak) const;
	float GetHitOffsetAverage() const;
	class FName GetInputNameForLane(EPilgrimTrackLane Lane) const;
	struct FKey GetKeyBoundToLane(EPilgrimTrackLane Lane) const;
	class APlayerController* GetLocalPlayerController() const;
	class APilgrimTrack* GetMainTrack() const;
	class UMusicClockComponent* GetMusicClock() const;
	EPilgrimSongDifficulty GetSelectedDifficulty() const;
	EPilgrimTrackType GetSelectedTrackType() const;
	float GetSongLengthMs() const;
	float GetTotalSecondsSinceGameEnd() const;
	bool IsAutoplayEnabled() const;
	bool IsDisableMissEnabled() const;
	bool IsGameEnded() const;
	bool IsInputSpecificGemShapesEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGame">();
	}
	static class UPilgrimGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGame>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGameConfig
// 0x0438 (0x0468 - 0x0030)
class UPilgrimGameConfig final : public UPrimaryDataAsset
{
public:
	struct FPilgrimSongSettings                   SongSettings;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FPilgrimGameConfigSettings             ConfigSettings;                                    // 0x0040(0x0398)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class USoundBase*                             MissSound;                                         // 0x03D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHp;                                             // 0x03E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamagePerHit;                                      // 0x03E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EFortRarity, float>                      WeaponRarityToNoteDamage;                          // 0x03E8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FPilgrimStreakInfo>             StreakDefinitions;                                 // 0x0438(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UAnimBoneCompressionSettings*>   SideloadLipsyncAnim_BoneCompressionSettings;       // 0x0448(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimCurveCompressionSettings*>  SideloadLipsyncAnim_CurveCompressionSettings;      // 0x0458(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGameConfig">();
	}
	static class UPilgrimGameConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGameConfig>();
	}
};

// Class PilgrimCoreRuntime.PilgrimInstrumentConfig
// 0x00B8 (0x00E8 - 0x0030)
class UPilgrimInstrumentConfig final : public UPrimaryDataAsset
{
public:
	TArray<struct FPilgrimScoreMultiplierInfo>    ScoreMultiplierDefinitions;                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TOptional<int32>                              SustainScorePerBeat;                               // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EPilgrimSongDifficulty, struct FStarPercentageThresholds> IndividualStarPercentageThresholds; // 0x0048(0x0050)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	TMap<EPilgrimSongDifficulty, float>           BaseGemScoreValue;                                 // 0x0098(0x0050)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimInstrumentConfig">();
	}
	static class UPilgrimInstrumentConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimInstrumentConfig>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGameDeveloperSettings
// 0x0018 (0x0048 - 0x0030)
class UPilgrimGameDeveloperSettings final : public UDeveloperSettings
{
public:
	struct FPilgrimSongSettings                   SongOverrides;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bEnforceSongEntitlements;                          // 0x0040(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGameDeveloperSettings">();
	}
	static class UPilgrimGameDeveloperSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGameDeveloperSettings>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGameUserSettings
// 0x0008 (0x0030 - 0x0028)
class UPilgrimGameUserSettings final : public UObject
{
public:
	EPilgrimSongDifficulty                        SongDifficulty;                                    // 0x0028(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPilgrimTrackType                             SelectedInstrument;                                // 0x0029(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetSelectedInstrument(EPilgrimTrackType NewInstrument);
	void SetSongDifficulty(EPilgrimSongDifficulty NewDifficulty);

	EPilgrimTrackType GetSelectedInstrument() const;
	EPilgrimSongDifficulty GetSongDifficulty() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGameUserSettings">();
	}
	static class UPilgrimGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGameUserSettings>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGem
// 0x0088 (0x0318 - 0x0290)
class APilgrimGem final : public AActor
{
public:
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APilgrimGem* Gem)> OnGemSmashFinished;                       // 0x0298(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APilgrimGem* Gem)> OnGemEnteredSlopWindow;                   // 0x02A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class APilgrimGem* Gem)> OnGemExitedSlopWindow;                    // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APilgrimGemSmasher>      ParentSmasherPtr;                                  // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPilgrimGame>            ParentGamePtr;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APilgrimTrackSustain*                   RelatedSustain;                                    // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x38];                                     // 0x02E0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AllowHitByInput(bool bIsPressInput, EPilgrimTrackLane Lane);
	void FinishGemSmash();
	void OnGemInputUpdated(const struct FKey& BoundKey);
	void OnGemPassed();
	void OnGemSmashed();
	void OnLaneSet(const struct FTrackItemInfo& Gem);
	void UpdateGemInput();

	EPilgrimTrackLane GetLane() const;
	bool IsOverdriveGem() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGem">();
	}
	static class APilgrimGem* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimGem>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGemAnalyzer
// 0x0138 (0x01D8 - 0x00A0)
class UPilgrimGemAnalyzer final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FParsedMidiTextEvent& EventData)> OnGameplayEventStarted; // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FPilgrimDifficultyTrackTypePair, struct FPilgrimGemDensityDataArray> SongSectionGemDensityDataMap; // 0x00C0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FPilgrimDifficultyTrackTypePair, struct FPilgrimGemDensityDataArray> GameplaySectionGemDensityDataMap; // 0x0110(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_160[0x50];                                     // 0x0160(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MinimumEmptyBarsForBreak;                          // 0x01B0(0x0028)(Edit, NativeAccessSpecifierPrivate)

public:
	static class UPilgrimGemAnalyzer* GetPilgrimGemAnalyzer(class UObject* WorldContextObject);
	static const class UPilgrimSongData* GetPilgrimSongData(class UObject* WorldContextObject);

	void GetGemBreaks(EPilgrimTrackType TrackType, EPilgrimSongDifficulty Difficulty, TArray<struct FPilgrimGemBreak>* OutGemBreaks);
	void GetGemDensityDataForAllGameplaySections(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, TArray<struct FPilgrimGemDensityData>* OutGemDensityData);
	void GetGemDensityDataForAllSongSections(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, TArray<struct FPilgrimGemDensityData>* OutGemDensityData);
	const struct FPilgrimGemDensityData GetGemDensityDataForGameplaySection(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, int32 SectionIndexToFind);
	const struct FPilgrimGemDensityData GetGemDensityDataForSongSection(EPilgrimSongDifficulty Difficulty, EPilgrimTrackType TrackType, int32 SectionIndexToFind);

	bool GetGemBreakForTrackDifficultyMs(EPilgrimTrackType Track, EPilgrimSongDifficulty Difficulty, float SongMs, struct FPilgrimGemBreak* FoundBreak, struct FPilgrimGemBreak* NextBreak) const;
	const class UPilgrimSongData* GetSongData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGemAnalyzer">();
	}
	static class UPilgrimGemAnalyzer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGemAnalyzer>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGemBreakListener
// 0x0098 (0x00C0 - 0x0028)
class UPilgrimGemBreakListener final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ForActor;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPilgrimSongDifficulty                        Difficulty;                                        // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPilgrimTrackType                             TrackType;                                         // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPilgrimGemBreak                       InBreak;                                           // 0x0044(0x0024)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsLocalPlayer;                                    // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPilgrimGemBreak                       LastPendingGemBreak;                               // 0x006C(0x0024)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         LastProcessedSongMs;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPilgrimSongData>        SongDataWeak;                                      // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInitalized;                                       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9D[0x23];                                      // 0x009D(0x0023)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGemBreakListener">();
	}
	static class UPilgrimGemBreakListener* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGemBreakListener>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGemSmasher
// 0x0018 (0x02A8 - 0x0290)
class APilgrimGemSmasher final : public AActor
{
public:
	class USplineComponent*                       GemSplinePath;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SplineStartInputKey;                               // 0x0298(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SplineOriginInputKey;                              // 0x029C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SplineEndInputKey;                                 // 0x02A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginSustainHoldEffect(bool bIsOverdrive);
	void EndSustainHoldEffect();
	void OnInputPressed();
	void OnInputReleased();
	void OnInputUpdated(const struct FKey& BoundKey);
	void OverdriveFailedDuringSustainHold();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGemSmasher">();
	}
	static class APilgrimGemSmasher* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimGemSmasher>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGemTrackItemMgr
// 0x00B8 (0x0190 - 0x00D8)
class UPilgrimGemTrackItemMgr final : public UPilgrimTrackItemMgr
{
public:
	TMap<struct FPilgrimTrackItemKey, class APilgrimGem*> ActiveGemsMap;                             // 0x00D8(0x0050)(NativeAccessSpecifierPrivate)
	TArray<class APilgrimGem*>                    ActiveGems;                                        // 0x0128(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TSet<class APilgrimGem*>                      GemsInSlopWindow;                                  // 0x0138(0x0050)(NativeAccessSpecifierPrivate)
	class UPilgrimSustainTrackItemMgr*            SustainTrackItemMgr;                               // 0x0188(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnGemSmashFinished(class APilgrimGem* Gem);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGemTrackItemMgr">();
	}
	static class UPilgrimGemTrackItemMgr* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGemTrackItemMgr>();
	}
};

// Class PilgrimCoreRuntime.PilgrimInputConfig
// 0x00C0 (0x00F0 - 0x0030)
class UPilgrimInputConfig final : public UPrimaryDataAsset
{
public:
	TMap<class UInputAction*, EPilgrimTrackLane>  InputActionToPilgrimLanePress;                     // 0x0030(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<class UInputAction*, EPilgrimTrackLane>  InputActionToPilgrimLaneRelease;                   // 0x0080(0x0050)(Edit, NativeAccessSpecifierPublic)
	class UInputAction*                           OverdriveInputAction;                              // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           Overdrive5LaneInputAction;                         // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           GuitarStrumInputAction;                            // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                           Modulate;                                          // 0x00E8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimInputConfig">();
	}
	static class UPilgrimInputConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimInputConfig>();
	}
};

// Class PilgrimCoreRuntime.PilgrimLeaderboardLibrary
// 0x0000 (0x0028 - 0x0028)
class UPilgrimLeaderboardLibrary final : public UBlueprintFunctionLibrary
{
public:
	static EPilgrimLeaderboardType BandLeaderboardTypeFromSize(int32 Size);
	static int32 BandSizeFromLeaderboardType(EPilgrimLeaderboardType LeaderboardType);
	static struct FGameplayTag GetGameplayTagFromInstrument(EPilgrimTrackType Instrument);
	static EPilgrimTrackType GetInstrumentFromGameplayTag(const struct FGameplayTag& InstrumentGametag);
	static EPilgrimTrackType InstrumentFromSoloLeaderboardType(EPilgrimLeaderboardType LeaderboardType);
	static bool IsBandLeaderboard(EPilgrimLeaderboardType LeaderboardType);
	static bool IsSoloLeaderboard(EPilgrimLeaderboardType LeaderboardType);
	static EPilgrimLeaderboardType LeaderboardTypeFromString(const class FString& LeaderboardString);
	static class FString LeaderboardTypeToString(EPilgrimLeaderboardType LeaderboardType);
	static EPilgrimLeaderboardType SoloLeaderboardTypeFromInstrument(EPilgrimTrackType Instrument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimLeaderboardLibrary">();
	}
	static class UPilgrimLeaderboardLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimLeaderboardLibrary>();
	}
};

// Class PilgrimCoreRuntime.PilgrimLeaderboardManager
// 0x0458 (0x04F8 - 0x00A0)
class UPilgrimLeaderboardManager final : public UGameStateComponent
{
public:
	uint8                                         Pad_A0[0x60];                                      // 0x00A0(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<uint32, class UPilgrimRequestFriendScoreWrapper*> RequestCacheWrapperMap;                   // 0x0100(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_150[0x3A8];                                    // 0x0150(0x03A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimLeaderboardManager">();
	}
	static class UPilgrimLeaderboardManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimLeaderboardManager>();
	}
};

// Class PilgrimCoreRuntime.PilgrimLeaderboardPlayerComponent
// 0x0120 (0x01C0 - 0x00A0)
class UPilgrimLeaderboardPlayerComponent final : public UControllerComponent
{
public:
	TMulticastInlineDelegate<void(const struct FPilgrimPlayerFeedResultEntry& HighestFriendEntry, int32 TotalFriendsSurpassed)> OnFriendsSurpassed; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bOptionEnabled)> OnBandFriendLeaderboardOptionChanged;        // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         bEnableBandFriendLeaderboardOption : 1;            // 0x00C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_C1[0xE7];                                      // 0x00C1(0x00E7)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FriendPopupTimeSeconds;                            // 0x01A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AC[0x14];                                     // 0x01AC(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CheckPlayerScoreForFriendSurpasser(int32 CurrentScore);
	void ClientCachePlayerFriendsHistoryComplete(const struct FPilgrimPlayerHistoryParams& HistoryParams, const TArray<struct FPilgrimPlayerHistoryResult>& Results, int32 RequestID);
	void ClientRequestSpotlightCompetitionsComplete(const struct FPilgrimSpotlightCompetitionParams& Params_0, const TArray<struct FPilgrimSpotlightCompetition>& SpotlightCompetitions, int32 RequestID);
	void GetPostMatchFriendRankAndDelta(const int32 FinalScore, int32* OutRank, int32* OutDelta);
	void OnRep_ChangedBandFriendLeaderboardOption();
	void ServerCachePlayerFriendsHistory(const struct FPilgrimPlayerHistoryParams& HistoryParams, const TArray<struct FUniqueNetIdRepl>& FriendAccountIds, int32 RequestID);
	void ServerRequestSpotlightCompetitions(const struct FPilgrimSpotlightCompetitionParams& Params_0, int32 RequestID);
	void SetCurrentSetlistInfo(class FName SongShortName, EPilgrimTrackType Instrument);
	void SetFriendFeedCache(const struct FPilgrimPlayerFeedResult& FeedResult);

	void GetSpotlightCompetitions(const struct FPilgrimGetSpotlightParams& SpotlightParams, TArray<struct FPilgrimSpotlightCompetition>* OutCompetitions) const;
	bool IsBandFriendLeaderboardEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimLeaderboardPlayerComponent">();
	}
	static class UPilgrimLeaderboardPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimLeaderboardPlayerComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimMediaStreamer
// 0x0048 (0x00E8 - 0x00A0)
class UPilgrimMediaStreamer final : public UActorComponent
{
public:
	class UStemConfiguration*                     BusStemConfiguration;                              // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPilgrimSongMetadata*                   Song;                                              // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBaseStreamingVideo*                FortBaseStreaming;                                 // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStemmedMediaStreamAsset*               StemmedMediaStreamAsset;                           // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMidiFile*                              MidiFile;                                          // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStreamerPrepared;                                // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EPilgrimStreamerStatus                        StreamingStatus;                                   // 0x00D8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeleton*                              LipSyncSkeleton;                                   // 0x00E0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnSongDataDownloaded(class UCatalogData* CatalogData, bool bSuccess);
	void OnVideoError(EBaseMediaTerminalErrorReason Reason);
	void OnVideoOpened(const class FString& OpenedUrl);
	void OnVideoOpenFailed(const class FString& FailedUrl);
	void OnVideoOpenTimeout();
	void OnVideoSuccess();
	void PlaySong();
	void PrepareSong(class UPilgrimSongMetadata* InSong);
	void Stop();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimMediaStreamer">();
	}
	static class UPilgrimMediaStreamer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimMediaStreamer>();
	}
};

// Class PilgrimCoreRuntime.PilgrimMidiEventRouter
// 0x03E0 (0x0408 - 0x0028)
class UPilgrimMidiEventRouter final : public UObject
{
public:
	uint8                                         Pad_28[0x3E0];                                     // 0x0028(0x03E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimMidiEventRouter">();
	}
	static class UPilgrimMidiEventRouter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimMidiEventRouter>();
	}
};

// Class PilgrimCoreRuntime.PilgrimNowBar
// 0x0060 (0x02F0 - 0x0290)
class APilgrimNowBar final : public AActor
{
public:
	class USplineComponent*                       BeatMarkerSplinePath;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EPilgrimTrackLane, class AActor*>        LaneToSmasherMap;                                  // 0x0298(0x0050)(Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPilgrimGame>            PilgrimGame;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnPilgrimGameSet();
	void SetGemSmasher(EPilgrimTrackLane Lane, class UChildActorComponent* Smasher);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimNowBar">();
	}
	static class APilgrimNowBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimNowBar>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessorBase
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessorBase : public UFortObjectiveProcessor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessorBase">();
	}
	static class UPilgrimObjectiveProcessorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessorBase>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_AccumulateStars
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_AccumulateStars final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_AccumulateStars">();
	}
	static class UPilgrimObjectiveProcessor_AccumulateStars* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_AccumulateStars>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_Note
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_Note final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_Note">();
	}
	static class UPilgrimObjectiveProcessor_Note* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_Note>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_OverdriveComplete
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_OverdriveComplete final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_OverdriveComplete">();
	}
	static class UPilgrimObjectiveProcessor_OverdriveComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_OverdriveComplete>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_ScoreEvent
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_ScoreEvent final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_ScoreEvent">();
	}
	static class UPilgrimObjectiveProcessor_ScoreEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_ScoreEvent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_SetlistComplete
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_SetlistComplete final : public UFortObjectiveProcessor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_SetlistComplete">();
	}
	static class UPilgrimObjectiveProcessor_SetlistComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_SetlistComplete>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_SongCompleted
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_SongCompleted final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_SongCompleted">();
	}
	static class UPilgrimObjectiveProcessor_SongCompleted* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_SongCompleted>();
	}
};

// Class PilgrimCoreRuntime.PilgrimObjectiveProcessor_SongStarted
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimObjectiveProcessor_SongStarted final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimObjectiveProcessor_SongStarted">();
	}
	static class UPilgrimObjectiveProcessor_SongStarted* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimObjectiveProcessor_SongStarted>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPartitionInitializer
// 0x0040 (0x00B0 - 0x0070)
class UPilgrimPartitionInitializer final : public UFortClientSettingRecordPartitionInitializer
{
public:
	TSoftClassPtr<class UClass>                   PilgrimPresetSelectorClass;                        // 0x0070(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPilgrimPresetConfiguration> PilgrimPresetConfiguration;                    // 0x0090(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPartitionInitializer">();
	}
	static class UPilgrimPartitionInitializer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPartitionInitializer>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPerformanceTrackerComponent
// 0x00A0 (0x0140 - 0x00A0)
class UPilgrimPerformanceTrackerComponent final : public UControllerComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPilgrimTrackLane, struct FPilgrimPerformanceTrackerData> SongPerformanceData;              // 0x00A8(0x0050)(Protected, NativeAccessSpecifierProtected)
	class UPilgrimSongMetadata*                   SongMetaData;                                      // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APilgrimTrack*                          MainTrack;                                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPilgrimGame*                           PilgrimGame;                                       // 0x0108(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayEventListenerHandle           OverdriveActiveEventHandle;                        // 0x0110(0x001C)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxStreak;                                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentStreak;                                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeInOverdriveMs;                                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          InOverdrive;                                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleOnSongEnded();
	void HandleOverdriveActiveChangedEvent(const struct FPilgrimEvent_Scoring_OverdriveActiveChanged& Payload);

	float GetAverage(ECalibratedMusicTimebase Timebase) const;
	TArray<float> GetLaneOffsets(EPilgrimTrackLane Lane, ECalibratedMusicTimebase Timebase) const;
	struct FPilgrimEvent_Scoring_PerformanceDataResult GetResultData(ECalibratedMusicTimebase Timebase) const;
	float GetSampleAverage(const TArray<float>& Samples) const;
	float GetSampleDeviation(const TArray<float>& Samples, bool IsPopulation) const;
	float GetTotalDeviation(ECalibratedMusicTimebase Timebase) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPerformanceTrackerComponent">();
	}
	static class UPilgrimPerformanceTrackerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPerformanceTrackerComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPerformanceTrackerSaveData
// 0x0050 (0x0078 - 0x0028)
class UPilgrimPerformanceTrackerSaveData final : public USaveGame
{
public:
	TMap<EPilgrimTrackLane, struct FPilgrimPerformanceTrackerData> SongPerformanceData;              // 0x0028(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPerformanceTrackerSaveData">();
	}
	static class UPilgrimPerformanceTrackerSaveData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPerformanceTrackerSaveData>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPlayerControllerComponent
// 0x02A0 (0x0340 - 0x00A0)
class UPilgrimPlayerControllerComponent final : public UControllerComponent
{
public:
	TMulticastInlineDelegate<void(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, const struct FPilgrimTimedInput& TimedInput)> OnServerTimedInputReceived; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPilgrimPlayerControllerComponent* PlayerControllerComponent)> OnServerSyncHeartbeatMessageReceived; // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerController* FortPlayerController, class UFortInputMappingContext* InputMappingContext)> OnActivateInputPreset; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerController* FortPlayerController, class UFortInputMappingContext* InputMappingContext)> OnDesiredInputPresetChanged; // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnInputSettingsChanged;                            // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, EMusicBattleClientUpdate MusicBattleUpdate)> OnMusicBattleClientUpdateReceived; // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, EPilgrimStateMachineMessage StateMachineMessage)> OnStateMachineMessageReceived; // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDataTable*                             DefaultUnbindsDataTable;                           // 0x0110(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                           CycleInputsInputAction;                            // 0x0118(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           CycleLanesInputAction;                             // 0x0128(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_130[0x8];                                      // 0x0130(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           EmotePickerInputAction;                            // 0x0138(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<uint8, class UFortInputMappingContext*>  FallbackKeyboardLaneInputMappingConfigs;           // 0x0140(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<uint8, class UFortInputMappingContext*>  FallbackControllerLaneInputMappingConfigs;         // 0x0190(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UFortInputMappingContext*               KeyboardAsPeripheralGuitarBeatmatchIMC;            // 0x01E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortInputMappingContext*               GamepadAsPeripheralGuitarBeatmatchIMC;             // 0x01E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortInputMappingContext*               PeripheralGuitarBeatmatchIMC;                      // 0x01F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortInputMappingContext*               PeripheralGuitarBeatmatchIMC_NonPro4Lanes;         // 0x01F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<uint8, struct FPilgrimLaneInputMappingConfig> LaneInputMappingConfigs;                      // 0x0200(0x0050)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FPilgrimTouchBrushesMappingConfig      TouchBrushesConfig;                                // 0x0250(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         SelectedNumInputLanes;                             // 0x0260(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInputMappingContext*               SelectedPCBeatmatchIMC;                            // 0x0268(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortInputMappingContext*               SelectedConsoleBeatmatchIMC;                       // 0x0270(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortInputMappingContext*               SelectedPeripheralBeatmatchIMC;                    // 0x0278(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_280[0x50];                                     // 0x0280(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimGameUserSettings*               PilgrimGameUserSettings;                           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UPilgrimPresetConfiguration> PilgrimPresetConfiguration;                    // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x50];                                     // 0x02E0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UPilgrimGame>            ClientPilgrimGame;                                 // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateSelectedInputMappingContexts();
	void CheckConnectedPeripherals();
	void ClientDrainOD();
	void CycleSelectedNumInputLanes();
	void CycleSelectedPreset();
	void DeactivateInputPreset();
	float GetHoldSecondsToSwitchNumLanes();
	bool GetIsCurrentDevicePeripheral();
	bool GetIsCurrentDeviceValidForTrackType();
	class UPilgrimGameUserSettings* GetPilgrimGameUserSettings();
	void HandleOnInputDeviceChanged(const struct FPlatformUserId& UserId, const struct FInputDeviceId& DeviceID);
	void LoadInputConfigurationFromPartition();
	void Multiplayer_SendRequestToLeaveStage();
	void OnEmotePicker();
	void OnPilgrimGameEnd(class UPilgrimGame* PilgrimGame);
	void OnPilgrimGameStart(class UPilgrimGame* PilgrimGame);
	void SendRequestToRestartSong();
	void SendRequestToStopAndSkipPostGame();
	void SendUpdateToMusicBattle(EMusicBattleClientUpdate MusicBattleUpdate);
	void ServerHandleStateMachineRequest(EPilgrimStateMachineMessage StateMachineMessage);
	void ServerHandleUpdateMusicBattle(EMusicBattleClientUpdate MusicBattleUpdate);
	void ServerSendSyncHeartbeatMessage();
	void ServerSendTimedInput(const struct FPilgrimTimedInput& TimedInput);
	void SetDesiredInputMappingContext(class UFortInputMappingContext* NewContext, EHardwareDevicePrimaryType DeviceType, bool bShouldUpdateSettings);
	void SetNumInputLanes(uint8 NumLanes);
	void Solo_SendRequestToLeaveStage();
	void Solo_SendRequestToPlayNextSong();
	void Solo_SendRequestToReplayPreviousSong();

	bool AreSelectedInputMappingContextsActive() const;
	class UFortInputMappingContext* FindFirstPresetMatchingCurrentKeybinds() const;
	EPilgrimPeripheralInputMode GetCurrentDevicePeripheralType() const;
	int32 GetCurrentPresetIndex() const;
	class UFortInputMappingContext* GetLastSelectedPreset() const;
	int32 GetNumRelevantInputPresets() const;
	class UPilgrimClientSettingRecordPartition* GetPilgrimClientSettingRecordPartition() const;
	class UFortInputMappingContext* GetSelectedConsoleBeamatchInputMappingContext() const;
	class UFortInputMappingContext* GetSelectedPCBeamatchInputMappingContext() const;
	class UFortInputMappingContext* GetSelectedPreset() const;
	bool GetTouchBrushForInputAction(struct FSlateBrush* OutBrush, class UInputAction* InputAction) const;
	bool HasConnectedPeripheral(EPilgrimPeripheralInputMode Peripheral) const;
	bool IsLocallyControlled() const;
	bool IsUsingGamepad() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPlayerControllerComponent">();
	}
	static class UPilgrimPlayerControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPlayerControllerComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPlayspace
// 0x0040 (0x0830 - 0x07F0)
class APilgrimPlayspace : public ASparksMusicPlayspace
{
public:
	TArray<class APilgrimMusicBattleInstance*>    PilgrimMusicBattleInstances;                       // 0x07F0(0x0010)(Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UNetworkedMusicClockManager*            MusicClockManager;                                 // 0x0800(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPilgrimPlayspaceComponent_SongPreloader* SongPreloader;                                   // 0x0808(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPilgrimMediaStreamer*                  MediaStreamer;                                     // 0x0810(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPilgrimGemAnalyzer*                    GemAnalyzer;                                       // 0x0818(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPilgrimPlayspaceComponent_LipSyncAssetManager* PilgrimLipSyncManager;                     // 0x0820(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPilgrimGameConfig*                     PilgrimGameConfig;                                 // 0x0828(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UMusicClockComponent* GetMusicClock(class UObject* WorldContextObject);
	static class UNetworkedMusicClockManager* GetNetworkedMusicClockManager(class UObject* WorldContextObject);

	void AddMusicBattleInstance(class APilgrimMusicBattleInstance* MusicBattleInstance);
	void ClearMusicBattleInstances();

	void BroadcastCameraDirectorDynamicEvent(const struct FGameplayTagContainer& TagsToSend, class AActor* Target, float ShotTimeLength, bool bWaitForTransition) const;
	void BroadcastCameraDirectorIntermissionEvent(const struct FGameplayTagContainer& TagsToSend) const;
	const TArray<class APilgrimMusicBattleInstance*> GetAllMusicBattleInstances() const;
	const class UPilgrimGameConfig* GetConfig() const;
	class APilgrimMusicBattleInstance* GetMusicBattleInstanceForPlayer(class AController* Controller) const;
	class APilgrimMusicBattleInstance* GetMusicBattleInstanceForTeam(int32 Team) const;
	class UPilgrimGame* GetPilgrimGameForTeam(int32 TeamIndex) const;
	TArray<class AFortPlayerPawnAthena*> GetStandinPlayerPawns() const;
	TArray<class AFortPlayerStateAthena*> GetStandinPlayerStates() const;
	bool HasAnotherSongToPlay() const;
	class APilgrimMusicBattleInstance* TryGetMusicBattleInstanceForTeam(int32 Team) const;
	class UPilgrimGame* TryGetPilgrimGameForPlayer(class AController* Controller) const;
	class UPilgrimGame* TryGetPilgrimGameForTeam(int32 TeamIndex) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPlayspace">();
	}
	static class APilgrimPlayspace* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimPlayspace>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPlayspaceComponent_LipSyncAssetManager
// 0x0008 (0x00D0 - 0x00C8)
class UPilgrimPlayspaceComponent_LipSyncAssetManager final : public UPlayspaceComponent_LipSyncAssetManager
{
public:
	class UAnimSequence*                          CachedLipsyncAnimSequence;                         // 0x00C8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPlayspaceComponent_LipSyncAssetManager">();
	}
	static class UPilgrimPlayspaceComponent_LipSyncAssetManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPlayspaceComponent_LipSyncAssetManager>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPremadeSetlist
// 0x0080 (0x00B0 - 0x0030)
class UPilgrimPremadeSetlist final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SetlistTitle;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class FName>                           SongShortNameList;                                 // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           SetlistTag;                                        // 0x0068(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AdditionalTags;                                    // 0x0070(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              SetlistArt;                                        // 0x0090(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPremadeSetlist">();
	}
	static class UPilgrimPremadeSetlist* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPremadeSetlist>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPresetConfiguration
// 0x0070 (0x00A0 - 0x0030)
class UPilgrimPresetConfiguration final : public UDataAsset
{
public:
	class UFortInputMappingContext*               GlobalInputMappingContext;                         // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortInputMappingContext*               CheatInputMappingContext;                          // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortInputMappingContext*               GreenRoomInputMappingContext;                      // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortInputMappingContext*               GreenRoomAltInputMappingContext;                   // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<uint8, struct FPilgrimLaneInputMappingConfig> LaneInputMappingConfigs;                      // 0x0050(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	TArray<class UFortInputMappingContext*> GetDeviceInputMappingContexts(int32 NumLanes, EHardwareDevicePrimaryType DeviceType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPresetConfiguration">();
	}
	static class UPilgrimPresetConfiguration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPresetConfiguration>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPresetSelectorBase
// 0x0000 (0x0028 - 0x0028)
class UPilgrimPresetSelectorBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPresetSelectorBase">();
	}
	static class UPilgrimPresetSelectorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPresetSelectorBase>();
	}
};

// Class PilgrimCoreRuntime.PilgrimQuestDefinitionComponent_TextFormat
// 0x0000 (0x0078 - 0x0078)
class UPilgrimQuestDefinitionComponent_TextFormat final : public UFortQuestDefinitionComponent_TextFormat
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuestDefinitionComponent_TextFormat">();
	}
	static class UPilgrimQuestDefinitionComponent_TextFormat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuestDefinitionComponent_TextFormat>();
	}
};

// Class PilgrimCoreRuntime.PilgrimQuestLibrary
// 0x0000 (0x0028 - 0x0028)
class UPilgrimQuestLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void GetFilteredQuests(TArray<TScriptInterface<class IQuestInstanceInterface>>* OutQuests, const class APlayerState* Player, const struct FPilgrimQuestFilter& Filter);
	static struct FPilgrimQuestDisplayInfo GetQuestDisplayInfo(const class UObject* WorldContextObject, TScriptInterface<class IQuestInstanceInterface> Quest);
	static bool QuestPassesFilter(const TScriptInterface<class IQuestInstanceInterface> QuestInterface, const struct FPilgrimQuestFilter& QuestFilter);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimQuestLibrary">();
	}
	static class UPilgrimQuestLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimQuestLibrary>();
	}
};

// Class PilgrimCoreRuntime.PilgrimRandomSetlist
// 0x0068 (0x0108 - 0x00A0)
class UPilgrimRandomSetlist final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumSongsToPopulate;                                // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      SongFilterQuery;                                   // 0x00B0(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class UPilgrimSongMetadata*>           SongList;                                          // 0x00F8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void PopulateRandomSongs(const class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimRandomSetlist">();
	}
	static class UPilgrimRandomSetlist* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimRandomSetlist>();
	}
};

// Class PilgrimCoreRuntime.PilgrimRenderTargetComponent
// 0x0020 (0x00C0 - 0x00A0)
class alignas(0x10) UPilgrimRenderTargetComponent final : public UControllerComponent
{
public:
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FMatrix CropTargetAndGetProjectionMatrix(const struct FVector4f& InLeftTopRightBottom, float FOV);
	class UTextureRenderTarget2D* GetRenderTarget();

	const struct FVector4f GetLeftTopRightBottom() const;
	struct FVector4f GetUVScaleOffset() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimRenderTargetComponent">();
	}
	static class UPilgrimRenderTargetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimRenderTargetComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimRequestFriendScoreWrapper
// 0x00F0 (0x0118 - 0x0028)
class UPilgrimRequestFriendScoreWrapper final : public UObject
{
public:
	uint8                                         Pad_28[0xF0];                                      // 0x0028(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimRequestFriendScoreWrapper">();
	}
	static class UPilgrimRequestFriendScoreWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimRequestFriendScoreWrapper>();
	}
};

// Class PilgrimCoreRuntime.PilgrimScoreDebugPrinter
// 0x0008 (0x0030 - 0x0028)
class UPilgrimScoreDebugPrinter final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimScoreDebugPrinter">();
	}
	static class UPilgrimScoreDebugPrinter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimScoreDebugPrinter>();
	}
};

// Class PilgrimCoreRuntime.PilgrimScoringModel
// 0x04E8 (0x0510 - 0x0028)
class UPilgrimScoringModel final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPilgrimGameProgress                   GameProgress;                                      // 0x0030(0x0078)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FPilgrimGameConfigSettings             GameConfigSettings;                                // 0x00A8(0x0398)(NativeAccessSpecifierPublic)
	uint8                                         Pad_440[0x18];                                     // 0x0440(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  ContextActor;                                      // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_460[0xB0];                                     // 0x0460(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float ComputeMaxScore(const TArray<struct FTrackItemInfo>& Gems, const class UPilgrimSongData* SongData);

	float ComputeAccuracyMultiplier(EPilgrimScoringMode ScoringMode, const struct FPilgrimGemHitAccuracy& Accuracy) const;
	float ComputeGemBaseScoreValue(EPilgrimScoringMode ScoringMode) const;
	float ComputeOverdriveMultiplier(EPilgrimScoringMode ScoringMode) const;
	float ComputeStreakMultiplier(EPilgrimScoringMode ScoringMode) const;
	float ComputeSustainScorePerBeat(EPilgrimScoringMode ScoringMode) const;
	int32 GetScoreRequiredForStar(int32 Stars) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimScoringModel">();
	}
	static class UPilgrimScoringModel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimScoringModel>();
	}
};

// Class PilgrimCoreRuntime.PilgrimScoringModifier
// 0x0000 (0x0030 - 0x0030)
class UPilgrimScoringModifier final : public UPrimaryDataAsset
{
public:
	float Apply(float InputValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimScoringModifier">();
	}
	static class UPilgrimScoringModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimScoringModifier>();
	}
};

// Class PilgrimCoreRuntime.PilgrimSetlistInterface
// 0x0000 (0x0000 - 0x0000)
class IPilgrimSetlistInterface final
{
public:
	void RemoveUnavailableSongs(const class UObject* WorldContextObject, const struct FPlayspaceUser& ExcludedUser);

	int32 GetNumSongs(const class UObject* WorldContextObject) const;
	struct FTimespan GetSetlistDuration(const class UObject* WorldContextObject) const;
	class UPilgrimSongMetadata* GetSongAtIndex(const class UObject* WorldContextObject, int32 Index_0) const;
	TArray<class UPilgrimSongMetadata*> GetSongList(const class UObject* WorldContextObject) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSetlistInterface">();
	}
	static class IPilgrimSetlistInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPilgrimSetlistInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class PilgrimCoreRuntime.PilgrimSettings
// 0x0008 (0x0038 - 0x0030)
class UPilgrimSettings final : public UDeveloperSettings
{
public:
	int32                                         NumGemPoolItems;                                   // 0x0030(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumBeatMarkerPoolItems;                            // 0x0034(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSettings">();
	}
	static class UPilgrimSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSettings>();
	}
};

// Class PilgrimCoreRuntime.PilgrimSongCatalog
// 0x00B0 (0x0150 - 0x00A0)
class UPilgrimSongCatalog final : public UGameStateComponent
{
public:
	TMap<class FName, class UPilgrimSongMetadata*> SongsByShortName;                                 // 0x00A0(0x0050)(NativeAccessSpecifierPrivate)
	TMap<class FString, class UPilgrimSongMetadata*> SongsByShortMcpTemplateId;                      // 0x00F0(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0x10];                                     // 0x0140(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimSongCatalog* GetPilgrimSongCatalog(const class UObject* WorldContextObject);
	static bool PlayerHasSongEntitlement(const class AFortPlayerController* Player, const class UPilgrimSongMetadata* Song);

	void OnCMSCatalogRetrieved(bool bSuccess);

	TArray<class UPilgrimSongMetadata*> GetRandomSongList(int32 NumSongs, const struct FGameplayTagQuery& TagQuery) const;
	class UPilgrimSongMetadata* GetSongByMcpTemplateId(const class FString& McpTemplateId) const;
	class UPilgrimSongMetadata* GetSongByShortName(class FName ShortName) const;
	TArray<class UPilgrimSongMetadata*> GetSortedSongList(EPilgrimSongSortMethod SortMethod, EPilgrimSongSortDirection SortDirection, const struct FGameplayTagQuery& TagQuery) const;
	bool IsSongShared(class AFortPlayerController* Player, class FName SongShortName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongCatalog">();
	}
	static class UPilgrimSongCatalog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongCatalog>();
	}
};

// Class PilgrimCoreRuntime.PilgrimSongData
// 0x00B8 (0x0188 - 0x00D0)
class UPilgrimSongData final : public UParsedMidiEventData
{
public:
	uint8                                         Pad_D0[0x50];                                      // 0x00D0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPilgrimSongDifficulty, struct FRBTrackInfo> TracksPerDifficulty;                           // 0x0120(0x0050)(NativeAccessSpecifierPrivate)
	TArray<struct FTrackItemInfo>                 BeatMarkers;                                       // 0x0170(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_180[0x8];                                      // 0x0180(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongData">();
	}
	static class UPilgrimSongData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongData>();
	}
};

// Class PilgrimCoreRuntime.PilgrimSongMetadata
// 0x0170 (0x01A0 - 0x0030)
class UPilgrimSongMetadata final : public UPrimaryDataAsset
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ShortName;                                         // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   Artist;                                            // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  AdditionalTags;                                    // 0x0078(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<ESparksGenre>                          Genre;                                             // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         Year;                                              // 0x00A8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPilgrimTrackType, int32>                IntensityPerInstrument;                            // 0x00B0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EMusicKey                                     Key;                                               // 0x0100(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMusicKeyMode                                 Mode;                                              // 0x0101(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StreamingVUID;                                     // 0x0108(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 PreviewVUID;                                       // 0x0118(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimespan                              duration;                                          // 0x0128(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESparksInstrumentType                         DrumStartingIntrument;                             // 0x0130(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESparksInstrumentType                         BassStartingIntrument;                             // 0x0131(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESparksInstrumentType                         GuitarStartingIntrument;                           // 0x0132(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESparksInstrumentType                         VocalsStartingIntrument;                           // 0x0133(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCatalogData*                           SparksCatalogData;                                 // 0x0138(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStemmedMusicAsset>      StemmedMusicAsset;                                 // 0x0140(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimSequence>           LipSyncAnimAsset;                                  // 0x0160(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStemmedMusicAsset>      StemmedMusicAssetRuntime;                          // 0x0180(0x0020)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	const struct FGameplayTagContainer GetAdditionalTags() const;
	class FString GetAlbumArtUrl() const;
	class FText GetArtist() const;
	struct FTimespan GetDuration() const;
	const TMap<EPilgrimTrackType, int32> GetIntensityPerInstrument() const;
	const TSoftObjectPtr<class UAnimSequence> GetLipSyncAnimAsset() const;
	int32 GetMappedIntensity(EPilgrimTrackType Instrument, int32 Min, int32 Max) const;
	EMusicKey GetMusicKey() const;
	EMusicKeyMode GetMusicMode() const;
	class FString GetPreviewVUID() const;
	int32 GetRawIntensity(EPilgrimTrackType Instrument) const;
	class FName GetShortName() const;
	class UCatalogData* GetSparksCatalogData(const class UObject* WorldContext) const;
	ESparksInstrumentType GetStartingInstrumentType(EPilgrimTrackType TrackType) const;
	const TSoftObjectPtr<class UStemmedMusicAsset> GetStemmedMusicAsset() const;
	class FString GetStreamingVUID() const;
	class FText GetTitle() const;
	int32 GetYear() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSongMetadata">();
	}
	static class UPilgrimSongMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSongMetadata>();
	}
};

// Class PilgrimCoreRuntime.PilgrimPlayspaceComponent_SongPreloader
// 0x0098 (0x0138 - 0x00A0)
class UPilgrimPlayspaceComponent_SongPreloader final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SongToLoad;                                        // 0x00B8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimSongMetadata*                   SongMetaData;                                      // 0x00C0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, bool>           PlayersFinishedLoading;                            // 0x00C8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	bool                                          bServerFinishedLoading;                            // 0x0118(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bBroadcastedLoadingFinished;                       // 0x0119(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11A[0x16];                                     // 0x011A(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LoadTimeoutTimerHandle;                            // 0x0130(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void NetMulticast_HandleAllLoadingFinished();
	void NetMulticast_LoadSong(class FName Song);
	void OnStreamerPrepared();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimPlayspaceComponent_SongPreloader">();
	}
	static class UPilgrimPlayspaceComponent_SongPreloader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimPlayspaceComponent_SongPreloader>();
	}
};

// Class PilgrimCoreRuntime.PilgrimControllerComponent_SongPreloader
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimControllerComponent_SongPreloader final : public UControllerComponent
{
public:
	void ServerFinishedLoadingSong(class FName Song);
	void ServerKickPlayerForNetworkIssues(const class FText& Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimControllerComponent_SongPreloader">();
	}
	static class UPilgrimControllerComponent_SongPreloader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimControllerComponent_SongPreloader>();
	}
};

// Class PilgrimCoreRuntime.PilgrimSustainTrackItemMgr
// 0x0060 (0x0138 - 0x00D8)
class UPilgrimSustainTrackItemMgr final : public UPilgrimTrackItemMgr
{
public:
	TArray<class APilgrimTrackSustain*>           ActiveSustains;                                    // 0x00D8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FPilgrimTrackItemKey, class APilgrimTrackSustain*> ActiveSustainsMap;                // 0x00E8(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimSustainTrackItemMgr">();
	}
	static class UPilgrimSustainTrackItemMgr* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimSustainTrackItemMgr>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTogglePlasticInstrumentAbility
// 0x0000 (0x0B40 - 0x0B40)
class UPilgrimTogglePlasticInstrumentAbility final : public UFortGameplayAbility
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTogglePlasticInstrumentAbility">();
	}
	static class UPilgrimTogglePlasticInstrumentAbility* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimTogglePlasticInstrumentAbility>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTouchButtonBase
// 0x0040 (0x0320 - 0x02E0)
class UPilgrimTouchButtonBase final : public UCommonUserWidget
{
public:
	class UInputAction*                           PressAction;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWidgetTouchKbmControllerTransitionType       WidgetTransitionType;                              // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          DeactivateInputActionIfDragOutsideHitbox;          // 0x02E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           PressedColor;                                      // 0x02EC(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           ReleasedColor;                                     // 0x02FC(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_Icon;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleInputMethodChanged(ECommonInputType CurrentInputType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTouchButtonBase">();
	}
	static class UPilgrimTouchButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimTouchButtonBase>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTrack
// 0x0120 (0x03B0 - 0x0290)
class APilgrimTrack final : public AActor
{
public:
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   NowBarChildActor;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        TopOfTrack;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APilgrimGem>                PilgrimGemClass;                                   // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APilgrimBeatMarker>         BeatMarkerClass;                                   // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APilgrimTrackSustain>       SustainClass;                                      // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        SceneRoot;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPilgrimTrackCaptureComponent*          TrackCaptureComponent2D;                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PilgrimTrackAlphaMaterial;                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           PilgrimTrackMaterialParameterCollection;           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollectionInstance*   PilgrimTrackMaterialParameterCollectionInstance;   // 0x02E0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPilgrimGame>            ParentGame;                                        // 0x02E8(0x0020)(BlueprintVisible, ExportObject, InstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                       BeatMarkerSpline;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APilgrimNowBar>          CachedNowBar;                                      // 0x0310(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimGemTrackItemMgr*                GemMgr;                                            // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimSustainTrackItemMgr*            SustainMgr;                                        // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimBeatMarkerTrackItemMgr*         BeatMarkerMgr;                                     // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<EPilgrimTrackLane, TWeakObjectPtr<class APilgrimGemSmasher>> SmasherMap;                    // 0x0330(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_380[0x30];                                     // 0x0380(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddActorItemToScene(class AActor* Item);
	void HideAllItems();
	void OnGameEnded();
	void OnGemSmashed(EPilgrimTrackLane Lane, const struct FPilgrimGemHitAccuracy& Accuracy, bool bIsOverdrive);
	void UpdateBeatmarkerVisibility(bool bNewIsVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTrack">();
	}
	static class APilgrimTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimTrack>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTrackCaptureComponent
// 0x0010 (0x0B00 - 0x0AF0)
class UPilgrimTrackCaptureComponent final : public USceneCaptureComponent2D
{
public:
	class AActor*                                 ViewOwner;                                         // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AF8[0x8];                                      // 0x0AF8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void IncludeActor(class AActor* TrackActor, bool bIncludeFromChildActors);
	void SetViewOwnerActor(class AActor* InViewOwner);

	class AActor* GetViewOwnerActor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTrackCaptureComponent">();
	}
	static class UPilgrimTrackCaptureComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimTrackCaptureComponent>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTrackItemInterface
// 0x0000 (0x0000 - 0x0000)
class IPilgrimTrackItemInterface final
{
public:
	void OnGameEnded();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTrackItemInterface">();
	}
	static class IPilgrimTrackItemInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPilgrimTrackItemInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class PilgrimCoreRuntime.PilgrimTrackSustain
// 0x0058 (0x02E8 - 0x0290)
class APilgrimTrackSustain final : public AActor
{
public:
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputKeyStartOfSustain;                            // 0x0298(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InputKeyEndOfSustain;                              // 0x029C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPilgrimGame>            ParentGamePtr;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APilgrimGemSmasher>      ParentSmasherPtr;                                  // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B0[0x38];                                     // 0x02B0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAttachToSmasher(class APilgrimGemSmasher* Smasher);
	void OnIsOverdriveChanged();
	void OnSustainFail();
	void OnSustainInit();
	void OnSustainKeyDownSuccess();
	void OnSustainKeyRelease();
	void PlaceSustainAlongSpline();
	void UpdateSplineInputKeys(float NewKeyStart, float NewKeyEnd);

	class USplineComponent* GetSplinePathIfRelevant() const;
	const struct FTrackItemInfo GetTrackItemInfo() const;
	bool IsInActiveOverdriveSection() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTrackSustain">();
	}
	static class APilgrimTrackSustain* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimTrackSustain>();
	}
};

// Class PilgrimCoreRuntime.PilgrimTrackTypeUtils
// 0x0000 (0x0028 - 0x0028)
class UPilgrimTrackTypeUtils final : public UObject
{
public:
	static bool IsGuitarPeripheralTrack(EPilgrimTrackType TrackType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimTrackTypeUtils">();
	}
	static class UPilgrimTrackTypeUtils* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimTrackTypeUtils>();
	}
};

// Class PilgrimCoreRuntime.PilgrimVerbProcessor_DeployOverdrive
// 0x0000 (0x00A0 - 0x00A0)
class UPilgrimVerbProcessor_DeployOverdrive final : public UPilgrimObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimVerbProcessor_DeployOverdrive">();
	}
	static class UPilgrimVerbProcessor_DeployOverdrive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimVerbProcessor_DeployOverdrive>();
	}
};

// Class PilgrimCoreRuntime.PilgrimWaitForEventRouterAction
// 0x0020 (0x0050 - 0x0030)
class UPilgrimWaitForEventRouterAction final : public UBlueprintAsyncActionBase
{
public:
	TMulticastInlineDelegate<void(class UGameplayEventRouterComponent* EventRouter)> OnEventRouterAvailable; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPilgrimWaitForEventRouterAction* PilgrimWaitForEventRouter(class AActor* ContextActor);

	void HandleContextActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimWaitForEventRouterAction">();
	}
	static class UPilgrimWaitForEventRouterAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimWaitForEventRouterAction>();
	}
};

// Class PilgrimCoreRuntime.ServerPilgrimGame
// 0x0038 (0x0060 - 0x0028)
class UServerPilgrimGame final : public UObject
{
public:
	class UPilgrimGameEvaluator*                  GameEvaluator;                                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimScoringModel*                   ScoringModel;                                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimSongData*                       SongData;                                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimSongMetadata*                   SongBeingPlayed;                                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                  ContextActor;                                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimGameConfig*                     PilgrimGameConfig;                                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetScoringDensity() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ServerPilgrimGame">();
	}
	static class UServerPilgrimGame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UServerPilgrimGame>();
	}
};

// Class PilgrimCoreRuntime.FortClientPilot_QuickSmokeSparks
// 0x0010 (0x0320 - 0x0310)
class UFortClientPilot_QuickSmokeSparks final : public UFortClientPilot_GameplayBase
{
public:
	uint8                                         Pad_310[0x10];                                     // 0x0310(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortClientPilot_QuickSmokeSparks">();
	}
	static class UFortClientPilot_QuickSmokeSparks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortClientPilot_QuickSmokeSparks>();
	}
};

// Class PilgrimCoreRuntime.PilgrimEventRouterLibrary
// 0x0000 (0x0028 - 0x0028)
class UPilgrimEventRouterLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UGameplayEventRouterComponent* GetGameplayEventRouter(class AActor* ContextActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimEventRouterLibrary">();
	}
	static class UPilgrimEventRouterLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimEventRouterLibrary>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGameScoreInterface
// 0x0000 (0x0000 - 0x0000)
class IPilgrimGameScoreInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGameScoreInterface">();
	}
	static class IPilgrimGameScoreInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPilgrimGameScoreInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class PilgrimCoreRuntime.PilgrimMusicBattleInstance
// 0x0560 (0x07F0 - 0x0290)
class APilgrimMusicBattleInstance final : public AActor
{
public:
	TMulticastInlineDelegate<void(const EMusicBattleEndReason EndReason)> OnMusicBattleFinished;     // 0x0290(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Team;                                              // 0x02A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPilgrimMusicBattleData                MusicBattleData;                                   // 0x02A8(0x0048)(BlueprintVisible, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class FName                                   SongToPlayShortName;                               // 0x02F0(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPilgrimSongMetadata*                   SongToPlay;                                        // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPilgrimSongDifficulty                        SongDifficultyToPlay;                              // 0x0300(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bClientHasReceivedSongToPlay;                      // 0x0301(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPilgrimSinglePlayerBattleData         SinglePlayerBattleData;                            // 0x0308(0x0010)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                         LocalPlayerIndex;                                  // 0x0318(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerStateAthena*>         MusicBattlePlayers;                                // 0x0320(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FMusicBattleSinglePlayerOptions        SinglePlayerBattleOptions;                         // 0x0330(0x0008)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UPilgrimGameConfig*                     PilgrimGameConfig;                                 // 0x0338(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMusicBattleType                              MusicBattleType;                                   // 0x0340(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        LocalMetasoundPlayer;                              // 0x0348(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                        LocalMetasoundMixer;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                         DisableScoreCeilingForSongs;                       // 0x0358(0x0010)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	int32                                         SrvFIThrMs;                                        // 0x0368(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_36C[0x7C];                                     // 0x036C(0x007C)(Fixing Size After Last Property [ Dumper-7 ])
	class UHarmonixAudioAnalyzerResultsProvider*  FFTAnalyzerResultsProvider;                        // 0x03E8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UPilgrimPlayerControllerComponent*, int32> CurrentPlayerToIndexMap;                   // 0x03F0(0x0050)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UPilgrimSongData*                       SongData;                                          // 0x0440(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_448[0x50];                                     // 0x0448(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AFortPlayerStateAthena*, class UServerPilgrimGame*> ServerPilgrimGameMap;             // 0x0498(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E8[0x1A8];                                    // 0x04E8(0x01A8)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPilgrimGemBreakListener*>       GemBreakListeners;                                 // 0x0690(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6A0[0xF8];                                     // 0x06A0(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UPilgrimPlayerControllerComponent*> PlayersWhoOwnCurrentSong;                         // 0x0798(0x0050)(ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7E8[0x8];                                      // 0x07E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddMusicBattlePlayers(const TArray<class AFortPlayerStateAthena*>& NewPlayers);
	void AddToBandScore(float Score);
	void BroadcastMBIEventFinished();
	void BroadcastMBIEventStarted();
	void Client_DoMultiplayerBeamClash();
	void Client_DoMultiplayerDamageEffect(int32 DamagingPlayerId, int32 DamagedPlayerId);
	void ClientFireSongEndedAnalyticsForCurrentSong();
	void ConnectFFTAnalysis(class UAudioComponent* AudioComponentWithAnalyzer);
	void DoEndGameCheat(bool bIsWin);
	void DoMultiplayerDamage(int32 DamagingPlayerId, int32 DamagedPlayerId, const struct FPilgrimGameProgress& GameUpdateThatDidDamage);
	void FireLocalPlayerBeam(EMusicBattleProjectileType ProjectileType);
	class UGameplayEventRouterComponent* GetEventRouter();
	float GetScoreDensityForPlayer(class APlayerState* PlayerState);
	uint8 GetTeam();
	void NetMulticast_CheatEndSong();
	void NetMulticast_CheatSeekToTime(int32 Milliseconds);
	void NetMulticast_CheatSetPerformanceData(const class FString& PerformanceArgument);
	void NetMulticast_DoBeamClash();
	void NetMulticast_DoMultiplayerDamageEffect(int32 DamagingPlayerId, int32 DamagedPlayerId);
	void OnClientReceivedSongToPlay(class UPilgrimSongMetadata* Song);
	void OnPlayerReachedZeroHp(int32 PlayerId);
	void OnRep_MusicBattleData(const struct FPilgrimMusicBattleData& PreviousMusicBattleData);
	void OnRep_SongToPlay();
	void OnSongLoaded();
	void OnStartedPlayingSong(class UPilgrimSongMetadata* Song);
	void OnTrackHiddenChanged(bool bHideTrack);
	void PlayerDisconnected(const class UPilgrimPlayerControllerComponent* ControllerComponent);
	void ServerAllPlayersHaveFinishedSong();
	void ServerFinishDisconnect();
	void ServerOnClientUpdateReceived(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, EMusicBattleClientUpdate ClientUpdate);
	void ServerOnSongMidiFinishedLoading();
	void ServerOnTeamQuickplayScoreChanged(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, struct FPilgrimGameProgress* NextScoreForCurrentPlayer, const float LastInputTimeMs);
	void ServerOnTimedInputReceived(class UPilgrimPlayerControllerComponent* PlayerControllerComponent, const struct FPilgrimTimedInput& TimedInput);
	void ServerUserFinishedDisconnecting();
	void SetMusicBattleType(const EMusicBattleType NewMusicBattleType);
	void SetupSinglePlayerBattle();
	void SubtractFromBandScore(float Score);
	void UpdateLocalPlayerScore(const struct FPilgrimGameProgress& LocalPlayerGameProgress);
	void UpdateScore();
	void UpdateVisibilityOfUI();

	bool Debug_IsTrackHidden() const;
	const class UPilgrimGameConfig* GetConfig() const;
	class AFortPlayerStateAthena* GetCurrentLocalPlayer() const;
	void GetDifficultyAndTrackType(EPilgrimSongDifficulty* OutSongDifficulty, EPilgrimTrackType* OutSongTrackType) const;
	class UPilgrimGame* GetLocalPilgrimGame() const;
	const struct FPilgrimMusicBattleData GetMusicBattleData() const;
	class UMusicClockComponent* GetMusicClock() const;
	class UPilgrimSongMetadata* GetNextSongToPlay() const;
	TSet<EPilgrimTrackType> GetPlayedTrackTypesInCurrentSong() const;
	int32 GetPlayerCount() const;
	class AFortPlayerStateAthena* GetPlayerFromIndex(const int32 PlayerIndex) const;
	EPilgrimSongDifficulty GetSongDifficultyForPlayer(const class AFortPlayerStateAthena* Player) const;
	EPilgrimSongPlayMethod GetSongPlayMethod() const;
	ESparksInstrumentType GetStartingInstrumentForTrackInCurrentSong(EPilgrimTrackType TrackType) const;
	float GetStreakMultiplier(const struct FPilgrimGameProgress& LocalPlayerGameProgress) const;
	EPilgrimTrackType GetTrackTypeForPlayer(const class AFortPlayerStateAthena* Player) const;
	TSet<EPilgrimTrackType> GetUnplayedTrackTypesInCurrentSong() const;
	void HandleNewFFTResults(class FName OutputName, const struct FMetaSoundOutput& Output) const;
	bool IsHardStopAllowed() const;
	bool IsHardStopped() const;
	bool IsLocalPlayerInBattleParticipants() const;
	bool IsLocalPlayerRoaming() const;
	bool IsPlayerInBattleParticipants(class AFortPlayerStateAthena* PlayerState) const;
	bool IsRestartAllowed() const;
	bool IsSinglePlayerBattleAgainstPrimitiveAI() const;
	bool IsTwoPlayerBattleWithBeams() const;
	bool ShouldUseTouchUIForLocalPlayer() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimMusicBattleInstance">();
	}
	static class APilgrimMusicBattleInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<APilgrimMusicBattleInstance>();
	}
};

// Class PilgrimCoreRuntime.PilgrimGameEvaluator
// 0x0258 (0x0280 - 0x0028)
class UPilgrimGameEvaluator final : public UObject
{
public:
	class UPilgrimSongData*                       CurrentSongData;                                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimSongMetadata*                   SongMetaData;                                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimScoreDebugPrinter*              DebugScoreListener;                                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                  ContextActor;                                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimGameConfig*                     PilgrimGameConfig;                                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPilgrimScoringModel*                   ScoringModel;                                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x228];                                     // 0x0058(0x0228)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PilgrimGameEvaluator">();
	}
	static class UPilgrimGameEvaluator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPilgrimGameEvaluator>();
	}
};

}

