#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PilgrimQuickplayRuntime

#include "Basic.hpp"

#include "PilgrimQuickplayRuntime_classes.hpp"
#include "PilgrimQuickplayRuntime_parameters.hpp"


namespace SDK
{

// Function PilgrimQuickplayRuntime.PilgrimGreenRoomLayoutSwitcher.CycleLayout
// (Final, Native, Public, BlueprintCallable)

void UPilgrimGreenRoomLayoutSwitcher::CycleLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimGreenRoomLayoutSwitcher", "CycleLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimGreenRoomLayoutSwitcher.OnLayoutChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewLayout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGreenRoomLayoutSwitcher::OnLayoutChanged(int32 NewLayout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimGreenRoomLayoutSwitcher", "OnLayoutChanged");

	Params::PilgrimGreenRoomLayoutSwitcher_OnLayoutChanged Parms{};

	Parms.NewLayout = NewLayout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimGreenRoomLayoutSwitcher.OnRep_CurrentLayout
// (Final, Native, Private)

void UPilgrimGreenRoomLayoutSwitcher::OnRep_CurrentLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimGreenRoomLayoutSwitcher", "OnRep_CurrentLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimGreenRoomLayoutSwitcher.SetLayout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewLayout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimGreenRoomLayoutSwitcher::SetLayout(int32 NewLayout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimGreenRoomLayoutSwitcher", "SetLayout");

	Params::PilgrimGreenRoomLayoutSwitcher_SetLayout Parms{};

	Parms.NewLayout = NewLayout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimPawnComponent.SetInteractionEffectsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPawnComponent::SetInteractionEffectsEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPawnComponent", "SetInteractionEffectsEnabled");

	Params::PilgrimPawnComponent_SetInteractionEffectsEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimPawnComponent.GetInteractionEffectsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPawnComponent::GetInteractionEffectsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPawnComponent", "GetInteractionEffectsEnabled");

	Params::PilgrimPawnComponent_GetInteractionEffectsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.ClearSpotlightMontageHandles
// (Final, Native, Protected, BlueprintCallable)

void UPilgrimPlayspaceComponent_IntroDirector::ClearSpotlightMontageHandles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "ClearSpotlightMontageHandles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.DebugShowSpotlightTool_Impl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayspaceComponent_IntroDirector::DebugShowSpotlightTool_Impl(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "DebugShowSpotlightTool_Impl");

	Params::PilgrimPlayspaceComponent_IntroDirector_DebugShowSpotlightTool_Impl Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.EnqueueSpotlightMontages
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESparksInstrumentType                   InstrumentType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayspaceComponent_IntroDirector::EnqueueSpotlightMontages(ESparksInstrumentType InstrumentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "EnqueueSpotlightMontages");

	Params::PilgrimPlayspaceComponent_IntroDirector_EnqueueSpotlightMontages Parms{};

	Parms.InstrumentType = InstrumentType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.HasSpotlightMontageLoadFinished
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayspaceComponent_IntroDirector::HasSpotlightMontageLoadFinished(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "HasSpotlightMontageLoadFinished");

	Params::PilgrimPlayspaceComponent_IntroDirector_HasSpotlightMontageLoadFinished Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.OnSpotlightMontageLoaded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     LoadedMontage                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayspaceComponent_IntroDirector::OnSpotlightMontageLoaded(int32 PlayerIndex, class UAnimMontage* LoadedMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "OnSpotlightMontageLoaded");

	Params::PilgrimPlayspaceComponent_IntroDirector_OnSpotlightMontageLoaded Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.LoadedMontage = LoadedMontage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.RequestNextMontageForInstrument
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESparksInstrumentType                   InstrumentType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayspaceComponent_IntroDirector::RequestNextMontageForInstrument(ESparksInstrumentType InstrumentType, class AFortPlayerPawn* PlayerPawn, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "RequestNextMontageForInstrument");

	Params::PilgrimPlayspaceComponent_IntroDirector_RequestNextMontageForInstrument Parms{};

	Parms.InstrumentType = InstrumentType;
	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.EnableFloatingPawnFix
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayspaceComponent_IntroDirector::EnableFloatingPawnFix() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "EnableFloatingPawnFix");

	Params::PilgrimPlayspaceComponent_IntroDirector_EnableFloatingPawnFix Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.GetFloatingPawnFixIntervalSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPlayspaceComponent_IntroDirector::GetFloatingPawnFixIntervalSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "GetFloatingPawnFixIntervalSeconds");

	Params::PilgrimPlayspaceComponent_IntroDirector_GetFloatingPawnFixIntervalSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.GetForcePawnLocationAfterIntroDelaySeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimPlayspaceComponent_IntroDirector::GetForcePawnLocationAfterIntroDelaySeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "GetForcePawnLocationAfterIntroDelaySeconds");

	Params::PilgrimPlayspaceComponent_IntroDirector_GetForcePawnLocationAfterIntroDelaySeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.IsForcePawnLocationAfterIntroEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimPlayspaceComponent_IntroDirector::IsForcePawnLocationAfterIntroEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "IsForcePawnLocationAfterIntroEnabled");

	Params::PilgrimPlayspaceComponent_IntroDirector_IsForcePawnLocationAfterIntroEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimPlayspaceComponent_IntroDirector.StartPlayerIntro
// (Final, Native, Private, BlueprintCallable, Const)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimPlayspaceComponent_IntroDirector::StartPlayerIntro(class APlayerState* PlayerState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimPlayspaceComponent_IntroDirector", "StartPlayerIntro");

	Params::PilgrimPlayspaceComponent_IntroDirector_StartPlayerIntro Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetBandState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimQuickplayBandStateComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayBandStateComponent* UPilgrimQuickplayBandStateComponent::GetBandState(class AActor* ContextActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PilgrimQuickplayBandStateComponent", "GetBandState");

	Params::PilgrimQuickplayBandStateComponent_GetBandState Parms{};

	Parms.ContextActor = ContextActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.OnRep_CurrentSetlistIndex
// (Final, Native, Private)
// Parameters:
// int32                                   PrevSetlistIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayBandStateComponent::OnRep_CurrentSetlistIndex(int32 PrevSetlistIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "OnRep_CurrentSetlistIndex");

	Params::PilgrimQuickplayBandStateComponent_OnRep_CurrentSetlistIndex Parms{};

	Parms.PrevSetlistIndex = PrevSetlistIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.OnRep_IsReplayingPreviousSong
// (Final, Native, Private)

void UPilgrimQuickplayBandStateComponent::OnRep_IsReplayingPreviousSong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "OnRep_IsReplayingPreviousSong");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.OnRep_SetlistVoteWinner
// (Final, Native, Private)
// Parameters:
// class UPilgrimPremadeSetlist*           PrevSetlist                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayBandStateComponent::OnRep_SetlistVoteWinner(class UPilgrimPremadeSetlist* PrevSetlist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "OnRep_SetlistVoteWinner");

	Params::PilgrimQuickplayBandStateComponent_OnRep_SetlistVoteWinner Parms{};

	Parms.PrevSetlist = PrevSetlist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.ServerAdvanceSetlistIndex
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPilgrimQuickplayBandStateComponent::ServerAdvanceSetlistIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "ServerAdvanceSetlistIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.ServerResetSetlistIndex
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPilgrimQuickplayBandStateComponent::ServerResetSetlistIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "ServerResetSetlistIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.AreAllPlayersReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimQuickplayBandStateComponent::AreAllPlayersReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "AreAllPlayersReady");

	Params::PilgrimQuickplayBandStateComponent_AreAllPlayersReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetCurrentSetlist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IPilgrimSetlistInterface>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TScriptInterface<class IPilgrimSetlistInterface> UPilgrimQuickplayBandStateComponent::GetCurrentSetlist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetCurrentSetlist");

	Params::PilgrimQuickplayBandStateComponent_GetCurrentSetlist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetCurrentSetlistIndex
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimQuickplayBandStateComponent::GetCurrentSetlistIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetCurrentSetlistIndex");

	Params::PilgrimQuickplayBandStateComponent_GetCurrentSetlistIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetCurrentSetlistLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimQuickplayBandStateComponent::GetCurrentSetlistLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetCurrentSetlistLength");

	Params::PilgrimQuickplayBandStateComponent_GetCurrentSetlistLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetPlayersInBand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APlayerState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerState*> UPilgrimQuickplayBandStateComponent::GetPlayersInBand(uint8 Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetPlayersInBand");

	Params::PilgrimQuickplayBandStateComponent_GetPlayersInBand Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetPlayersInBandByController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APlayerState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerState*> UPilgrimQuickplayBandStateComponent::GetPlayersInBandByController(class APlayerController* Controller) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetPlayersInBandByController");

	Params::PilgrimQuickplayBandStateComponent_GetPlayersInBandByController Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetSetlistVoteWinner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimPremadeSetlist*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimPremadeSetlist* UPilgrimQuickplayBandStateComponent::GetSetlistVoteWinner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetSetlistVoteWinner");

	Params::PilgrimQuickplayBandStateComponent_GetSetlistVoteWinner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetVoteCountForSetlist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimPremadeSetlist*           Setlist                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPilgrimQuickplayBandStateComponent::GetVoteCountForSetlist(class UPilgrimPremadeSetlist* Setlist) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetVoteCountForSetlist");

	Params::PilgrimQuickplayBandStateComponent_GetVoteCountForSetlist Parms{};

	Parms.Setlist = Setlist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.GetVotersForSetlist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimPremadeSetlist*           Setlist                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APlayerState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerState*> UPilgrimQuickplayBandStateComponent::GetVotersForSetlist(class UPilgrimPremadeSetlist* Setlist) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "GetVotersForSetlist");

	Params::PilgrimQuickplayBandStateComponent_GetVotersForSetlist Parms{};

	Parms.Setlist = Setlist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayBandStateComponent.IsReplayingPreviousSong
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimQuickplayBandStateComponent::IsReplayingPreviousSong() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayBandStateComponent", "IsReplayingPreviousSong");

	Params::PilgrimQuickplayBandStateComponent_IsReplayingPreviousSong Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayEmoteBPFL.GetEmoteActionBinding
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FString&                    EmoteTemplateID                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEmoteActionBinding*             OutCreatedEmote                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayEmoteBPFL::GetEmoteActionBinding(const class FString& EmoteTemplateID, struct FEmoteActionBinding* OutCreatedEmote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PilgrimQuickplayEmoteBPFL", "GetEmoteActionBinding");

	Params::PilgrimQuickplayEmoteBPFL_GetEmoteActionBinding Parms{};

	Parms.EmoteTemplateID = std::move(EmoteTemplateID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCreatedEmote != nullptr)
		*OutCreatedEmote = std::move(Parms.OutCreatedEmote);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetPilgrimQuickplayPlayerStateComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class APlayerState*               PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimQuickplayPlayerStateComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayPlayerStateComponent* UPilgrimQuickplayPlayerStateComponent::GetPilgrimQuickplayPlayerStateComponent(const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetPilgrimQuickplayPlayerStateComponent");

	Params::PilgrimQuickplayPlayerStateComponent_GetPilgrimQuickplayPlayerStateComponent Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetSongVote
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimQuickplayPlayerStateComponent::GetSongVote(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetSongVote");

	Params::PilgrimQuickplayPlayerStateComponent_GetSongVote Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.BroadcastEvent_SongResultDataChanged
// (Final, Native, Private)
// Parameters:
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::BroadcastEvent_SongResultDataChanged(int32 SetlistIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "BroadcastEvent_SongResultDataChanged");

	Params::PilgrimQuickplayPlayerStateComponent_BroadcastEvent_SongResultDataChanged Parms{};

	Parms.SetlistIndex = SetlistIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.ClientMatchRecorded
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSoloMatch                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::ClientMatchRecorded(int32 SetlistIndex, bool bIsSoloMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "ClientMatchRecorded");

	Params::PilgrimQuickplayPlayerStateComponent_ClientMatchRecorded Parms{};

	Parms.SetlistIndex = SetlistIndex;
	Parms.bIsSoloMatch = bIsSoloMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.MulticastBroadcastNewHighscore
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int32                                   TotalScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DeltaScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimPersonalBestType                BestType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::MulticastBroadcastNewHighscore(int32 TotalScore, int32 DeltaScore, EPilgrimPersonalBestType BestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "MulticastBroadcastNewHighscore");

	Params::PilgrimQuickplayPlayerStateComponent_MulticastBroadcastNewHighscore Parms{};

	Parms.TotalScore = TotalScore;
	Parms.DeltaScore = DeltaScore;
	Parms.BestType = BestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.OnRep_SetlistVote
// (Final, Native, Private)
// Parameters:
// class UPilgrimPremadeSetlist*           PrevSetlistVote                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::OnRep_SetlistVote(class UPilgrimPremadeSetlist* PrevSetlistVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "OnRep_SetlistVote");

	Params::PilgrimQuickplayPlayerStateComponent_OnRep_SetlistVote Parms{};

	Parms.PrevSetlistVote = PrevSetlistVote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.OnRep_SongVote
// (Final, Native, Private)
// Parameters:
// class UPilgrimSongMetadata*             PrevSongVote                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::OnRep_SongVote(class UPilgrimSongMetadata* PrevSongVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "OnRep_SongVote");

	Params::PilgrimQuickplayPlayerStateComponent_OnRep_SongVote Parms{};

	Parms.PrevSongVote = PrevSongVote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.ResetSetlistResultData
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UPilgrimQuickplayPlayerStateComponent::ResetSetlistResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "ResetSetlistResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SendHighscoreToServer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPilgrimPersonalBestResult&Highscore                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoaded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SendHighscoreToServer(const struct FPilgrimPersonalBestResult& Highscore, int32 SetlistIndex, bool bLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SendHighscoreToServer");

	Params::PilgrimQuickplayPlayerStateComponent_SendHighscoreToServer Parms{};

	Parms.Highscore = std::move(Highscore);
	Parms.SetlistIndex = SetlistIndex;
	Parms.bLoaded = bLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SendToClientsPerformanceData
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPilgrimQuickplayPlayerPerformanceData&NewPerformanceData                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SendToClientsPerformanceData(int32 SetlistIndex, const struct FPilgrimQuickplayPlayerPerformanceData& NewPerformanceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SendToClientsPerformanceData");

	Params::PilgrimQuickplayPlayerStateComponent_SendToClientsPerformanceData Parms{};

	Parms.SetlistIndex = SetlistIndex;
	Parms.NewPerformanceData = std::move(NewPerformanceData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SendToClientsResetSetlistResultData
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void UPilgrimQuickplayPlayerStateComponent::SendToClientsResetSetlistResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SendToClientsResetSetlistResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SendToClientsSongResultData
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPilgrimQuickplaySongResultData&NewPerformanceData                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SendToClientsSongResultData(int32 SetlistIndex, const struct FPilgrimQuickplaySongResultData& NewPerformanceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SendToClientsSongResultData");

	Params::PilgrimQuickplayPlayerStateComponent_SendToClientsSongResultData Parms{};

	Parms.SetlistIndex = SetlistIndex;
	Parms.NewPerformanceData = std::move(NewPerformanceData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SendToServerAllIntrosFinished
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class UPilgrimQuickplayState_Intro*     IntroState                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SendToServerAllIntrosFinished(class UPilgrimQuickplayState_Intro* IntroState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SendToServerAllIntrosFinished");

	Params::PilgrimQuickplayPlayerStateComponent_SendToServerAllIntrosFinished Parms{};

	Parms.IntroState = IntroState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SendToServerPerformanceData
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FPilgrimQuickplayPlayerPerformanceData&NewPerformanceData                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SendToServerPerformanceData(const struct FPilgrimQuickplayPlayerPerformanceData& NewPerformanceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SendToServerPerformanceData");

	Params::PilgrimQuickplayPlayerStateComponent_SendToServerPerformanceData Parms{};

	Parms.NewPerformanceData = std::move(NewPerformanceData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.Server_GrantDefaultQuests
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UPilgrimQuickplayPlayerStateComponent::Server_GrantDefaultQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "Server_GrantDefaultQuests");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.Server_ResetDefaultQuests
// (Final, Net, NetReliable, Native, Event, Private, NetServer)

void UPilgrimQuickplayPlayerStateComponent::Server_ResetDefaultQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "Server_ResetDefaultQuests");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.ServerSetHighscore
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// const struct FPilgrimPersonalBestResultRpl&Highscore                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoaded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::ServerSetHighscore(const struct FPilgrimPersonalBestResultRpl& Highscore, int32 SetlistIndex, bool bLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "ServerSetHighscore");

	Params::PilgrimQuickplayPlayerStateComponent_ServerSetHighscore Parms{};

	Parms.Highscore = std::move(Highscore);
	Parms.SetlistIndex = SetlistIndex;
	Parms.bLoaded = bLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetCloseupCameraTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TotalTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetCloseupCameraTime(float TotalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetCloseupCameraTime");

	Params::PilgrimQuickplayPlayerStateComponent_SetCloseupCameraTime Parms{};

	Parms.TotalTime = TotalTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetHighscore
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPilgrimPersonalBestResultRpl&Highscore                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoaded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetHighscore(const struct FPilgrimPersonalBestResultRpl& Highscore, int32 SetlistIndex, bool bLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetHighscore");

	Params::PilgrimQuickplayPlayerStateComponent_SetHighscore Parms{};

	Parms.Highscore = std::move(Highscore);
	Parms.SetlistIndex = SetlistIndex;
	Parms.bLoaded = bLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetPerformanceData
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPilgrimQuickplayPlayerPerformanceData&NewPerformanceData                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetPerformanceData(const struct FPilgrimQuickplayPlayerPerformanceData& NewPerformanceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetPerformanceData");

	Params::PilgrimQuickplayPlayerStateComponent_SetPerformanceData Parms{};

	Parms.NewPerformanceData = std::move(NewPerformanceData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetReachedNewHighscore
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TotalScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DeltaScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimPersonalBestType                BestType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetReachedNewHighscore(int32 TotalScore, int32 DeltaScore, EPilgrimPersonalBestType BestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetReachedNewHighscore");

	Params::PilgrimQuickplayPlayerStateComponent_SetReachedNewHighscore Parms{};

	Parms.TotalScore = TotalScore;
	Parms.DeltaScore = DeltaScore;
	Parms.BestType = BestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetSetlistVote
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPilgrimPremadeSetlist*           PlayerChosenSetlist                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetSetlistVote(class UPilgrimPremadeSetlist* PlayerChosenSetlist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetSetlistVote");

	Params::PilgrimQuickplayPlayerStateComponent_SetSetlistVote Parms{};

	Parms.PlayerChosenSetlist = PlayerChosenSetlist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetSongResultData
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FPilgrimQuickplaySongResultData&NewSongResultData                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetSongResultData(const struct FPilgrimQuickplaySongResultData& NewSongResultData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetSongResultData");

	Params::PilgrimQuickplayPlayerStateComponent_SetSongResultData Parms{};

	Parms.NewSongResultData = std::move(NewSongResultData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.SetSongVote
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPilgrimSongMetadata*             PlayerChosenSong                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::SetSongVote(class UPilgrimSongMetadata* PlayerChosenSong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "SetSongVote");

	Params::PilgrimQuickplayPlayerStateComponent_SetSongVote Parms{};

	Parms.PlayerChosenSong = PlayerChosenSong;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetBandState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimQuickplayBandStateComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayBandStateComponent* UPilgrimQuickplayPlayerStateComponent::GetBandState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetBandState");

	Params::PilgrimQuickplayPlayerStateComponent_GetBandState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetCloseupCameraTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPilgrimQuickplayPlayerStateComponent::GetCloseupCameraTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetCloseupCameraTime");

	Params::PilgrimQuickplayPlayerStateComponent_GetCloseupCameraTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetCurrentSetlistVote
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimPremadeSetlist*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimPremadeSetlist* UPilgrimQuickplayPlayerStateComponent::GetCurrentSetlistVote() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetCurrentSetlistVote");

	Params::PilgrimQuickplayPlayerStateComponent_GetCurrentSetlistVote Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetCurrentSongVote
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimSongMetadata*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimSongMetadata* UPilgrimQuickplayPlayerStateComponent::GetCurrentSongVote() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetCurrentSongVote");

	Params::PilgrimQuickplayPlayerStateComponent_GetCurrentSongVote Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetHighscoreResult
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPilgrimPersonalBestResultRpl*   OutResult                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoaded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimQuickplayPlayerStateComponent::GetHighscoreResult(struct FPilgrimPersonalBestResultRpl* OutResult, int32 SetlistIndex, bool bLoaded) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetHighscoreResult");

	Params::PilgrimQuickplayPlayerStateComponent_GetHighscoreResult Parms{};

	Parms.SetlistIndex = SetlistIndex;
	Parms.bLoaded = bLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetMainStateMachine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayStateMachine*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayStateMachine* UPilgrimQuickplayPlayerStateComponent::GetMainStateMachine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetMainStateMachine");

	Params::PilgrimQuickplayPlayerStateComponent_GetMainStateMachine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetPerformanceData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPilgrimQuickplayPlayerPerformanceDataReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPilgrimQuickplayPlayerPerformanceData UPilgrimQuickplayPlayerStateComponent::GetPerformanceData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetPerformanceData");

	Params::PilgrimQuickplayPlayerStateComponent_GetPerformanceData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetReachedNewHighscore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimPersonalBestType                BestType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimQuickplayPlayerStateComponent::GetReachedNewHighscore(EPilgrimPersonalBestType BestType, int32 SetlistIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetReachedNewHighscore");

	Params::PilgrimQuickplayPlayerStateComponent_GetReachedNewHighscore Parms{};

	Parms.BestType = BestType;
	Parms.SetlistIndex = SetlistIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetSetlistResultDataByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SetlistIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPilgrimQuickplaySetlistResultDataReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPilgrimQuickplaySetlistResultData UPilgrimQuickplayPlayerStateComponent::GetSetlistResultDataByIndex(int32 SetlistIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetSetlistResultDataByIndex");

	Params::PilgrimQuickplayPlayerStateComponent_GetSetlistResultDataByIndex Parms{};

	Parms.SetlistIndex = SetlistIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetSetlistResultProxies
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UPilgrimQuickplaySetlistResultProxyInstance*>*SetlistProxy                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayerStateComponent::GetSetlistResultProxies(TArray<class UPilgrimQuickplaySetlistResultProxyInstance*>* SetlistProxy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetSetlistResultProxies");

	Params::PilgrimQuickplayPlayerStateComponent_GetSetlistResultProxies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SetlistProxy != nullptr)
		*SetlistProxy = std::move(Parms.SetlistProxy);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayerStateComponent.GetSongResultData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPilgrimQuickplaySongResultDataReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPilgrimQuickplaySongResultData UPilgrimQuickplayPlayerStateComponent::GetSongResultData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayerStateComponent", "GetSongResultData");

	Params::PilgrimQuickplayPlayerStateComponent_GetSongResultData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.ForceActiveCameraDirector
// (Final, Native, Public, BlueprintCallable)

void APilgrimQuickplayPlayspace::ForceActiveCameraDirector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "ForceActiveCameraDirector");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.HandleDirectorResetEvent
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSparksCommonResetCameraDirectorEvent&Payload                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimQuickplayPlayspace::HandleDirectorResetEvent(const struct FSparksCommonResetCameraDirectorEvent& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "HandleDirectorResetEvent");

	Params::PilgrimQuickplayPlayspace_HandleDirectorResetEvent Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.HandleDirectorStartEvent
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSparksCommonStartCameraDirectorEvent&Payload                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimQuickplayPlayspace::HandleDirectorStartEvent(const struct FSparksCommonStartCameraDirectorEvent& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "HandleDirectorStartEvent");

	Params::PilgrimQuickplayPlayspace_HandleDirectorStartEvent Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.HandleDirectorStopEvent
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSparksCommonStopCameraDirectorEvent&Payload                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void APilgrimQuickplayPlayspace::HandleDirectorStopEvent(const struct FSparksCommonStopCameraDirectorEvent& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "HandleDirectorStopEvent");

	Params::PilgrimQuickplayPlayspace_HandleDirectorStopEvent Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.GetActivePilgrimQuickplayState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimQuickplayStateBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayStateBase* APilgrimQuickplayPlayspace::GetActivePilgrimQuickplayState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "GetActivePilgrimQuickplayState");

	Params::PilgrimQuickplayPlayspace_GetActivePilgrimQuickplayState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.GetActivePilgrimStateId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimQuickplayState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimQuickplayState APilgrimQuickplayPlayspace::GetActivePilgrimStateId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "GetActivePilgrimStateId");

	Params::PilgrimQuickplayPlayspace_GetActivePilgrimStateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.GetIsSinglePlayerGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APilgrimQuickplayPlayspace::GetIsSinglePlayerGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "GetIsSinglePlayerGame");

	Params::PilgrimQuickplayPlayspace_GetIsSinglePlayerGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspace.GetPilgrimQuickplayStateMachine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimQuickplayStateMachine*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayStateMachine* APilgrimQuickplayPlayspace::GetPilgrimQuickplayStateMachine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspace", "GetPilgrimQuickplayStateMachine");

	Params::PilgrimQuickplayPlayspace_GetPilgrimQuickplayStateMachine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayPlayspaceComponent_PlayerManager.BP_OnAppResumed
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ElapsedTimeSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayPlayspaceComponent_PlayerManager::BP_OnAppResumed(float ElapsedTimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayPlayspaceComponent_PlayerManager", "BP_OnAppResumed");

	Params::PilgrimQuickplayPlayspaceComponent_PlayerManager_BP_OnAppResumed Parms{};

	Parms.ElapsedTimeSeconds = ElapsedTimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBase.MarkStateDone
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPilgrimQuickplayStateBase::MarkStateDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateBase", "MarkStateDone");

	Params::PilgrimQuickplayStateBase_MarkStateDone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBase.GetEventRouter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* UPilgrimQuickplayStateBase::GetEventRouter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateBase", "GetEventRouter");

	Params::PilgrimQuickplayStateBase_GetEventRouter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBase.GetPilgrimPlayspace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APilgrimQuickplayPlayspace*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APilgrimQuickplayPlayspace* UPilgrimQuickplayStateBase::GetPilgrimPlayspace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateBase", "GetPilgrimPlayspace");

	Params::PilgrimQuickplayStateBase_GetPilgrimPlayspace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBase.GetPilgrimStateId
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimQuickplayState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimQuickplayState UPilgrimQuickplayStateBase::GetPilgrimStateId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateBase", "GetPilgrimStateId");

	Params::PilgrimQuickplayStateBase_GetPilgrimStateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBase.GetPilgrimStateMachine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimQuickplayStateMachine*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayStateMachine* UPilgrimQuickplayStateBase::GetPilgrimStateMachine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateBase", "GetPilgrimStateMachine");

	Params::PilgrimQuickplayStateBase_GetPilgrimStateMachine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBPFL.GetPilgrimState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimQuickplayState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimQuickplayState UPilgrimQuickplayStateBPFL::GetPilgrimState(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PilgrimQuickplayStateBPFL", "GetPilgrimState");

	Params::PilgrimQuickplayStateBPFL_GetPilgrimState Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateBPFL.GetStateTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const EPilgrimQuickplayState&           State                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UPilgrimQuickplayStateBPFL::GetStateTag(const EPilgrimQuickplayState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PilgrimQuickplayStateBPFL", "GetStateTag");

	Params::PilgrimQuickplayStateBPFL_GetStateTag Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.CleanUpStageForPlayer
// (BlueprintAuthorityOnly, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayStateMachine::CleanUpStageForPlayer(class AFortPlayerPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "CleanUpStageForPlayer");

	Params::PilgrimQuickplayStateMachine_CleanUpStageForPlayer Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.GetPlayerPawnsInPlayspace
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AFortPlayerPawn*>*         PlayerPawns                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimQuickplayStateMachine::GetPlayerPawnsInPlayspace(TArray<class AFortPlayerPawn*>* PlayerPawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "GetPlayerPawnsInPlayspace");

	Params::PilgrimQuickplayStateMachine_GetPlayerPawnsInPlayspace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PlayerPawns != nullptr)
		*PlayerPawns = std::move(Parms.PlayerPawns);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.PrepareStageForPlayer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TeleportLocation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  TeleportRotation                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UPilgrimQuickplayStateMachine::PrepareStageForPlayer(class AFortPlayerPawn* Pawn, const struct FVector& TeleportLocation, const struct FRotator& TeleportRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "PrepareStageForPlayer");

	Params::PilgrimQuickplayStateMachine_PrepareStageForPlayer Parms{};

	Parms.Pawn = Pawn;
	Parms.TeleportLocation = std::move(TeleportLocation);
	Parms.TeleportRotation = std::move(TeleportRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.TeleportAllPlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     TeleportTagRequirements                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimQuickplayStateMachine::TeleportAllPlayers(const struct FGameplayTagContainer& TeleportTagRequirements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "TeleportAllPlayers");

	Params::PilgrimQuickplayStateMachine_TeleportAllPlayers Parms{};

	Parms.TeleportTagRequirements = std::move(TeleportTagRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.GetActivePilgrimStateId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPilgrimQuickplayState                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPilgrimQuickplayState UPilgrimQuickplayStateMachine::GetActivePilgrimStateId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "GetActivePilgrimStateId");

	Params::PilgrimQuickplayStateMachine_GetActivePilgrimStateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.GetActivePilgrimStateObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPilgrimQuickplayStateBase*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPilgrimQuickplayStateBase* UPilgrimQuickplayStateMachine::GetActivePilgrimStateObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "GetActivePilgrimStateObject");

	Params::PilgrimQuickplayStateMachine_GetActivePilgrimStateObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.GetDailyQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortQuestItemDefinition*>*OutDailyQuests                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPilgrimQuickplayStateMachine::GetDailyQuests(TArray<class UFortQuestItemDefinition*>* OutDailyQuests) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "GetDailyQuests");

	Params::PilgrimQuickplayStateMachine_GetDailyQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDailyQuests != nullptr)
		*OutDailyQuests = std::move(Parms.OutDailyQuests);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayStateMachine.GetEventRouter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEventRouterComponent*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEventRouterComponent* UPilgrimQuickplayStateMachine::GetEventRouter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayStateMachine", "GetEventRouter");

	Params::PilgrimQuickplayStateMachine_GetEventRouter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_Intro.UpdateCameraWaitTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             NewWaitTime                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_Intro::UpdateCameraWaitTime(const float NewWaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_Intro", "UpdateCameraWaitTime");

	Params::PilgrimQuickplayState_Intro_UpdateCameraWaitTime Parms{};

	Parms.NewWaitTime = NewWaitTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongGameplay.BuildSongResultData
// (Final, Native, Protected)

void UPilgrimQuickplayState_SongGameplay::BuildSongResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongGameplay", "BuildSongResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongGameplay.OnMusicBattleFinished
// (Final, Native, Protected)
// Parameters:
// EMusicBattleEndReason                   EndReason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_SongGameplay::OnMusicBattleFinished(EMusicBattleEndReason EndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongGameplay", "OnMusicBattleFinished");

	Params::PilgrimQuickplayState_SongGameplay_OnMusicBattleFinished Parms{};

	Parms.EndReason = EndReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongGameplay.OnMusicBattleStoppedEarly
// (Final, Native, Protected)
// Parameters:
// EMusicBattleEndReason                   EndReason                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_SongGameplay::OnMusicBattleStoppedEarly(EMusicBattleEndReason EndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongGameplay", "OnMusicBattleStoppedEarly");

	Params::PilgrimQuickplayState_SongGameplay_OnMusicBattleStoppedEarly Parms{};

	Parms.EndReason = EndReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongGameplay.GetPilgrimMusicBattleInstances
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class APilgrimMusicBattleInstance*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class APilgrimMusicBattleInstance*> UPilgrimQuickplayState_SongGameplay::GetPilgrimMusicBattleInstances() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongGameplay", "GetPilgrimMusicBattleInstances");

	Params::PilgrimQuickplayState_SongGameplay_GetPilgrimMusicBattleInstances Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.ClientUpdateStateEndTime
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ServerWorldEndTimeSeconds                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_SongResults::ClientUpdateStateEndTime(float ServerWorldEndTimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "ClientUpdateStateEndTime");

	Params::PilgrimQuickplayState_SongResults_ClientUpdateStateEndTime Parms{};

	Parms.ServerWorldEndTimeSeconds = ServerWorldEndTimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.GoToNextState
// (Final, Native, Public, BlueprintCallable)

void UPilgrimQuickplayState_SongResults::GoToNextState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "GoToNextState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.HandleTimerFinished
// (Native, Event, Protected, BlueprintEvent)

void UPilgrimQuickplayState_SongResults::HandleTimerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "HandleTimerFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.OnPlayerDisconnected
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDisconnected                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_SongResults::OnPlayerDisconnected(class AFortPlayerStateAthena* PlayerState, bool bIsDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "OnPlayerDisconnected");

	Params::PilgrimQuickplayState_SongResults_OnPlayerDisconnected Parms{};

	Parms.PlayerState = PlayerState;
	Parms.bIsDisconnected = bIsDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.OnRep_ServerEndTime
// (Final, Native, Protected)

void UPilgrimQuickplayState_SongResults::OnRep_ServerEndTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "OnRep_ServerEndTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.ServerRecievedPlayPreviousSongFromClient
// (Final, Native, Protected)
// Parameters:
// class UPilgrimPlayerControllerComponent*ControllerComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPilgrimStateMachineMessage             StateMachineMessage                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_SongResults::ServerRecievedPlayPreviousSongFromClient(class UPilgrimPlayerControllerComponent* ControllerComponent, EPilgrimStateMachineMessage StateMachineMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "ServerRecievedPlayPreviousSongFromClient");

	Params::PilgrimQuickplayState_SongResults_ServerRecievedPlayPreviousSongFromClient Parms{};

	Parms.ControllerComponent = ControllerComponent;
	Parms.StateMachineMessage = StateMachineMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplayState_SongResults.ServerSetEndTime
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ServerWorldEndTimeSeconds                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplayState_SongResults::ServerSetEndTime(float ServerWorldEndTimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplayState_SongResults", "ServerSetEndTime");

	Params::PilgrimQuickplayState_SongResults_ServerSetEndTime Parms{};

	Parms.ServerWorldEndTimeSeconds = ServerWorldEndTimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplaySuspendHandleComponent.ServerOnTimedInputReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPilgrimPlayerControllerComponent*PilgrimPC                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPilgrimTimedInput&        TimedInput                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UPilgrimQuickplaySuspendHandleComponent::ServerOnTimedInputReceived(class UPilgrimPlayerControllerComponent* PilgrimPC, const struct FPilgrimTimedInput& TimedInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySuspendHandleComponent", "ServerOnTimedInputReceived");

	Params::PilgrimQuickplaySuspendHandleComponent_ServerOnTimedInputReceived Parms{};

	Parms.PilgrimPC = PilgrimPC;
	Parms.TimedInput = std::move(TimedInput);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimQuickplaySuspendHandleComponent.ServerSyncHeartbeatMessageReceived
// (Final, Native, Protected)
// Parameters:
// class UPilgrimPlayerControllerComponent*PilgrimPC                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimQuickplaySuspendHandleComponent::ServerSyncHeartbeatMessageReceived(class UPilgrimPlayerControllerComponent* PilgrimPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimQuickplaySuspendHandleComponent", "ServerSyncHeartbeatMessageReceived");

	Params::PilgrimQuickplaySuspendHandleComponent_ServerSyncHeartbeatMessageReceived Parms{};

	Parms.PilgrimPC = PilgrimPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimStandinDirector.SetupListeners
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UGameplayEventRouterComponent*    EventRouter                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimStandinDirector::SetupListeners(class UGameplayEventRouterComponent* EventRouter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimStandinDirector", "SetupListeners");

	Params::PilgrimStandinDirector_SetupListeners Parms{};

	Parms.EventRouter = EventRouter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimStandinDirector.TeleportSpawnedStandins
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AFortPlayerStart*>&  Destinations                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPilgrimStandinDirector::TeleportSpawnedStandins(const TArray<class AFortPlayerStart*>& Destinations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimStandinDirector", "TeleportSpawnedStandins");

	Params::PilgrimStandinDirector_TeleportSpawnedStandins Parms{};

	Parms.Destinations = std::move(Destinations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimStandinDirector.GetStandinPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerPawnAthena*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerPawnAthena*> UPilgrimStandinDirector::GetStandinPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimStandinDirector", "GetStandinPawns");

	Params::PilgrimStandinDirector_GetStandinPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimStandinDirector.GetStandinStates
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerStateAthena*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerStateAthena*> UPilgrimStandinDirector::GetStandinStates() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimStandinDirector", "GetStandinStates");

	Params::PilgrimStandinDirector_GetStandinStates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PilgrimQuickplayRuntime.PilgrimStandinPawnComponent.SetupListeners
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UGameplayEventRouterComponent*    EventRouter                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimStandinPawnComponent::SetupListeners(class UGameplayEventRouterComponent* EventRouter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimStandinPawnComponent", "SetupListeners");

	Params::PilgrimStandinPawnComponent_SetupListeners Parms{};

	Parms.EventRouter = EventRouter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PilgrimQuickplayRuntime.PilgrimStandinPawnComponent.StartInstrumentAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASparksMusicPlayspace*            Playspace                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPilgrimStandinPawnComponent::StartInstrumentAnimation(class APlayerState* PlayerState, class ASparksMusicPlayspace* Playspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PilgrimStandinPawnComponent", "StartInstrumentAnimation");

	Params::PilgrimStandinPawnComponent_StartInstrumentAnimation Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Playspace = Playspace;

	UObject::ProcessEvent(Func, &Parms);
}

}

