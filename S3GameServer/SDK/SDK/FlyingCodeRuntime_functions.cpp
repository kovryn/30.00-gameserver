#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlyingCodeRuntime

#include "Basic.hpp"

#include "FlyingCodeRuntime_classes.hpp"
#include "FlyingCodeRuntime_parameters.hpp"


namespace SDK
{

// Function FlyingCodeRuntime.FortCameraMode_Flying.BP_ProcessViewRotation
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// const struct FRotator&                  InViewRotation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FRotator&                  InDeltaRot                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutShouldOverride                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        OutViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator*                        OutDeltaRot                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UFortCameraMode_Flying::BP_ProcessViewRotation(const struct FRotator& InViewRotation, const struct FRotator& InDeltaRot, float DeltaTime, bool* bOutShouldOverride, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCameraMode_Flying", "BP_ProcessViewRotation");

	Params::FortCameraMode_Flying_BP_ProcessViewRotation Parms{};

	Parms.InViewRotation = std::move(InViewRotation);
	Parms.InDeltaRot = std::move(InDeltaRot);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bOutShouldOverride != nullptr)
		*bOutShouldOverride = Parms.bOutShouldOverride;

	if (OutViewRotation != nullptr)
		*OutViewRotation = std::move(Parms.OutViewRotation);

	if (OutDeltaRot != nullptr)
		*OutDeltaRot = std::move(Parms.OutDeltaRot);
}


// Function FlyingCodeRuntime.FortMovementMode_ExtLogicFlying.CanBeginFlying
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovementMode_ExtLogicFlying::CanBeginFlying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtLogicFlying", "CanBeginFlying");

	Params::FortMovementMode_ExtLogicFlying_CanBeginFlying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

