#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FabricRuntime

#include "Basic.hpp"

#include "HarmonixMetasound_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FabricRuntime_structs.hpp"
#include "ModularGameplay_classes.hpp"
#include "UMG_structs.hpp"
#include "GameFeatures_classes.hpp"
#include "PlayspaceSystem_classes.hpp"
#include "FortniteGame_classes.hpp"
#include "HarmonixDsp_structs.hpp"
#include "MetasoundEngine_structs.hpp"
#include "FMCoreRuntime_structs.hpp"
#include "HarmonixMidi_structs.hpp"
#include "TargetingSystem_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// Class FabricRuntime.FabricStepSequencerGridComponent
// 0x0070 (0x0290 - 0x0220)
class UFabricStepSequencerGridComponent final : public USceneComponent
{
public:
	struct FVector2D                              GridExtents;                                       // 0x0220(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              GridSpacing;                                       // 0x0230(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SingleTrackNumItemsPerRow;                         // 0x0240(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              EditorPreviewGridSize;                             // 0x0248(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFabricStepSequencerGridSquareComponent> GridSquareClass;                      // 0x0258(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESequencerType                                SequencerType;                                     // 0x0260(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActiveTrack;                                       // 0x0264(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFabricStepSequencerComponent*          StepSequencer;                                     // 0x0268(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTrackRow>                      GridRows;                                          // 0x0270(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_280[0x10];                                     // 0x0280(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetGridSquareXPosition(const int32 NumSteps, const int32 StepIndex);
	float GetGridSquareYPosition(const int32 NumRows, const int32 RowIndex);
	bool IsBypassed();
	void NotifyInteractionFocusTargetExternallyChanged(class APlayerController* PlayerController, int32 SourceRowIndex, int32 SourceColumnIndex, int32 FocusRowIndex, int32 FocusColumnIndex, bool bIsFocused);
	void OnBeatOffsetChanged(float BeatOffset);
	void OnBeatScaleChanged(float BeatScale);
	void OnCurrentPageChanged(int32 NewPage);
	void OnFullTableChanged();
	void OnNoteStyleChanged(EFabricNoteStyle style);
	void OnNumStepsChanged(int32 NumSteps);
	void OnNumTracksChanged(int32 NumTracks);
	void OnQuarterNotesLengthChanged(float QuarterNotesLength);
	void OnStepChanged(const struct FFabricSequencerStepChangedInfo& StepInfo);
	void SetActiveTrackIndex(int32 ActiveTrackIndex);
	void SetBypassed(bool bBypassed);
	void SetGridVisible(bool bInGridVisible, bool bForceRefresh);

	struct FVector GetGridSquareExtents(const int32 RowIndex, const int32 ColumnIndex) const;
	struct FVector2D GetGridSquareSize(const int32 NumSteps, const int32 NumRows) const;
	bool IsStepToggledOnForAnyTrack(int32 StepIndex) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricStepSequencerGridComponent">();
	}
	static class UFabricStepSequencerGridComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricStepSequencerGridComponent>();
	}
};

// Class FabricRuntime.FabricAnimatableButtonInterface
// 0x0000 (0x0000 - 0x0000)
class IFabricAnimatableButtonInterface final
{
public:
	void PlayCloseAnimation();
	void PlayOpenAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricAnimatableButtonInterface">();
	}
	static class IFabricAnimatableButtonInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricAnimatableButtonInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricSteppedPreviewFXComponent
// 0x0060 (0x09D0 - 0x0970)
class UFabricSteppedPreviewFXComponent : public UInstancedStaticMeshComponent
{
public:
	int32                                         NumberOfSteps;                                     // 0x0968(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bManuallySpaceMeshInstances;                       // 0x096C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAlignToTransformCenter;                           // 0x096D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_96E[0x2];                                      // 0x096E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CenterAlignmentBounds;                             // 0x0970(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceBetweenInstances;                          // 0x0974(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceBetweenTripletIntances;                    // 0x0978(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceBetweenInstanceSets;                       // 0x097C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DistanceBetweenTripletInstanceSets;                // 0x0980(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFabricNoteStyle                              NoteStyle;                                         // 0x0984(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_985[0x3];                                      // 0x0985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CPDDeviceEnabled;                                  // 0x0988(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CPDNumSteps;                                       // 0x098C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDNoteOn;                                        // 0x0990(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDNoteLength;                                    // 0x0994(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDSpanLength;                                    // 0x0998(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDNoteTime;                                      // 0x099C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDGenericFloatIndex;                             // 0x09A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LengthStepBeats;                                   // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StepLengthQuarterNotes;                            // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StepBeatScale;                                     // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StepBeatOffset;                                    // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LengthTrackBeats;                                  // 0x09B4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        InstanceSpace;                                     // 0x09B8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        InstanceSetSpace;                                  // 0x09C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C8[0x8];                                      // 0x09C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ConstructPreviewVisuals(int32 NumSteps, float StepBeatLength, bool bForceUpdateTransform, bool bInTestNotesOn);
	float GetNoteOn(int32 InstanceIndex);
	void OnBeatOffsetChanged(float BeatOffset);
	void OnBeatScaleChanged(float BeatScale);
	void OnNoteStyleChanged(EFabricNoteStyle style);
	void OnNumStepsChanged(int32 NumSteps);
	void OnNumTracksChanged(int32 NumTracks);
	void OnPageChanged(int32 CurrentPage);
	void OnQuarterNotesLengthChanged(float QuarterNoteLength);
	void SetGenericFloatValue(int32 InstanceIndex, float FloatValue, bool bMarkRenderStateDirty);
	void SetNoteLength(int32 InstanceIndex, float NoteLengthBeats);
	void SetNoteOn(int32 InstanceIndex, float NoteOn, bool bMarkRenderStateDirty);
	void SetNoteTime(int32 InstanceIndex, float NoteTimeOffsetBeats);
	void SetNumSteps(int32 NumSteps);
	void SetSpanLength(int32 InstanceIndex, float SpanLengthBeats);
	void UpdateAllCurrentStepData(int32 NumSteps, float StepLengthBeats);
	void UpdateDeviceEnabledFX(bool bEnabled);
	void UpdateExistingTransforms(int32 NumInstances, int32 NumSteps);
	void UpdateStepData(int32 Index_0, bool bMarkRenderStateDirty);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricSteppedPreviewFXComponent">();
	}
	static class UFabricSteppedPreviewFXComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricSteppedPreviewFXComponent>();
	}
};

// Class FabricRuntime.FabricSequencerPreviewFXComponent
// 0x0010 (0x09E0 - 0x09D0)
class UFabricSequencerPreviewFXComponent final : public UFabricSteppedPreviewFXComponent
{
public:
	TWeakObjectPtr<class UFabricStepSequencerComponent> StepSequencer;                               // 0x09D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFabricStepSequencerGridComponent> StepSequencerGrid;                       // 0x09D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void InitializePreviewFXComponent(class UFabricStepSequencerComponent* InStepSequencer, class UFabricStepSequencerGridComponent* InStepSequencerGrid, bool bInTestNotesOn);
	void OnFullTableChanged();
	void OnStepChanged(const struct FFabricSequencerStepChangedInfo& StepInfo);
	void SetSingleTrackNoteOn(int32 InstanceIndex, int32 TrackPICDIndex, float NoteOn, bool bMarkRenderStateDirty);
	void SetSustainLength(int32 InstanceIndex, float SustainLengthBeats);
	void UpdateNoteOn(int32 Index_0, int32 NumSteps, bool bMarkRenderStateDirty);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricSequencerPreviewFXComponent">();
	}
	static class UFabricSequencerPreviewFXComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricSequencerPreviewFXComponent>();
	}
};

// Class FabricRuntime.FabricButtonBase
// 0x00A8 (0x0338 - 0x0290)
class AFabricButtonBase final : public AActor
{
public:
	uint8                                         Pad_290[0x18];                                     // 0x0290(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayerController* InteractingController, bool IsToggle)> ToggleStateChanged; // 0x02A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	double                                        OpenTimeSeconds;                                   // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        CloseTimeSeconds;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasToggle;                                        // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EButtonPressMethod                            ClickMethod;                                       // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      InteractingController;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ButtonId;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ButtonLabel;                                       // 0x02E8(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   ButtonDescription;                                 // 0x02F8(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0308(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bEnabled;                                          // 0x0328(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHovered;                                          // 0x0329(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPressed;                                          // 0x032A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECheckBoxState                                ToggleState;                                       // 0x032B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFabricInteractableViewModel*           WidgetViewModel;                                   // 0x0330(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UTimelineComponent* GetCloseTimeline();
	class UTimelineComponent* GetOpenTimeline();
	void HandleButtonClicked();
	void HandleButtonDoubleClicked();
	void HandleButtonHovered();
	void HandleButtonPressed();
	void HandleButtonReleased();
	void HandleButtonUnhovered();
	bool IsEnabled();
	bool IsHovered();
	bool IsPressed();
	bool IsToggledOn();
	void OnButtonClicked();
	void OnButtonDoubleClicked();
	void OnButtonPressed();
	void OnButtonReleased();
	void OnDisabled();
	void OnEnabled();
	void OnHovered();
	void OnToggleStateChanged(bool bIsToggled);
	void OnUnhovered();
	void SetEnabled(bool bNewEnabled);
	void SetToggleState(bool bNewToggleState, bool bBroadcast, bool bForce);
	void SetWidgetViewModel(class UFabricInteractableViewModel* ViewModel);
	void SwapToggle();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricButtonBase">();
	}
	static class AFabricButtonBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFabricButtonBase>();
	}
};

// Class FabricRuntime.FabricButtonComponentBase
// 0x00C0 (0x0690 - 0x05D0)
class UFabricButtonComponentBase final : public UStaticMeshComponent
{
public:
	uint8                                         Pad_5D0[0x10];                                     // 0x05D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class APlayerController* InteractingController, bool IsToggle)> ToggleStateChanged; // 0x05E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	double                                        OpenTimeSeconds;                                   // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        CloseTimeSeconds;                                  // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasToggle;                                        // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EButtonPressMethod                            ClickMethod;                                       // 0x0601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_602[0x6];                                      // 0x0602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      InteractingController;                             // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ButtonId;                                          // 0x0610(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   ButtonLabel;                                       // 0x0620(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                   ButtonDescription;                                 // 0x0630(0x0010)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0640(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseScreenGrid;                                    // 0x0660(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ScreenGridPosition;                                // 0x0668(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnabled;                                          // 0x0678(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHovered;                                          // 0x0679(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPressed;                                          // 0x067A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECheckBoxState                                ToggleState;                                       // 0x067B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFabricInteractableViewModel*           WidgetViewModel;                                   // 0x0680(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_688[0x8];                                      // 0x0688(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ConstructButton();
	class UTimelineComponent* GetCloseTimeline();
	class UTimelineComponent* GetOpenTimeline();
	void HandleButtonClicked();
	void HandleButtonDoubleClicked();
	void HandleButtonHovered();
	void HandleButtonPressed();
	void HandleButtonReleased();
	void HandleButtonUnhovered();
	bool IsEnabled();
	bool IsHovered();
	bool IsPressed();
	bool IsToggledOn();
	void OnButtonClicked();
	void OnButtonDoubleClicked();
	void OnButtonPressed();
	void OnButtonReleased();
	void OnDisabled();
	void OnEnabled();
	void OnHovered();
	void OnToggleStateChanged(bool bIsToggled);
	void OnUnhovered();
	void SetEnabled(bool bNewEnabled);
	void SetToggleState(bool bNewToggleState, bool bBroadcast, bool bForce);
	void SetWidgetViewModel(class UFabricInteractableViewModel* ViewModel);
	void SwapToggle();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricButtonComponentBase">();
	}
	static class UFabricButtonComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricButtonComponentBase>();
	}
};

// Class FabricRuntime.FabricModulatable
// 0x0300 (0x0328 - 0x0028)
class UFabricModulatable : public UObject
{
public:
	uint8                                         Pad_28[0x4];                                       // 0x0028(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class AActor>                  ModulatedActor;                                    // 0x002C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ModulatorParams;                                   // 0x0038(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSet<class FName>                             NonModulatedParamsWithCallbacks;                   // 0x0048(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FString, TWeakObjectPtr<class UObject>> Modulators;                                   // 0x0098(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class FName, class FName>                LastBroadcastedValues;                             // 0x00E8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UObject>>         ModulatorSources;                                  // 0x0138(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_148[0x1E0];                                    // 0x0148(0x01E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAnyOptionUpdated();
	void OnModulatedPropertyChanged(const class FString& Value, class UObject* ModulatorObject);
	void OnModulatorFloatProviderConnectionChanged(bool bConnected, class UObject* ModulatorObject);
	void OnOptionsLoaded();

	class AActor* GetModulatedActor() const;
	bool GetModulatedBool(const class FString& Param, const struct FMidiSongPos& SongPos, bool* OutBool) const;
	bool GetModulatedEnum(const class FString& Param, const struct FMidiSongPos& SongPos, uint8* OutEnum) const;
	bool GetModulatedFloat(const class FString& Param, const struct FMidiSongPos& SongPos, float* OutFloat) const;
	bool GetModulatedInt(const class FString& Param, const struct FMidiSongPos& SongPos, int32* OutInt) const;
	bool GetModulatedString(const class FString& Param, const struct FMidiSongPos& SongPos, class FString* OutString) const;
	bool IsParamModulated(const class FString& Param) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricModulatable">();
	}
	static class UFabricModulatable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricModulatable>();
	}
};

// Class FabricRuntime.FabricMetaSoundPatchWrapper
// 0x0460 (0x0788 - 0x0328)
class UFabricMetaSoundPatchWrapper : public UFabricModulatable
{
public:
	class FName                                   EnabledStateInputName;                             // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMetaSoundPatch>         MetaSoundPatch;                                    // 0x0330(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FName>              UserOptionsToNodeInputs;                           // 0x0350(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FFabricMetaSoundPatchWrapper_PerPlatformBoolInputTuning> PerPlatformInputBools;    // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFabricMetaSoundPatchWrapper_PerPlatformIntInputTuning> PerPlatformInputInts;      // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFabricMetaSoundPatchWrapper_PerPlatformFloatInputTuning> PerPlatformInputFloats;  // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFabricMetaSoundDirectInputInfo> DirectInputs;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundPatchWrapperBinding    SimpleSignalOutputBinding;                         // 0x03E0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const struct FFabricMetaSoundPatchWrapperBinding& Binding)> OnSimpleSignalBindingUpdate; // 0x0430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class FName                                   VisibleInputParamName;                             // 0x0440(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   AudibleInputParamName;                             // 0x0444(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanConsumeVisibleFlag;                            // 0x0448(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanConsumeAudibleFlag;                            // 0x0449(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsVisible;                                        // 0x044A(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsAudible;                                        // 0x044B(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44C[0x24];                                     // 0x044C(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FName& OutputName, const TArray<int32>& Outputs)> OnMetaSoundOutputIntChangedBatch; // 0x0470(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FName& OutputName, TArray<float>* Outputs, struct FFabricMetaSoundPatchWrapperPeakTamer* PeakTamer, float DeltaSeconds)> OnMetaSoundOutputFloatChangedBatch; // 0x0480(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFabricMetaSoundManagerComponent*       CurrentManager;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFabricMetaSoundTickSubsystem> TickSubsystem;                               // 0x0498(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFabricMetaSoundNodeInfo               CurrentNode;                                       // 0x04A0(0x00F0)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                  PositionalProxyActor;                              // 0x0590(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_598[0x20];                                     // 0x0598(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UAudioComponent>         CurrentAudioComponent;                             // 0x05B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAudioComponent>         NewAudioComponent;                                 // 0x05C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5C8[0x10];                                     // 0x05C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CombinerMetaSoundType;                             // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   AnalyzerMetaSoundType;                             // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFabricMetaSoundRuntimeInputInfo> MetaSoundRuntimeInputInfos;                      // 0x05E0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFabricMetaSoundPatchWrapper*>   ConnectedInputWrappers;                            // 0x05F0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFabricMetaSoundPatchWrapper*>   PendingInputWrappers;                              // 0x0600(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFabricMetaSoundPatchWrapper*>   PendingOutputWrappers;                             // 0x0610(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FFabricMetaSoundConnectionBuilder      ConnectionBuilder;                                 // 0x0620(0x00C0)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_6E0[0x50];                                     // 0x06E0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMetaSoundCombinerNodeHandle>   CombinersInUse;                                    // 0x0730(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFabricMetaSoundPatchWrapper*>   ConnectedOutputWrappers;                           // 0x0740(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	EFabricMetaSoundPatchWrapperQuality           PatchWrapperQuality;                               // 0x0750(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_751[0x17];                                     // 0x0751(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundPatch*                        LoadedMetaSoundPatch;                              // 0x0768(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_770[0x18];                                     // 0x0770(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool AddToGraphOnFirstConnect();
	void AddToManagerGraph(class UFabricMetaSoundManagerComponent* Manager);
	void NeedsAnalyzerParameterPackUpdate();
	void NeedsGeneratorHandleUpdate();
	void NeedsOutputWatcherUpdate();
	void NeedsParameterPackUpdate();
	void OnAddedToManagerGraph(class UFabricMetaSoundManagerComponent* Manager);
	void OnConnectedModulatorEnabledChanged(class UFabricMetaSoundPatchWrapper* EnabledPatchWrapper, bool bEnabled);
	void OnConnectedModulatorNodeCreated(class UFabricMetaSoundPatchWrapper* EnabledPatchWrapper);
	void OnMetasoundManagerEndPlay();
	void OnMetaSoundOutputChanged(class FName OutputName, const struct FMetaSoundOutput& Output);
	void OnMetaSoundOutputValueChanged(class FName OutputName, const struct FMetaSoundOutput& MetaSoundOutput);
	void RemoveFromCurrentGraph();
	void SetBoolInput(const class FName& MetaSoundInputName, bool bValue);
	void SetEnumInput(const class FName& MetaSoundInputName, uint8 Value);
	void SetFloatInput(const class FName& MetaSoundInputName, float Value);
	void SetIntInput(const class FName& MetaSoundInputName, int32 Value);
	void SetIsAudible(bool bInIsAudible);
	void SetNodeEnabled(bool bEnabled);
	void SetPositionalProxyActor(class AActor* InLocationProxyActor);
	void SetRunsOnServer(bool bAllowRunOnServer);
	void SetStringInput(const class FName& MetaSoundInputName, const class FString& Value);

	TSet<class FName> GetMetaSoundInputNames() const;
	class UMusicClockComponent* GetMusicClock() const;
	bool GetNodeEnabled() const;
	bool GetRunsOnServer() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundPatchWrapper">();
	}
	static class UFabricMetaSoundPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundPatchWrapper>();
	}
};

// Class FabricRuntime.FabricNoteReceivedPatchWrapper
// 0x0048 (0x07D0 - 0x0788)
class UFabricNoteReceivedPatchWrapper : public UFabricMetaSoundPatchWrapper
{
public:
	class FName                                   NoteOutputName;                                    // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78C[0x4];                                      // 0x078C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         TriggerNoteParams;                                 // 0x0790(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FMidiEventInfo& MidiEvent)> OnMatchingMidiEventPassed; // 0x07A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B0[0x20];                                     // 0x07B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMetaSoundMidiEventPassed(class FName OutputName, const struct FMetaSoundOutput& Output);
	void OnTriggerNoteChanged(int32 NoteIndex, bool bTriggerActive);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricNoteReceivedPatchWrapper">();
	}
	static class UFabricNoteReceivedPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricNoteReceivedPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMIDIPlayerPatchWrapper
// 0x0030 (0x0800 - 0x07D0)
class UFabricMIDIPlayerPatchWrapper final : public UFabricNoteReceivedPatchWrapper
{
public:
	class FName                                   MidiTrackIndexUserOptionName;                      // 0x07D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EnableMidiOutputName;                              // 0x07D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TempoMapMidiOutName;                               // 0x07D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7DC[0x4];                                      // 0x07DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMidiFile*                              CurrentMidiFile;                                   // 0x07E0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         CurrentMidiTrackIndex;                             // 0x07E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7EC[0x14];                                     // 0x07EC(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetMidiFile(class UMidiFile* MidiFile);
	void SetMidiOutputEnabled(bool bMidiOutputEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMIDIPlayerPatchWrapper">();
	}
	static class UFabricMIDIPlayerPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMIDIPlayerPatchWrapper>();
	}
};

// Class FabricRuntime.FabricDevice
// 0x0000 (0x0000 - 0x0000)
class IFabricDevice final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricDevice">();
	}
	static class IFabricDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricDevice>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricFloatProviderBase
// 0x0058 (0x0380 - 0x0328)
class UFabricFloatProviderBase : public UFabricModulatable
{
public:
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float, class UFabricFloatProviderBase* FloatProvider)> OnFloatChanged; // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bEnabled, class UFabricFloatProviderBase* FloatProvider)> OnFloatProviderEnabledChanged; // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         CurrentFloat;                                      // 0x0350(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UMusicClockComponent>    MusicClock;                                        // 0x0354(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFabricMetaSoundModulatorPatchWrapper*  AssociatedPatchWrapper;                            // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 EnabledParam;                                      // 0x0368(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAlwaysModulates;                                  // 0x0378(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBindBlueprintOnFloatChanged;                      // 0x0379(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsEnabled;                                        // 0x037A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bModulatorValueChanged;                            // 0x037B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReceiveTick(float DeltaSeconds);
	void SetAssociatedPatchWrapper(class UFabricMetaSoundModulatorPatchWrapper* PatchWrapper);
	void SetMusicClock(class UMusicClockComponent* NewMusicClock);
	void SetProviderEnabled(bool bInIsEnabled);

	class UFabricMetaSoundModulatorPatchWrapper* GetAssociatedPatchWrapper() const;
	float GetCurrentFloat() const;
	struct FMidiSongPos GetCurrentSongPos() const;
	struct FMidiSongPos GetCurrentSongPosWithOffset(float OffsetSeconds) const;
	float GetFloatAtSongPos(const struct FMidiSongPos& SongPos) const;
	EFabricFloatProviderType GetFloatProviderType() const;
	bool GetProviderEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricFloatProviderBase">();
	}
	static class UFabricFloatProviderBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricFloatProviderBase>();
	}
};

// Class FabricRuntime.FabricFloatProviderWave
// 0x0150 (0x04D0 - 0x0380)
class UFabricFloatProviderWave final : public UFabricFloatProviderBase
{
public:
	class FString                                 WaveShapeParam;                                    // 0x0380(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 FreeHzParam;                                       // 0x0390(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 MinParam;                                          // 0x03A0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 MaxParam;                                          // 0x03B0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 BeatDurationParam;                                 // 0x03C0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 BeatOffsetParam;                                   // 0x03D0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ShapeParam;                                        // 0x03E0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 StyleParam;                                        // 0x03F0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PhaseCPDIndex;                                     // 0x0400(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ValueCPDIndex;                                     // 0x0404(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x78];                                     // 0x0408(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TWeakObjectPtr<class UStaticMeshComponent>> PreviewDisplayMeshes;                           // 0x0480(0x0050)(ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void AddPreviewDisplayMesh(class UStaticMeshComponent* Mesh);
	void ClearPreviewDisplayMeshes();
	TArray<class UStaticMeshComponent*> GetPreviewDisplayMeshes();
	void RemovePreviewDisplayMesh(class UStaticMeshComponent* Mesh);
	void SetFreePhase(float InFreePhase);
	void SetRandomSeedByGuid(const struct FGuid& InRandomGuid);

	float GetCurrentFreePhase() const;
	float GetCurrentPhase() const;
	int32 GetRandomSeed() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricFloatProviderWave">();
	}
	static class UFabricFloatProviderWave* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricFloatProviderWave>();
	}
};

// Class FabricRuntime.FabricMetaSoundPatchOwner
// 0x0000 (0x0000 - 0x0000)
class IFabricMetaSoundPatchOwner final
{
public:
	class UFabricMetaSoundPatchWrapper* GetMetaSoundPatchWrapper();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundPatchOwner">();
	}
	static class IFabricMetaSoundPatchOwner* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricMetaSoundPatchOwner>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricStepSequencerComponent
// 0x0260 (0x0300 - 0x00A0)
class UFabricStepSequencerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 NumTracks)> OnNumTracksChanged;                              // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 NumSteps)> OnNumStepsChanged;                                // 0x00B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 CurrentPage)> OnPageChanged;                                 // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float QuarterNotes)> OnQuarterNotesLengthChanged;                  // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float BeatScale)> OnBeatScaleChanged;                              // 0x00E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float BeatOffset)> OnBeatOffsetChanged;                            // 0x00F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FFabricSequencerStepChangedInfo& StepInfo)> OnStepChanged; // 0x0108(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EFabricNoteStyle NoteStyle)> OnNoteStyleChanged;                   // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnFullTableChanged;                                // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 PageIndex)> OnPageCleared;                                   // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnLoopEnded;                                       // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                 LengthParam;                                       // 0x0158(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 DurationParam;                                     // 0x0168(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 PageParam;                                         // 0x0178(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 AutoPageParam;                                     // 0x0188(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 OctaveParam;                                       // 0x0198(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 NoteStyleParam;                                    // 0x01A8(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 LoopParam;                                         // 0x01B8(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 AutoPagePlaysBlankPagesParam;                      // 0x01C8(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMonophonic;                                       // 0x01D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsContinuation;                             // 0x01D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StepLengthQuarterNotes;                            // 0x01DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         StepBeatScale;                                     // 0x01E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSkipFourthStepInTriplet;                          // 0x01E4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFabricNoteStyle                              NoteStyle;                                         // 0x01E5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxSteps;                                          // 0x01E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentSteps;                                      // 0x01EC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMatchStepsToTimeSignature;                        // 0x01F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPages;                                          // 0x01F4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentPage;                                       // 0x01F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxTracks;                                         // 0x01FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentTracks;                                     // 0x0200(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LocalInteractionStartTrackIndex;                   // 0x0204(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LocalInteractionStartStepIndex;                    // 0x0208(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoPage;                                         // 0x020C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAutoPagePlaysBlankPages;                          // 0x020D(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLoop;                                             // 0x020E(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         RandomizationCommonSampleSize;                     // 0x020F(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RandomizationRestSelectionMaxPct;                  // 0x0210(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RandomizationCommonPitchSelectionMaxPct;           // 0x0214(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                     ContinuationControlClass;                          // 0x0218(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStepSequenceTable                     LocalStepTable;                                    // 0x0220(0x0028)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FFabricStepTablePacked                 PackedStepTable;                                   // 0x0248(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UFabricStepSequencerModulatable*        StepSequencerModulatable;                          // 0x0270(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 CachedContinuationControl;                         // 0x0278(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ContinuationRowIndex;                              // 0x0280(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ContinuationStepIndex;                             // 0x0284(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMidiStepSequence*                      MetaSoundMidiStepSequence;                         // 0x0290(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_298[0x68];                                     // 0x0298(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ApplyPage(int32 PageIndex, const struct FStepSequencePage& PageData);
	void ApplyTemplate(const class UMidiStepSequence* Template, int32 StepSequencePageIndex, const bool bUpdateSaveRecord);
	void ClearCurrentPage();
	void ClearPage(int32 Page, const bool bUpdateSaveRecord);
	void GetContinuationFocusIndeces(int32* OutRowIndex, int32* OutStepIndex, int32* OutNumContinuationSteps);
	class UMidiStepSequence* GetMidiStepSequence();
	void OnRep_PackedStepTable();
	void RandomizeCurrentPage();
	void RandomizePage(int32 Page);
	void SetBeatScale(float BeatScale);
	void SetCurrentPage(int32 NewPage);
	void SetLoop(bool bNewLoop);
	void SetMaxSteps(int32 NumSteps);
	void SetMonophonic(bool bNewMonophonic);
	void SetMusicClock(class UMusicClockComponent* InMusicClock);
	void SetNoteForTrack(const struct FMidiNote& Note, int32 Track);
	void SetNoteStyle(EFabricNoteStyle style);
	void SetNumberPages(int32 NumPages);
	void SetNumberSteps(int32 NumSteps);
	void SetNumberTracks(int32 NumTracks);
	void SetPlaying(bool bNewPlaying);
	void SetQuarterNotesLength(float QuarterNotes);
	void SetStepContinuation(int32 Row, int32 Column, bool bIsContinuation);
	void SetStepContinuationOnPage(int32 Page, int32 Row, int32 Column, bool bIsContinuation);
	void SetStepEnabled(int32 Row, int32 Column, bool bState);
	void SetStepEnabledOnPage(int32 Page, int32 Row, int32 Column, bool bState);
	void ToggleStepEnabled(int32 Row, int32 Column);
	void ToggleStepEnabledOnPage(int32 Page, int32 Row, int32 Column);
	void UpdatePackedStepTableSaveRecordIfChanged(const struct FFabricStepTablePacked& InPackedStepTable);

	int32 GetCurrentPage() const;
	float GetLengthStepBeats() const;
	float GetLengthStepQuarterNotes() const;
	float GetLengthTrackBeats() const;
	float GetLengthTrackQuarterNotes() const;
	float GetLongestContinuationLengthForColumn(int32 Column) const;
	float GetLongestContinuationLengthForColumnOnPage(int32 Page, int32 Column) const;
	int32 GetMaxSteps() const;
	int32 GetNumberSteps() const;
	int32 GetNumberTracks() const;
	int32 GetNumUsedSteps(int32 TotalSteps) const;
	void GetPageData(int32 PageIndex, struct FStepSequencePage* OutPageData) const;
	float GetStepContinuationLength(int32 Row, int32 Column) const;
	float GetStepContinuationLengthOnPage(int32 Page, int32 Row, int32 Column) const;
	bool GetStepEnabled(int32 Row, int32 Column) const;
	bool GetStepEnabledOnPage(int32 Page, int32 Row, int32 Column) const;
	bool GetStepIsContinuation(int32 Row, int32 Column) const;
	bool GetStepIsContinuationOnPage(int32 Page, int32 Row, int32 Column) const;
	float GetStepStartBeat(int32 Step) const;
	float GetStepStartQuarterNotes(int32 Step) const;
	bool GetSupportsContinuation() const;
	bool IsPageBlank(int32 PageIndex) const;
	bool IsStepEnabledForAnyTrack(int32 Column) const;
	bool IsStepEnabledForAnyTrackOnPage(int32 Page, int32 Column) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricStepSequencerComponent">();
	}
	static class UFabricStepSequencerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricStepSequencerComponent>();
	}
};

// Class FabricRuntime.FabricAudioGenerator
// 0x0000 (0x0000 - 0x0000)
class IFabricAudioGenerator final
{
public:
	struct FSourceEffectChainEntry GetAudioAnalyzer();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricAudioGenerator">();
	}
	static class IFabricAudioGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricAudioGenerator>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricMeshGenerator
// 0x0000 (0x0000 - 0x0000)
class IFabricMeshGenerator final
{
public:
	class UFabricMeshProviderBase* GetMeshProvider();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshGenerator">();
	}
	static class IFabricMeshGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricMeshGenerator>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricAudioModifier
// 0x0000 (0x0000 - 0x0000)
class IFabricAudioModifier final
{
public:
	TArray<struct FSourceEffectChainEntry> GetSourceEffectChainEntries();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricAudioModifier">();
	}
	static class IFabricAudioModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricAudioModifier>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricAudioReceiver
// 0x0000 (0x0000 - 0x0000)
class IFabricAudioReceiver final
{
public:
	class USoundSourceBus* GetSoundSourceBus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricAudioReceiver">();
	}
	static class IFabricAudioReceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricAudioReceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricFloatGenerator
// 0x0000 (0x0000 - 0x0000)
class IFabricFloatGenerator final
{
public:
	class UFabricFloatProviderBase* GetFloatProvider();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricFloatGenerator">();
	}
	static class IFabricFloatGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricFloatGenerator>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricFloatReceiver
// 0x0000 (0x0000 - 0x0000)
class IFabricFloatReceiver final
{
public:
	void SetFloatProviders(const TArray<class UFabricFloatProviderBase*>& FloatProvider);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricFloatReceiver">();
	}
	static class IFabricFloatReceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricFloatReceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricTextureGenerator
// 0x0000 (0x0000 - 0x0000)
class IFabricTextureGenerator final
{
public:
	class UFabricTextureProviderBase* GetTextureProvider();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTextureGenerator">();
	}
	static class IFabricTextureGenerator* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricTextureGenerator>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricSignificanceAsset
// 0x0010 (0x0040 - 0x0030)
class UFabricSignificanceAsset final : public UDataAsset
{
public:
	TArray<struct FFabricSignificanceBasedUpdateBucket> UpdateBuckets;                               // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricSignificanceAsset">();
	}
	static class UFabricSignificanceAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricSignificanceAsset>();
	}
};

// Class FabricRuntime.FabricTextureModifier
// 0x0000 (0x0000 - 0x0000)
class IFabricTextureModifier final
{
public:
	class UFabricTextureModifierBase* GetTextureModifier();

	bool IsShowingTexturePreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTextureModifier">();
	}
	static class IFabricTextureModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricTextureModifier>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricTextureReceiver
// 0x0000 (0x0000 - 0x0000)
class IFabricTextureReceiver final
{
public:
	void OnTexturesChanged(const TArray<struct FFabricTextureProviderTexture>& Texture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTextureReceiver">();
	}
	static class IFabricTextureReceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricTextureReceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricMeshModifier
// 0x0000 (0x0000 - 0x0000)
class IFabricMeshModifier final
{
public:
	void OnMeshesChanged(const TArray<struct FFabricMeshInstanceReference>& InstanceMeshReferences, bool bInstancesChanged);

	class UFabricMeshModifierBase* GetMeshModifier() const;
	bool IsShowingMeshPreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifier">();
	}
	static class IFabricMeshModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricMeshModifier>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricMeshReceiver
// 0x0000 (0x0000 - 0x0000)
class IFabricMeshReceiver final
{
public:
	void OnMeshInstanceReferencesChanged(const TArray<struct FFabricMeshInstanceReference>& MeshInstanceReferences, bool bMeshChanged, bool bInstancesChanged);
	void OnMeshInstancesChanged(const TArray<struct FTransform>& Meshes);
	void OnMeshReferenceChanged(const struct FFabricMeshProviderMeshReference& ReferenceMesh);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshReceiver">();
	}
	static class IFabricMeshReceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricMeshReceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricModulationNode
// 0x0020 (0x0048 - 0x0028)
class UFabricModulationNode final : public UObject
{
public:
	TArray<class UFabricFloatProviderBase*>       FloatProviders;                                    // 0x0028(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricModulationNode">();
	}
	static class UFabricModulationNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricModulationNode>();
	}
};

// Class FabricRuntime.FabricFloatProviderStep
// 0x0078 (0x03F8 - 0x0380)
class UFabricFloatProviderStep final : public UFabricFloatProviderBase
{
public:
	class FString                                 StepRateParam;                                     // 0x0380(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 ActiveStepsParam;                                  // 0x0390(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 StepParamBase;                                     // 0x03A0(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxSteps;                                          // 0x03B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFabricStepGenerator                   RuntimeGenerator;                                  // 0x03B8(0x0020)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void()>              OnFloatProviderStepInitialized;                    // 0x03D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x10];                                     // 0x03E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetStepLengthBeats() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricFloatProviderStep">();
	}
	static class UFabricFloatProviderStep* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricFloatProviderStep>();
	}
};

// Class FabricRuntime.FabricFloatProviderValueSetter
// 0x0080 (0x0400 - 0x0380)
class UFabricFloatProviderValueSetter final : public UFabricFloatProviderBase
{
public:
	class FString                                 ValueParam;                                        // 0x0380(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 TransitionTimingParam;                             // 0x0390(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A0[0x60];                                     // 0x03A0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float BroadcastCurrentValue(float OverriddenBeat);

	float CalculateTransitionTiming() const;
	bool CanUsePredictiveBeatBroadcasting() const;
	float GetUpdateBeat() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricFloatProviderValueSetter">();
	}
	static class UFabricFloatProviderValueSetter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricFloatProviderValueSetter>();
	}
};

// Class FabricRuntime.FabricHoldable
// 0x0000 (0x0000 - 0x0000)
class IFabricHoldable final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricHoldable">();
	}
	static class IFabricHoldable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricHoldable>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricIndicatorComponent
// 0x0080 (0x0120 - 0x00A0)
class UFabricIndicatorComponent final : public UGameFrameworkComponent
{
public:
	TMulticastInlineDelegate<void(bool bNewEnabledState)> OnEnabledStateChanged;                     // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonUserWidget>          FabricTooltipWidgetType;                           // 0x00B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           TargetsChangedTag;                                 // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  HUDTagsToHide;                                     // 0x00C0(0x0020)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortInputMappingContext*               IndicatorShowingInputContext;                      // 0x00E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         IndicatorShowingPriority;                          // 0x00E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           ShowMoreAction;                                    // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x28];                                      // 0x00F8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleTooltipsEnabledChanged();
	void OnIndicatorWidgetVisibilityChanged(const ESlateVisibility NewVisibility);
	void OnShowMoreActionTriggered(const struct FInputActionInstance& Instance);
	void SetIndicatorEnabled(bool bEnabled, bool bAllowWriteToSettings);
	void TryGetFortClientSettings();

	bool IsIndicatorEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricIndicatorComponent">();
	}
	static class UFabricIndicatorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricIndicatorComponent>();
	}
};

// Class FabricRuntime.FabricInteractableControllerComponent
// 0x00A0 (0x0140 - 0x00A0)
class UFabricInteractableControllerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnNoInteractablesHit;                              // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                  PlayerController;                                  // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortGadgetItemDefinition> FabricInteractionToolItemDefSoftPtr;             // 0x00C0(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortGadgetItemDefinition> OverriddenFabricInteractionToolItemDefSoftPtr;   // 0x00E0(0x0020)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGadgetItemDefinition*              FabricInteractionToolItemDef;                      // 0x0100(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EnsurePlayerHasInteractionToolRetryDelay;          // 0x0108(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10C[0x14];                                     // 0x010C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SoftFabricDeviceBaseClass;                         // 0x0120(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ClientReceiveDoesIslandContainFabricDevices(const bool bIslandContainsFabricDevices);
	void EnsurePlayerHasInteractionTool();
	void GiveBackInteractionTool();
	void OnCreativeModeEnabledChangedDelegate(bool bCreativeEnabled);
	void ServerGivePlayerFabricInteractionTool();
	void ServerRequestDoesIslandContainFabricDevices();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricInteractableControllerComponent">();
	}
	static class UFabricInteractableControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricInteractableControllerComponent>();
	}
};

// Class FabricRuntime.FabricInteractable
// 0x0000 (0x0000 - 0x0000)
class IFabricInteractable final
{
public:
	bool CanInteractWithHoldable(const TScriptInterface<class IFabricHoldable>& Holdable);
	void EndInteraction(class APlayerController* PlayerController, bool bWasDragAndDropInteraction);
	EFabricContinuousInteractionDirection GetContinuousInteractableDirection();
	float GetContinuousInteractableValueNormalized();
	struct FVector GetInteractableComponentLocation(class USceneComponent* Interactable);
	struct FVector GetInteractableForwardVector(class USceneComponent* Interactable);
	EFabricInteractableType GetInteractableType();
	class UAudioComponent* GetInteractionSFX();
	class UObject* GetLinkedInteractable();
	bool IsFocusDependentOnInteractionContext(class APlayerController* Controller);
	bool IsValidToInteractWith(class APlayerController* Controller);
	void OnInteractionFocusTargetChanged(class APlayerController* Controller, class UObject* FocusTarget, bool bIsFocused);
	void SetFocused(bool bIsFocused);
	void SetHitComponent(class USceneComponent* HitComponent);
	void SetInteractable(bool bInteractable);
	bool ShouldPassInteractionToComponent(class AFabricInteractionTool* InteractionTool);
	void StartInteraction(class APlayerController* Controller);
	void StartSpecialInteraction(class APlayerController* Controller);

	bool DoesInteractionRequireHoldable() const;
	void GetInteractableDescription(class FText* OutDescription) const;
	void GetInteractableName(class FText* OutName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricInteractable">();
	}
	static class IFabricInteractable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricInteractable>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricInteractablePlayspaceComponent
// 0x0050 (0x00F0 - 0x00A0)
class UFabricInteractablePlayspaceComponent final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_A0[0x50];                                      // 0x00A0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDownloadOnDemandCompleteIndividualClient(const struct FEventMessageTag& Channel, const struct FClientFinishedDownloadOnDemand& Context);
	void OnPlayspaceUserAdded(const struct FPlayspaceUser& PlayspaceUser);
	void SetFabricDeviceExistsInPlayspace();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricInteractablePlayspaceComponent">();
	}
	static class UFabricInteractablePlayspaceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricInteractablePlayspaceComponent>();
	}
};

// Class FabricRuntime.FabricInteractionTool
// 0x01E0 (0x1F48 - 0x1D68)
class AFabricInteractionTool final : public AFortWeaponRanged
{
public:
	TMulticastInlineDelegate<void(EFabricInteractionToolStates NewState, class AFortCreativeDeviceProp* Device)> OnInteractionStateChanged; // 0x1D68(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortCreativeDeviceProp* Device)> OnCablesGrabbed;           // 0x1D78(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortCreativeDeviceProp* Device)> OnCablesDropped;           // 0x1D88(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float CrossfadeSeconds)> OnMetasoundGeneratorCrossfadeStarted;     // 0x1D98(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class USplineMeshComponent>       FITSplineMeshComponentClass;                       // 0x1DA8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                       SplineComponent;                                   // 0x1DB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>           SplineMeshComponentArray;                          // 0x1DB8(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               SplineMeshMaterialInstance;                        // 0x1DC8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRange;                                          // 0x1DD0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinDragAndDropTriggerTime;                         // 0x1DD4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FiringRate;                                        // 0x1DD8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WipeAnim;                                          // 0x1DDC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         UseWipe;                                           // 0x1DE0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SplineMeshMaterialIndex;                           // 0x1DE4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CPDUVScale;                                        // 0x1DE8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CPDUVPosition;                                     // 0x1DEC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CPDWipeAnim;                                       // 0x1DF0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CPDUseWipe;                                        // 0x1DF4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SplineSectionLength;                               // 0x1DF8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxSplineSpawnedInAFrame;                          // 0x1DFC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SplineEndForwardMultiplier;                        // 0x1E00(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SplineStartForwardMultiplier;                      // 0x1E04(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                                HoveredInteractable;                               // 0x1E08(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                        HoveredInteractableHitComponent;                   // 0x1E10(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                PressedInteractable;                               // 0x1E18(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UObject>                 LastPressedInteractable;                           // 0x1E20(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                        PressedInteractableHitComponent;                   // 0x1E28(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortCreativeDeviceProp> InteractableOwnerDevice;                           // 0x1E30(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AccumulatedDragAndDropTriggerTime;                 // 0x1E38(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FInteractionData                       ServerInteractionData;                             // 0x1E3C(0x000C)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1E48[0x11];                                    // 0x1E48(0x0011)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bServerTriggerPressed;                             // 0x1E59(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1E5A[0x1];                                     // 0x1E5A(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bServerIsHoldingCable;                             // 0x1E5B(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1E5C[0x14];                                    // 0x1E5C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteractionSplinePoints               ServerSplinePoints;                                // 0x1E70(0x0060)(Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         ServerContinuousInteractableValue;                 // 0x1ED0(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1ED4[0x74];                                    // 0x1ED4(0x0074)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearSplineMesh();
	void ClientDeactiveWeaponAndState();
	void ClientStopInteracting();
	void DeactiveWeaponAndState();
	float GetContinuousInteractableValueNormalized();
	EFabricContinuousInteractionDirection GetContinuousInteractionDirection();
	float GetContinuousMovementValue();
	int32 GetContinuousStateValue();
	EFabricInteractionToolStates GetFabricInteractionToolState();
	class USceneComponent* GetHoveredInteractableHitComponent();
	EFabricInteractableType GetHoveredInteractableType();
	class UObject* GetPressedInteractable();
	void HandleMetasoundGeneratorCrossfade(float CrossfadeSeconds);
	bool IsHoldingCables();
	void OnRep_ServerContinuousInteractableValue();
	void OnRep_ServerInteractionData();
	void OnRep_ServerIsHoldingCable();
	void OnRep_ServerTriggerPressed();
	void OnSplineUpdated(EFabricInteractionToolStates NewInteractionState);
	void ServerHandleFITFired();
	void ServerSetContinuousInteractableValue(float Value);
	void ServerSetInteractionData(const struct FInteractionData& NewData);
	void ServerSetIsHoldingCable(bool bHoldingCable);
	void ServerSetSplinePoints(const struct FInteractionSplinePoints& SplinePoints);
	void ServerSetTriggerPressed(bool bPressed);
	void UnholsterWeapon();
	void UpdateSplineMesh();

	bool IsRunningOnOwningClient() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricInteractionTool">();
	}
	static class AFabricInteractionTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFabricInteractionTool>();
	}
};

// Class FabricRuntime.FabricMeshModifierBase
// 0x0008 (0x0330 - 0x0328)
class UFabricMeshModifierBase : public UFabricModulatable
{
public:
	EFabricCloneTransformBehavior                 CloneBehavior;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifierBase">();
	}
	static class UFabricMeshModifierBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshModifierBase>();
	}
};

// Class FabricRuntime.FabricMeshModifierTranslate
// 0x0018 (0x0348 - 0x0330)
class UFabricMeshModifierTranslate final : public UFabricMeshModifierBase
{
public:
	struct FVector                                PositionOffset;                                    // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifierTranslate">();
	}
	static class UFabricMeshModifierTranslate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshModifierTranslate>();
	}
};

// Class FabricRuntime.FabricMeshModifierRotate
// 0x0018 (0x0348 - 0x0330)
class UFabricMeshModifierRotate final : public UFabricMeshModifierBase
{
public:
	struct FRotator                               RotationAmount;                                    // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifierRotate">();
	}
	static class UFabricMeshModifierRotate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshModifierRotate>();
	}
};

// Class FabricRuntime.FabricMeshModifierScale
// 0x0018 (0x0348 - 0x0330)
class UFabricMeshModifierScale final : public UFabricMeshModifierBase
{
public:
	struct FVector                                ScaleFactor;                                       // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifierScale">();
	}
	static class UFabricMeshModifierScale* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshModifierScale>();
	}
};

// Class FabricRuntime.FabricMeshModifierClone
// 0x0028 (0x0358 - 0x0330)
class UFabricMeshModifierClone final : public UFabricMeshModifierBase
{
public:
	int32                                         CloneCount;                                        // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PerCloneTranslation;                               // 0x0338(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCentered;                                         // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifierClone">();
	}
	static class UFabricMeshModifierClone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshModifierClone>();
	}
};

// Class FabricRuntime.FabricMeshModifierRandomize
// 0x0068 (0x0398 - 0x0330)
class UFabricMeshModifierRandomize final : public UFabricMeshModifierBase
{
public:
	float                                         LocationRandLimit;                                 // 0x0330(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationRandLimit;                                 // 0x0334(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleRandLimit;                                    // 0x0338(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationRandRange;                                 // 0x0340(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RotationRandRange;                                 // 0x0358(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ScaleRandRangeAdditive;                            // 0x0370(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleRandRangeRangeBase;                           // 0x0388(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUniformScale;                                     // 0x038C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          RandomStream;                                      // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshModifierRandomize">();
	}
	static class UFabricMeshModifierRandomize* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshModifierRandomize>();
	}
};

// Class FabricRuntime.FabricMeshTreeNode
// 0x0080 (0x00A8 - 0x0028)
class UFabricMeshTreeNode final : public UObject
{
public:
	class UFabricMeshModifierBase*                MeshModifier;                                      // 0x0028(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFabricMeshProviderMeshReferenceParams Params_0;                                          // 0x0030(0x0028)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFabricMeshProviderMeshReference       MeshProviderReference;                             // 0x0058(0x0038)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFabricMeshTreeNode*>            Children;                                          // 0x0090(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                        LastCalculatedChecksum;                            // 0x00A0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowChecksumCalculation;                         // 0x00A4(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CopyProperties(const class UFabricMeshTreeNode* Other);
	void Reset();

	TArray<struct FFabricMeshInstanceReference> GenerateMeshInstanceReferences() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshTreeNode">();
	}
	static class UFabricMeshTreeNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshTreeNode>();
	}
};

// Class FabricRuntime.FabricMeshProviderBase
// 0x0058 (0x0080 - 0x0028)
class UFabricMeshProviderBase final : public UObject
{
public:
	struct FFabricMeshProviderMeshReference       ReferenceMesh;                                     // 0x0028(0x0038)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTransform>                     InstanceMeshes;                                    // 0x0060(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                         CurrentCableFloatValue;                            // 0x0070(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentCableFloatDirection;                        // 0x0074(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCurrentCableFloatDirty;                           // 0x0078(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetReferenceMesh(const struct FFabricMeshProviderMeshReference& InMesh);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMeshProviderBase">();
	}
	static class UFabricMeshProviderBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMeshProviderBase>();
	}
};

// Class FabricRuntime.FabricMetaSoundDrumPlayerPatchWrapper
// 0x00E0 (0x0868 - 0x0788)
class UFabricMetaSoundDrumPlayerPatchWrapper final : public UFabricMetaSoundPatchWrapper
{
public:
	uint8                                         Pad_788[0x8];                                      // 0x0788(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PitchSampleInputName;                              // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotKitInputName;                                  // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         PitchSampleParams;                                 // 0x0798(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         SlotLinkParams;                                    // 0x07A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         SlotUnlinkedKitParams;                             // 0x07B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 CurrentKitParam;                                   // 0x07C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSamplesPerKit;                                  // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7DC[0x4];                                      // 0x07DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFabricMetaSoundPatchWrapperBinding> DrumAmplitudes;                               // 0x07E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const TArray<struct FFabricMetaSoundPatchWrapperBinding>& DrumAmplitudes)> OnFabricMetaSoundDrumPlayerPatchDrumAmplitudesUpdate; // 0x07F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(int32 KitIndex, class UFabricMetasoundDrumPlayerSampleBankAsset* BankAsset)> OnFabricMetaSoundDrumPlayerSampleBanksLoaded; // 0x0800(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_810[0x48];                                     // 0x0810(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CurrentKitSamples;                                 // 0x0858(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	void KitIndexChanged(const class FName& Param, int32 Value);
	void LoadDrumPlayerSampleBanks(const TArray<TSoftObjectPtr<class UFabricMetasoundDrumPlayerSampleBankAsset>>& SampleBankArray, const TSet<int32>& KitNumbersToLoad);
	void PitchSampleParamChanged(int32 PitchSampleIndex, int32 Value);
	void SlotLinkedParamChanged(int32 PitchSampleIndex, bool Value);
	void SlotUnlinkedKitParamChanged(int32 PitchSampleIndex, int32 Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundDrumPlayerPatchWrapper">();
	}
	static class UFabricMetaSoundDrumPlayerPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundDrumPlayerPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundWetDryPatchWrapper
// 0x00B0 (0x0838 - 0x0788)
class UFabricMetaSoundWetDryPatchWrapper : public UFabricMetaSoundPatchWrapper
{
public:
	struct FFabricMetaSoundPatchWrapperWetDryOutputBinding WetDryOutputBinding;                      // 0x0788(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const struct FFabricMetaSoundPatchWrapperWetDryOutputBinding& WetDryOutputBindings)> OnWetDryOutputSignalUpdate; // 0x0828(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundWetDryPatchWrapper">();
	}
	static class UFabricMetaSoundWetDryPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundWetDryPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundEchoPatchWrapper
// 0x0018 (0x0850 - 0x0838)
class UFabricMetaSoundEchoPatchWrapper final : public UFabricMetaSoundWetDryPatchWrapper
{
public:
	bool                                          bAllowWetSignalWaveformTexture;                    // 0x0838(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAllowDrySignalWaveformTexture;                    // 0x0839(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_83A[0x6];                                      // 0x083A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFabricWaveformTexture*                 WetSignalWaveformTexture;                          // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFabricWaveformTexture*                 DrySignalWaveformTexture;                          // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundEchoPatchWrapper">();
	}
	static class UFabricMetaSoundEchoPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundEchoPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundInstrumentPlayerPatchWrapper
// 0x00E8 (0x0870 - 0x0788)
class UFabricMetaSoundInstrumentPlayerPatchWrapper final : public UFabricMetaSoundPatchWrapper
{
public:
	TMulticastInlineDelegate<void(const struct FHarmonixFFTAnalyzerResults& FFTAnalyzerResults)> OnFFTResultsUpdated; // 0x0788(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundPatchWrapperBinding    FFTAnalysisOutputBinding;                          // 0x0798(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         FFTCPDStartIndex;                                  // 0x07E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         FFTLength;                                         // 0x07EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7F0[0x78];                                     // 0x07F0(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UFusionPatch*                           CurrentFusionPatch;                                // 0x0868(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void DriveFFTDataOnPrimitive(class UPrimitiveComponent* Primitive);
	void SetFusionPatch(class UFusionPatch* FusionPatch);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundInstrumentPlayerPatchWrapper">();
	}
	static class UFabricMetaSoundInstrumentPlayerPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundInstrumentPlayerPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundModulatorPatchWrapper
// 0x0020 (0x07A8 - 0x0788)
class UFabricMetaSoundModulatorPatchWrapper : public UFabricMetaSoundPatchWrapper
{
public:
	TMulticastInlineDelegate<void(bool bVisible)> OnPatchWrapperVisibilityChanged;                   // 0x0788(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UPlaylistUserOptionBase*                CurrentUserOption;                                 // 0x0798(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFabricMetaSoundUserOption*             MetaSoundUserOption;                               // 0x07A0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundModulatorPatchWrapper">();
	}
	static class UFabricMetaSoundModulatorPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundModulatorPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundLFOPatchWrapper
// 0x0018 (0x07C0 - 0x07A8)
class UFabricMetaSoundLFOPatchWrapper final : public UFabricMetaSoundModulatorPatchWrapper
{
public:
	class UFabricFloatProviderWave*               LFOFloatProvider;                                  // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FreePhaseStartName;                                // 0x07B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   RandomSeedInputName;                               // 0x07B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7B8[0x8];                                      // 0x07B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateRandomSeed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundLFOPatchWrapper">();
	}
	static class UFabricMetaSoundLFOPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundLFOPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundManagerComponent
// 0x0988 (0x0A28 - 0x00A0)
class UFabricMetaSoundManagerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMetaSoundPatch>         HarmonixMusicProviderPatch;                        // 0x00A8(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMetaSoundPatch>         HarmonixMetronomeClockPatch;                       // 0x00C8(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMetaSoundPatch>         HarmonixTempoClockPatch;                           // 0x00E8(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMetaSoundPatch>         HarmonixTransportPatch;                            // 0x0108(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMetaSoundPatch>         UserOptionConverterNode;                           // 0x0128(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundUtilityPatches         MidiStreamUtilityPatches;                          // 0x0148(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundUtilityPatches         AudioUtilityPatches;                               // 0x01D0(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFabricMetaSoundUtilityPatches         FloatUtilityPatches;                               // 0x0258(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                   MusicProviderVolumeName;                           // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MusicProviderRootNoteName;                         // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MusicProviderScaleName;                            // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderPlayTriggerName;                  // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderDelayedRestartTriggerName;        // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderRestartTriggerName;               // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderSeekTriggerName;                  // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderPauseTriggerName;                 // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderContinueTriggerName;              // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderStopTriggerName;                  // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransportProviderSeekTargetName;                   // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ClockProviderTempoName;                            // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ClockProviderSpeedName;                            // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ClockProviderTimeSigNumName;                       // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ClockProviderTimeSignDenomName;                    // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ClockProviderMidiFileInName;                       // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UserOptionConverterCountInName;                    // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrossfadeSeconds;                                  // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RebuildTimeOutSeconds;                             // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlockRateOverride;                                 // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   QualityOverride;                                   // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMidiFile*                              DefaultMidiFile;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_340[0x30];                                     // 0x0340(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float CrossfadeSeconds)> OnMetasoundGeneratorCrossfadeStarted;     // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_380[0x50];                                     // 0x0380(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EFabricMetasoundClock NewClockType)> OnMetasoundClockAuthorityChanged; // 0x03D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E0[0x18];                                     // 0x03E0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(EFabricMetasoundPlayState NewPlayState)> OnPlayStateChanged;       // 0x03F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EFabricMetasoundMusicEventPriority MusicEventPriority)> OnMusicEventPriorityChanged; // 0x0408(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_418[0x10];                                     // 0x0418(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFabricSignificanceBasedUpdateBucketRuntime> SignificanceRuntimeBuckets;           // 0x0428(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFabricSignificanceAsset*               SignificanceBasedUpdate;                           // 0x0438(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitialCooldownTimeInSeconds;                      // 0x0440(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSourceBuilder*                SourceBuilder;                                     // 0x0448(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMusicClockComponent*                   MusicClock;                                        // 0x0450(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAudioComponent*>                PlaybackAudioComponents;                           // 0x0458(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UMetasoundOfflinePlayerComponent*> ServerPlaybackComponents;                        // 0x0468(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TOptional<struct FFabricTransportRequestConfig> QueuedTransportRequestLock;                      // 0x0478(0x0010)(ZeroConstructor, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x40];                                     // 0x0488(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFabricTransportRequestConfig          CurrentTransportRequestLock;                       // 0x04C8(0x000C)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	TOptional<TWeakObjectPtr<class ABuildingActor>> ClockAuthorityDevice;                            // 0x04D4(0x000C)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFabricMetaSoundNodeInfo               HarmonixMusicProviderNode;                         // 0x04E0(0x00F0)(Transient, NativeAccessSpecifierPrivate)
	struct FFabricMetaSoundNodeInfo               HarmonixMetronomeClockNode;                        // 0x05D0(0x00F0)(Transient, NativeAccessSpecifierPrivate)
	struct FFabricMetaSoundNodeInfo               HarmonixMidiTempoClockNode;                        // 0x06C0(0x00F0)(Transient, NativeAccessSpecifierPrivate)
	struct FFabricMetaSoundNodeInfo               HarmonixTransportNode;                             // 0x07B0(0x00F0)(Transient, NativeAccessSpecifierPrivate)
	struct FMetaSoundBuilderNodeOutputHandle      OnPlayNodeOutput;                                  // 0x08A0(0x0020)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMetaSoundBuilderNodeInputHandle       OnFinishedNodeInput;                               // 0x08C0(0x0020)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMetaSoundBuilderNodeInputHandle> AudioOutNodeInputs;                              // 0x08E0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8F0[0x48];                                     // 0x08F0(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UMetaSoundPatch*, struct FFabricMetaSoundNodePool> FreeMetaSoundNodes;                // 0x0938(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FFabricLoadedUtilityPatches> UtilityNodeTypesToPatches;                 // 0x0988(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9D8[0x10];                                     // 0x09D8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGraphDirty;                                       // 0x09E8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsAudioless;                                      // 0x09E9(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasCompletedInitialCooldown;                      // 0x09EA(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFabricMetasoundClock                         CurrentClockType;                                  // 0x09EB(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFabricMetasoundPlayState                     CurrentPlayState;                                  // 0x09EC(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFabricMetasoundPlayState                     PlayStateAfterRebuild;                             // 0x09ED(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EJamFabricSyncType                            JamSyncType;                                       // 0x09EE(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFabricMetasoundMusicEventPriority            MusicEventPriority;                                // 0x09EF(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ClientCurrentAudibleMusicEventGroup;               // 0x09F0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           AboveEmotesTag;                                    // 0x09F4(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           BelowEmotesTag;                                    // 0x09F8(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ReplicatedReceivedSignalBufferDuration;            // 0x09FC(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A00[0x22];                                     // 0x0A00(0x0022)(Fixing Size After Last Property [ Dumper-7 ])
	EFabricMetasoundUtilityLoadedBroadcastBy      LastBroadcastBy;                                   // 0x0A22(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A23[0x5];                                      // 0x0A23(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class FName GetMetasoundInputNodeName(class FName NodeName, class FName InputName);
	static class FName GetMetasoundOutputNodeName(class FName NodeName, class FName OutputName);

	void AddInputNodeForNodeByNameBP(struct FFabricMetaSoundNodeInfo& InOutNode, EFabricUserOptionType UserOptionType, const class FName& InputName);
	void AddOutputNodeForOutputVertex(const struct FMetaSoundBuilderNodeOutputHandle& OutputVertex, const class FName& NodeName, class FName* OutOutputName, EMetaSoundBuilderResult* Result);
	void FreeMetaSoundNode(const struct FFabricMetaSoundNodeInfo& Node);
	struct FFabricMetaSoundNodeInfo GetMetaSoundNodeForWrapper(class UFabricMetaSoundPatchWrapper* PatchWrapper);
	void InvalidateMetasoundGeneratorHandle();
	void NotifyGraphChanged();
	void OnGeneratorJustStarted(int32 ComponentIndex);
	bool PauseMetasound();
	bool PlayMetasound(const struct FFabricTransportRequestConfig& PlayConfig);
	void RegisterAsAudible(class AActor* Device, const class FName& AudibleEventGroup);
	void ReleaseClockAuthority(const struct FFabricTransportRequestConfig& InFabricTransportRequest, EFabricMetasoundClock InClockType);
	void RestartMetasoundPlayback(const struct FFabricTransportRequestConfig& InFabricTransportRequest);
	void SeekToMs(float Ms);
	void SeekToTimestamp(const struct FMusicTimestamp& Timestamp);
	void SetAudioComponents(const TArray<class UAudioComponent*>& AudioComponents);
	void SetClockAuthority(const struct FFabricTransportRequestConfig& InFabricTransportRequest, EFabricMetasoundClock InClockType);
	void SetCurrentJamSyncType(const EJamFabricSyncType& InJamSyncType);
	void SetMidiFile(class UMidiFile* MidiFile);
	void SetMusicClock(class UMusicClockComponent* MusicClockComponent);
	void SetMusicEventPriority(EFabricMetasoundMusicEventPriority InMusicEventPriority);
	void SetMusicKey(EMusicKey Key, EMusicKeyMode Mode);
	void SetSpeed(float Speed);
	void SetTempo(float Tempo);
	void SetTimeSignature(int32 Numerator, int32 Denominator);
	bool StopMetasound(const struct FFabricTransportRequestConfig& PlayConfig);
	void UnregisterAsAudible(class AActor* Device);

	bool AreAllPatchesReady() const;
	class UMetaSoundSourceBuilder* GetBuilder() const;
	class FName GetCurrentClientAudibleMusicEventGroup() const;
	EJamFabricSyncType GetCurrentJamSyncType() const;
	struct FGameplayTag GetCurrentMusicEventTag() const;
	class UAudioComponent* GetCurrentPlaybackAudioComponent() const;
	EFabricMetasoundPlayState GetCurrentPlaystate() const;
	class UMusicClockComponent* GetMusicClock() const;
	EFabricMetasoundMusicEventPriority GetMusicEventPriority() const;
	struct FGameplayTag GetMusicEventTag(EFabricMetasoundMusicEventPriority InMusicEventPriority) const;
	bool ShouldSeekToStartOnGameReset() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundManagerComponent">();
	}
	static class UFabricMetaSoundManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundManagerComponent>();
	}
};

// Class FabricRuntime.FabricNoteTriggerPatchWrapper
// 0x0028 (0x07F8 - 0x07D0)
class UFabricNoteTriggerPatchWrapper final : public UFabricNoteReceivedPatchWrapper
{
public:
	class FString                                 OctaveParam;                                       // 0x07D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FMidiEventInfo& MidiEvent, bool bMatchesOctave)> OnAnyMidiEventPassed; // 0x07E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_7F0[0x8];                                      // 0x07F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnOctaveChanged(const class FName& ParamName, int32 InOctave);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricNoteTriggerPatchWrapper">();
	}
	static class UFabricNoteTriggerPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricNoteTriggerPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundTreeNode
// 0x0020 (0x0048 - 0x0028)
class UFabricMetaSoundTreeNode final : public UObject
{
public:
	EFabricMetaSoundPinDirection                  PinDirection;                                      // 0x0028(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFabricMetaSoundPatchWrapper*           AssociatedPatchWrapper;                            // 0x0030(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFabricMetaSoundTreeNode*>       Children;                                          // 0x0038(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	void ConnectToChildNodes();
	TArray<class UFabricMetaSoundTreeNode*> GetValidChildren();
	void Reset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundTreeNode">();
	}
	static class UFabricMetaSoundTreeNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundTreeNode>();
	}
};

// Class FabricRuntime.FabricMetaSoundSequencerPatchWrapper
// 0x0008 (0x0790 - 0x0788)
class UFabricMetaSoundSequencerPatchWrapper final : public UFabricMetaSoundPatchWrapper
{
public:
	class UMidiStepSequence*                      CurrentStepSequence;                               // 0x0788(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetMidiStepSequence(class UMidiStepSequence* StepSequence);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundSequencerPatchWrapper">();
	}
	static class UFabricMetaSoundSequencerPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundSequencerPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundSpeakerPatchWrapper
// 0x0028 (0x07B0 - 0x0788)
class UFabricMetaSoundSpeakerPatchWrapper final : public UFabricMetaSoundPatchWrapper
{
public:
	TArray<struct FFabricMetaSoundSpeakerPatchWrapperEqBandsBinding> EqBands;                        // 0x0788(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMulticastInlineDelegate<void(const TArray<struct FFabricMetaSoundSpeakerPatchWrapperEqBandsBinding>& EqBands)> OnFabricMetaSoundSpeakerPatchEqBandUpdate; // 0x0798(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_7A8[0x8];                                      // 0x07A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetAudioBusFromSourceBus(class USoundSourceBus* Bus);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundSpeakerPatchWrapper">();
	}
	static class UFabricMetaSoundSpeakerPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundSpeakerPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundSplitterPatchWrapper
// 0x0058 (0x07E0 - 0x0788)
class UFabricMetaSoundSplitterPatchWrapper final : public UFabricMetaSoundPatchWrapper
{
public:
	uint8                                         Pad_788[0x8];                                      // 0x0788(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FFabricMetaSoundNodeInfo> SplitterNodes;                                // 0x0790(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundSplitterPatchWrapper">();
	}
	static class UFabricMetaSoundSplitterPatchWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundSplitterPatchWrapper>();
	}
};

// Class FabricRuntime.FabricMetaSoundTickSubsystem
// 0x01E0 (0x02B0 - 0x00D0)
class UFabricMetaSoundTickSubsystem final : public UFortManagedTickSubsystem
{
public:
	uint8                                         Pad_D0[0x1E0];                                     // 0x00D0(0x01E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundTickSubsystem">();
	}
	static class UFabricMetaSoundTickSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundTickSubsystem>();
	}
};

// Class FabricRuntime.FabricMidiFollowComponent
// 0x0040 (0x00E0 - 0x00A0)
class UFabricMidiFollowComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              OnMidiFinished;                                    // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMidiFile*                              CurrentMidiFile;                                   // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x28];                                      // 0x00B8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFabricPlayStateChanged(EFabricMetasoundPlayState CurrentState);
	void SetFabricMetaSoundManager(class UFabricMetaSoundManagerComponent* InFabricMetaSoundManager);
	void SetMidiFile(class UMidiFile* InMidiFile, int32 InMidiTrackIndex, float InMsOffset, float InBeatOffset, bool bInUseMidiTempo);
	void SetMidiOutputEnabled(bool bInMidiOutputEnabled);
	void SetMusicClock(class UMusicClockComponent* InMusicClock);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMidiFollowComponent">();
	}
	static class UFabricMidiFollowComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMidiFollowComponent>();
	}
};

// Class FabricRuntime.FabricModulator
// 0x0000 (0x0000 - 0x0000)
class IFabricModulator final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricModulator">();
	}
	static class IFabricModulator* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricModulator>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricModulatorSource
// 0x0000 (0x0000 - 0x0000)
class IFabricModulatorSource final
{
public:
	void GetModulators(class UFabricModulatable* Modulatable);

	class UPlaylistUserOptionBase* GetUserOption(const class FString& Property) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricModulatorSource">();
	}
	static class IFabricModulatorSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricModulatorSource>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricModulatorDevice
// 0x0000 (0x0000 - 0x0000)
class IFabricModulatorDevice final
{
public:
	void SetUserOption(EFabricUserOptionType UserOptionType, class UPlaylistUserOptionBase* UserOption, class UObject* ModulatorObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricModulatorDevice">();
	}
	static class IFabricModulatorDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<IFabricModulatorDevice>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class FabricRuntime.FabricProgressorManager
// 0x0040 (0x00E0 - 0x00A0)
class UFabricProgressorManager final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnGlobalProgressionChanged;                        // 0x00A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bHasActiveGlobalProgression;                       // 0x00B8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GlobalPresetNumber;                                // 0x00BC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFabricProgressionPreset               GlobalProgression;                                 // 0x00C0(0x0020)(Transient, Protected, NativeAccessSpecifierProtected)

public:
	bool IsProgressionGlobal(const struct FFabricProgressionPreset& InProgression);
	void SetGlobalProgression(const struct FFabricProgressionPreset& InProgression, int32 InPresetNumber);

	int32 GetGlobalPresetNumber() const;
	const struct FFabricProgressionPreset GetGlobalProgression() const;
	bool HasActiveGlobalProgression() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricProgressorManager">();
	}
	static class UFabricProgressorManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricProgressorManager>();
	}
};

// Class FabricRuntime.FabricSequencerSustainComponent
// 0x0080 (0x09F0 - 0x0970)
class UFabricSequencerSustainComponent final : public UInstancedStaticMeshComponent
{
public:
	TMap<struct FIntVector2, int32>               StepToInstanceMapping;                             // 0x0968(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	int32                                         PICDStartBeat;                                     // 0x09B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDEndBeat;                                       // 0x09BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PICDLoopBeat;                                      // 0x09C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CPDDeviceEnabled;                                  // 0x09C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GridSquareExtents;                                 // 0x09C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SustainInstanceYLocation;                          // 0x09CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SustainInstanceYScale;                             // 0x09D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SustainInstanceZScale;                             // 0x09D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFabricStepSequencerComponent> StepSequencer;                               // 0x09D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFabricStepSequencerGridComponent> StepSequencerGrid;                       // 0x09E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9E8[0x8];                                      // 0x09E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddSustainInstance(int32 StepIndex, int32 TrackIndex);
	float CalculateSustainLength(float NumStepsCoveredBySustain);
	void ConstructSustains();
	void FindAndDeleteInstance(int32 StepIndex, int32 TrackIndex);
	void FindHeadNoteAndUpdateInstance(int32 StepIndex, int32 TrackIndex);
	void InitializeSustainComponent(class UFabricStepSequencerComponent* InStepSequencer, class UFabricStepSequencerGridComponent* InStepSequencerGrid);
	void OnFullTableChanged();
	void OnNumStepsChanged(int32 NumSteps);
	void OnNumTracksChanged(int32 NumTracks);
	void OnPageChanged(int32 CurrentPage);
	void OnStepChanged(const struct FFabricSequencerStepChangedInfo& StepInfo);
	void SetEndBeat(int32 InstanceIndex, float EndBeatValue);
	void SetLoopBeat(int32 InstanceIndex, float LoopBeatValue);
	void SetStartBeat(int32 InstanceIndex, float StartBeatValue);
	void UpdateDeviceEnabledOnSustain(bool bEnabled);
	void UpdatePipsOnGridChanged();
	void UpdateSustainInstance(int32 StepIndex, int32 TrackIndex, int32 PageIndex, bool bEnabled, bool bContinuous, bool bStepChanged);
	void UpdateSustainMaterial(int32 InstanceIndex, int32 HeadNoteStepIndex, int32 TrackIndex);
	void UpdateVisibilityOfInstances();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricSequencerSustainComponent">();
	}
	static class UFabricSequencerSustainComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricSequencerSustainComponent>();
	}
};

// Class FabricRuntime.FabricStepSequencerModulatable
// 0x0088 (0x03B0 - 0x0328)
class UFabricStepSequencerModulatable final : public UFabricModulatable
{
public:
	uint8                                         Pad_328[0x80];                                     // 0x0328(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsChromatic;                                      // 0x03A8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bModulationValueChanged;                           // 0x03A9(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricStepSequencerModulatable">();
	}
	static class UFabricStepSequencerModulatable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricStepSequencerModulatable>();
	}
};

// Class FabricRuntime.FabricStepSequencerGridSquareComponent
// 0x0060 (0x0630 - 0x05D0)
class UFabricStepSequencerGridSquareComponent final : public UStaticMeshComponent
{
public:
	uint8                                         Pad_5D0[0x10];                                     // 0x05D0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ContinuationControlInteractionDelay;               // 0x05E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFabricStepSequencerComponent*          AssignedStepSequencer;                             // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ActiveTrack;                                       // 0x05F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         AssignedStep;                                      // 0x05F4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         PreviousFocusStepIndex;                            // 0x05F8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5FC[0x34];                                     // 0x05FC(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnContinuationControl_EndInteraction(class APlayerController* Controller);
	void OnContinuationControl_StartInteraction(class APlayerController* Controller);
	void SetActiveTrack(int32 Track);

	bool CanDoInteractionLogicOnEndInteraction() const;
	bool CanDoInteractionLogicOnStartInteraction() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricStepSequencerGridSquareComponent">();
	}
	static class UFabricStepSequencerGridSquareComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricStepSequencerGridSquareComponent>();
	}
};

// Class FabricRuntime.FabricTextureModifierBase
// 0x0018 (0x0340 - 0x0328)
class UFabricTextureModifierBase final : public UFabricModulatable
{
public:
	TMulticastInlineDelegate<void(const TArray<struct FFabricTextureProviderTexture>& Textures)> OnSourceTexturesChanged; // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTexture*                               ModifiedTexture;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTextureModifierBase">();
	}
	static class UFabricTextureModifierBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricTextureModifierBase>();
	}
};

// Class FabricRuntime.FabricTextureTreeNode
// 0x0028 (0x0050 - 0x0028)
class UFabricTextureTreeNode final : public UObject
{
public:
	TArray<class UFabricTextureTreeNode*>         Children;                                          // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFabricTextureProviderTexture          Texture;                                           // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void CopyProperties(const class UFabricTextureTreeNode* Other);
	void Reset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTextureTreeNode">();
	}
	static class UFabricTextureTreeNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricTextureTreeNode>();
	}
};

// Class FabricRuntime.FabricTextureProviderBase
// 0x0038 (0x0060 - 0x0028)
class UFabricTextureProviderBase final : public UObject
{
public:
	TMulticastInlineDelegate<void(const struct FFabricTextureProviderTexture& Texture)> OnTextureChanged; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFabricTextureProviderTexture          SourceTexture;                                     // 0x0038(0x0018)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         CurrentCableFloatValue;                            // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CurrentCableFloatDirection;                        // 0x0054(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimeElapsedSinceLastCableFloatDirty;               // 0x0058(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCurrentCableFloatDirty;                           // 0x005C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetSourceTexture(const struct FFabricTextureProviderTexture& InTexture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTextureProviderBase">();
	}
	static class UFabricTextureProviderBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricTextureProviderBase>();
	}
};

// Class FabricRuntime.FabricTimelinePreviewComponent
// 0x0018 (0x00B8 - 0x00A0)
class UFabricTimelinePreviewComponent final : public UActorComponent
{
public:
	class UTimelineComponent*                     CurrentTimeline;                                   // 0x00A0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PreviewTimeline(class UTimelineComponent* Timeline, float SecondsToPlay, bool bReverseAnimation);

	bool GetShouldPreview() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTimelinePreviewComponent">();
	}
	static class UFabricTimelinePreviewComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricTimelinePreviewComponent>();
	}
};

// Class FabricRuntime.FabricTimelineSyncComponent
// 0x00D0 (0x0170 - 0x00A0)
class UFabricTimelineSyncComponent final : public UActorComponent
{
public:
	float                                         ThresholdForSeekMS;                                // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ThresholdForStartSpeedAdjustMS;                    // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ThresholdForEndOfSpeedAdjustMS;                    // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpeedAdjustFactor;                                 // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPrintToScreen;                                    // 0x00B0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLogCorrectedServerTimeDelta;                      // 0x00B1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedSyncTimeoutLength;                            // 0x00B4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TempoDeltaThrottleSeconds;                         // 0x00B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MassiveSyncErrorTimeThresholdMin;                  // 0x00BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MassiveSyncErrorTimeThresholdMax;                  // 0x00C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MassiveSyncErrorTimeThresholdMultiplier;           // 0x00C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFabricMetaSoundManagerComponent*       MetaSoundManager;                                  // 0x00C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMusicClockComponent*                   MusicClock;                                        // 0x00D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMidiSongPos                           ServerCurrentSongRenderPos;                        // 0x00E0(0x0040)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFabricTimelineSyncServerSongPosition  ServerTimelineSyncServerSongPosition;              // 0x0120(0x001C)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C[0x34];                                     // 0x013C(0x0034)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ServerCurrentSongPos();
	void OnTimelinePlayingChanged(EMusicClockState State);
	void SetFabricMetaSoundManager(class UFabricMetaSoundManagerComponent* InMetaSoundManager);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricTimelineSyncComponent">();
	}
	static class UFabricTimelineSyncComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricTimelineSyncComponent>();
	}
};

// Class FabricRuntime.FabricWaveformTexture
// 0x0050 (0x0078 - 0x0028)
class UFabricWaveformTexture final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WaveformNumSamplesHeld;                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WaveformSmoothingDistance;                         // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaveformSmoothingFactor;                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaveformDecayPerSecond;                            // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             WaveformTexture;                                   // 0x0040(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableTextureRequests;                            // 0x0048(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_49[0x2F];                                      // 0x0049(0x002F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddMultipleValuesToWaveformTexture(TArray<float>* Values);
	void AddNewValueToWaveformTexture(float Value);
	void Initialize();

	class UTexture2D* GetWaveformTexture() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricWaveformTexture">();
	}
	static class UFabricWaveformTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricWaveformTexture>();
	}
};

// Class FabricRuntime.FabricInteractableTargetPayload
// 0x0010 (0x0038 - 0x0028)
class UFabricInteractableTargetPayload final : public UObject
{
public:
	TWeakObjectPtr<class AActor>                  TargetedActor;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPrimitiveComponent>     TargetedComponent;                                 // 0x0030(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricInteractableTargetPayload">();
	}
	static class UFabricInteractableTargetPayload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricInteractableTargetPayload>();
	}
};

// Class FabricRuntime.FortGameplayAbility_FabricInteractableTargeting
// 0x0050 (0x0B90 - 0x0B40)
class UFortGameplayAbility_FabricInteractableTargeting final : public UFortGameplayAbility
{
public:
	class UTargetingPreset*                       TargetingPreset;                                   // 0x0B40(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           TargetsChangedTag;                                 // 0x0B48(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         TargetingInterval;                                 // 0x0B50(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UFabricInteractableTargetPayload*       PayloadCache;                                      // 0x0B78(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTargetingRequestHandle                AsyncTargetingHandle;                              // 0x0B80(0x0004)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TargetingTimerHandle;                              // 0x0B88(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void StartTargeting();
	void StopTargeting();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortGameplayAbility_FabricInteractableTargeting">();
	}
	static class UFortGameplayAbility_FabricInteractableTargeting* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortGameplayAbility_FabricInteractableTargeting>();
	}
};

// Class FabricRuntime.FabricGameFeatureAction_OverrideFabricInteractionTool
// 0x0020 (0x0048 - 0x0028)
class UFabricGameFeatureAction_OverrideFabricInteractionTool final : public UGameFeatureAction
{
public:
	TSoftObjectPtr<class UFortGadgetItemDefinition> OverriddenPatchworkInteractionTool;              // 0x0028(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricGameFeatureAction_OverrideFabricInteractionTool">();
	}
	static class UFabricGameFeatureAction_OverrideFabricInteractionTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricGameFeatureAction_OverrideFabricInteractionTool>();
	}
};

}

