#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MLDeformerFramework

#include "Basic.hpp"

#include "MLDeformerFramework_classes.hpp"
#include "MLDeformerFramework_parameters.hpp"


namespace SDK
{

// Function MLDeformerFramework.MLDeformerComponent.SetDeformerAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMLDeformerAsset*                 InDeformerAsset                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLDeformerComponent::SetDeformerAsset(class UMLDeformerAsset* InDeformerAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "SetDeformerAsset");

	Params::MLDeformerComponent_SetDeformerAsset Parms{};

	Parms.InDeformerAsset = InDeformerAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerComponent.SetQualityLevel
// (Final, Native, Public)
// Parameters:
// int32                                   InQualityLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLDeformerComponent::SetQualityLevel(int32 InQualityLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "SetQualityLevel");

	Params::MLDeformerComponent_SetQualityLevel Parms{};

	Parms.InQualityLevel = InQualityLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerComponent.SetWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NormalizedWeightValue                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLDeformerComponent::SetWeight(float NormalizedWeightValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "SetWeight");

	Params::MLDeformerComponent_SetWeight Parms{};

	Parms.NormalizedWeightValue = NormalizedWeightValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerComponent.UpdateSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable)

void UMLDeformerComponent::UpdateSkeletalMeshComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "UpdateSkeletalMeshComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerComponent.FindSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UMLDeformerAsset*           Asset                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UMLDeformerComponent::FindSkeletalMeshComponent(const class UMLDeformerAsset* Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "FindSkeletalMeshComponent");

	Params::MLDeformerComponent_FindSkeletalMeshComponent Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFramework.MLDeformerComponent.GetDeformerAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMLDeformerAsset*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMLDeformerAsset* UMLDeformerComponent::GetDeformerAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "GetDeformerAsset");

	Params::MLDeformerComponent_GetDeformerAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFramework.MLDeformerComponent.GetModelInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMLDeformerModelInstance*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMLDeformerModelInstance* UMLDeformerComponent::GetModelInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "GetModelInstance");

	Params::MLDeformerComponent_GetModelInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFramework.MLDeformerComponent.GetQualityLevel
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMLDeformerComponent::GetQualityLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "GetQualityLevel");

	Params::MLDeformerComponent_GetQualityLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFramework.MLDeformerComponent.GetSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UMLDeformerComponent::GetSkeletalMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "GetSkeletalMeshComponent");

	Params::MLDeformerComponent_GetSkeletalMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFramework.MLDeformerComponent.GetWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMLDeformerComponent::GetWeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerComponent", "GetWeight");

	Params::MLDeformerComponent_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MLDeformerFramework.MLDeformerMorphModel.SetMorphTargetDeltaFloats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<float>&                    Deltas                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMLDeformerMorphModel::SetMorphTargetDeltaFloats(const TArray<float>& Deltas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerMorphModel", "SetMorphTargetDeltaFloats");

	Params::MLDeformerMorphModel_SetMorphTargetDeltaFloats Parms{};

	Parms.Deltas = std::move(Deltas);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerMorphModel.SetMorphTargetDeltas
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FVector3f>&         Deltas                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMLDeformerMorphModel::SetMorphTargetDeltas(const TArray<struct FVector3f>& Deltas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerMorphModel", "SetMorphTargetDeltas");

	Params::MLDeformerMorphModel_SetMorphTargetDeltas Parms{};

	Parms.Deltas = std::move(Deltas);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerMorphModel.SetMorphTargetsErrorOrder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    MorphTargetOrder                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<float>&                    ErrorValues                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMLDeformerMorphModel::SetMorphTargetsErrorOrder(const TArray<int32>& MorphTargetOrder, const TArray<float>& ErrorValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerMorphModel", "SetMorphTargetsErrorOrder");

	Params::MLDeformerMorphModel_SetMorphTargetsErrorOrder Parms{};

	Parms.MorphTargetOrder = std::move(MorphTargetOrder);
	Parms.ErrorValues = std::move(ErrorValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerMorphModel.SetMorphTargetsMaxWeights
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<float>&                    MaxWeights                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMLDeformerMorphModel::SetMorphTargetsMaxWeights(const TArray<float>& MaxWeights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerMorphModel", "SetMorphTargetsMaxWeights");

	Params::MLDeformerMorphModel_SetMorphTargetsMaxWeights Parms{};

	Parms.MaxWeights = std::move(MaxWeights);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerMorphModel.SetMorphTargetsMinMaxWeights
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<float>&                    MinValues                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<float>&                    MaxValues                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMLDeformerMorphModel::SetMorphTargetsMinMaxWeights(const TArray<float>& MinValues, const TArray<float>& MaxValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerMorphModel", "SetMorphTargetsMinMaxWeights");

	Params::MLDeformerMorphModel_SetMorphTargetsMinMaxWeights Parms{};

	Parms.MinValues = std::move(MinValues);
	Parms.MaxValues = std::move(MaxValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLDeformerFramework.MLDeformerMorphModel.CanDynamicallyUpdateMorphTargets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMLDeformerMorphModel::CanDynamicallyUpdateMorphTargets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLDeformerMorphModel", "CanDynamicallyUpdateMorphTargets");

	Params::MLDeformerMorphModel_CanDynamicallyUpdateMorphTargets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

