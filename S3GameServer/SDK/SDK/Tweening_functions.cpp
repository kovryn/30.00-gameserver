#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tweening

#include "Basic.hpp"

#include "Tweening_classes.hpp"
#include "Tweening_parameters.hpp"


namespace SDK
{

// Function Tweening.ActorTweening.BP_TransformAlongSplineTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*&                          Target                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 Spline                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenSplineAlignmentOption             Alignment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnorePitch                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreYaw                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreRoll                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalFloat&       FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UActorTweening::BP_TransformAlongSplineTo(int32* OutTweenId, class UObject* ContextObject, class AActor*& Target, class USplineComponent* Spline, ETweenSplineAlignmentOption Alignment, bool bIgnorePitch, bool bIgnoreYaw, bool bIgnoreRoll, const struct FTweenOptionalFloat& FromOptions, float ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ActorTweening", "BP_TransformAlongSplineTo");

	Params::ActorTweening_BP_TransformAlongSplineTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.Spline = Spline;
	Parms.Alignment = Alignment;
	Parms.bIgnorePitch = bIgnorePitch;
	Parms.bIgnoreYaw = bIgnoreYaw;
	Parms.bIgnoreRoll = bIgnoreRoll;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = ToValue;
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = Parms.Target;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.MaterialTweening.BP_ColorParamTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*&        Target                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalLinearColor& FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLinearColor&              ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialTweening::BP_ColorParamTo(int32* OutTweenId, class UObject* ContextObject, class UMaterialInstanceDynamic*& Target, class FName ParameterName, const struct FTweenOptionalLinearColor& FromOptions, const struct FLinearColor& ToValue, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MaterialTweening", "BP_ColorParamTo");

	Params::MaterialTweening_BP_ColorParamTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.ParameterName = ParameterName;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = std::move(ToValue);
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = Parms.Target;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.MaterialTweening.BP_ScalarParamTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*&        Target                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalFloat&       FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMaterialTweening::BP_ScalarParamTo(int32* OutTweenId, class UObject* ContextObject, class UMaterialInstanceDynamic*& Target, class FName ParameterName, const struct FTweenOptionalFloat& FromOptions, float ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MaterialTweening", "BP_ScalarParamTo");

	Params::MaterialTweening_BP_ScalarParamTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.ParameterName = ParameterName;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = ToValue;
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Target = Parms.Target;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.MeshMaterialTweening.BP_ScalarParamTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMeshComponent*                   Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalFloat&       FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMeshMaterialTweening::BP_ScalarParamTo(int32* OutTweenId, class UObject* ContextObject, class UMeshComponent* Target, class FName ParameterName, const struct FTweenOptionalFloat& FromOptions, float ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MeshMaterialTweening", "BP_ScalarParamTo");

	Params::MeshMaterialTweening_BP_ScalarParamTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.ParameterName = ParameterName;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = ToValue;
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.TweenManager.HasTween
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::HasTween(int32 InTweenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "HasTween");

	Params::TweenManager_HasTween Parms{};

	Parms.InTweenId = InTweenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenManager.KillTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::KillTween(int32 InTweenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "KillTween");

	Params::TweenManager_KillTween Parms{};

	Parms.InTweenId = InTweenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenManager.KillTweens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    InTweenIds                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTweenManager::KillTweens(const TArray<int32>& InTweenIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "KillTweens");

	Params::TweenManager_KillTweens Parms{};

	Parms.InTweenIds = std::move(InTweenIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tweening.TweenManager.PlayTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenPlayDirection                     InPlayDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::PlayTween(int32 InTweenId, ETweenPlayDirection InPlayDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "PlayTween");

	Params::TweenManager_PlayTween Parms{};

	Parms.InTweenId = InTweenId;
	Parms.InPlayDirection = InPlayDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenManager.PlayTweens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    InTweenIds                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ETweenPlayDirection                     InPlayDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenManager::PlayTweens(const TArray<int32>& InTweenIds, ETweenPlayDirection InPlayDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "PlayTweens");

	Params::TweenManager_PlayTweens Parms{};

	Parms.InTweenIds = std::move(InTweenIds);
	Parms.InPlayDirection = InPlayDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tweening.TweenManager.PlayTweenWithLooping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenLoopType                          InLoopType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLoopCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenPlayDirection                     InPlayDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::PlayTweenWithLooping(int32 InTweenId, ETweenLoopType InLoopType, int32 InLoopCount, ETweenPlayDirection InPlayDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "PlayTweenWithLooping");

	Params::TweenManager_PlayTweenWithLooping Parms{};

	Parms.InTweenId = InTweenId;
	Parms.InLoopType = InLoopType;
	Parms.InLoopCount = InLoopCount;
	Parms.InPlayDirection = InPlayDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenManager.ResetTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETweenResetDestination                  InDestination                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::ResetTween(int32 InTweenId, ETweenResetDestination InDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "ResetTween");

	Params::TweenManager_ResetTween Parms{};

	Parms.InTweenId = InTweenId;
	Parms.InDestination = InDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenManager.ResetTweens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    InTweenIds                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// ETweenResetDestination                  InDestination                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenManager::ResetTweens(const TArray<int32>& InTweenIds, ETweenResetDestination InDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "ResetTweens");

	Params::TweenManager_ResetTweens Parms{};

	Parms.InTweenIds = std::move(InTweenIds);
	Parms.InDestination = InDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tweening.TweenManager.StopTween
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::StopTween(int32 InTweenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "StopTween");

	Params::TweenManager_StopTween Parms{};

	Parms.InTweenId = InTweenId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenManager.StopTweens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    InTweenIds                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTweenManager::StopTweens(const TArray<int32>& InTweenIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "StopTweens");

	Params::TweenManager_StopTweens Parms{};

	Parms.InTweenIds = std::move(InTweenIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tweening.TweenManager.SetTweenTiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InTweenId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtBeginning                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayAtEnd                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTweenManager::SetTweenTiming(int32 InTweenId, float InDuration, float InDelayAtBeginning, float InDelayAtEnd) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenManager", "SetTweenTiming");

	Params::TweenManager_SetTweenTiming Parms{};

	Parms.InTweenId = InTweenId;
	Parms.InDuration = InDuration;
	Parms.InDelayAtBeginning = InDelayAtBeginning;
	Parms.InDelayAtEnd = InDelayAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Tweening.TweenSequence.BP_AppendSequence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenSequence*&                  SequenceToAppend                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtBeginning                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtEnd                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenSequence**                  OutSequence                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenSequence::BP_AppendSequence(class UTweenSequence*& SequenceToAppend, float AdditionalDelayAtBeginning, float AdditionalDelayAtEnd, class UTweenSequence** OutSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenSequence", "BP_AppendSequence");

	Params::TweenSequence_BP_AppendSequence Parms{};

	Parms.SequenceToAppend = SequenceToAppend;
	Parms.AdditionalDelayAtBeginning = AdditionalDelayAtBeginning;
	Parms.AdditionalDelayAtEnd = AdditionalDelayAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SequenceToAppend = Parms.SequenceToAppend;

	if (OutSequence != nullptr)
		*OutSequence = Parms.OutSequence;
}


// Function Tweening.TweenSequence.BP_AppendTween
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32&                                  TweenId                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtBeginning                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtEnd                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenSequence**                  OutSequence                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenSequence::BP_AppendTween(int32& TweenId, float AdditionalDelayAtBeginning, float AdditionalDelayAtEnd, class UTweenSequence** OutSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenSequence", "BP_AppendTween");

	Params::TweenSequence_BP_AppendTween Parms{};

	Parms.TweenId = TweenId;
	Parms.AdditionalDelayAtBeginning = AdditionalDelayAtBeginning;
	Parms.AdditionalDelayAtEnd = AdditionalDelayAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenId = Parms.TweenId;

	if (OutSequence != nullptr)
		*OutSequence = Parms.OutSequence;
}


// Function Tweening.TweenSequence.BP_JoinSequence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTweenSequence*&                  SequenceToAppend                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtBeginning                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtEnd                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenSequence**                  OutSequence                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenSequence::BP_JoinSequence(class UTweenSequence*& SequenceToAppend, float AdditionalDelayAtBeginning, float AdditionalDelayAtEnd, class UTweenSequence** OutSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenSequence", "BP_JoinSequence");

	Params::TweenSequence_BP_JoinSequence Parms{};

	Parms.SequenceToAppend = SequenceToAppend;
	Parms.AdditionalDelayAtBeginning = AdditionalDelayAtBeginning;
	Parms.AdditionalDelayAtEnd = AdditionalDelayAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	SequenceToAppend = Parms.SequenceToAppend;

	if (OutSequence != nullptr)
		*OutSequence = Parms.OutSequence;
}


// Function Tweening.TweenSequence.BP_JoinTween
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32&                                  TweenId                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtBeginning                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdditionalDelayAtEnd                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTweenSequence**                  OutSequence                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenSequence::BP_JoinTween(int32& TweenId, float AdditionalDelayAtBeginning, float AdditionalDelayAtEnd, class UTweenSequence** OutSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenSequence", "BP_JoinTween");

	Params::TweenSequence_BP_JoinTween Parms{};

	Parms.TweenId = TweenId;
	Parms.AdditionalDelayAtBeginning = AdditionalDelayAtBeginning;
	Parms.AdditionalDelayAtEnd = AdditionalDelayAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	TweenId = Parms.TweenId;

	if (OutSequence != nullptr)
		*OutSequence = Parms.OutSequence;
}


// Function Tweening.TweenSequence.Play
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETweenPlayDirection                     InPlayDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTweenSequence::Play(ETweenPlayDirection InPlayDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenSequence", "Play");

	Params::TweenSequence_Play Parms{};

	Parms.InPlayDirection = InPlayDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Tweening.TweenSequence.Stop
// (Final, Native, Public, BlueprintCallable)

void UTweenSequence::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TweenSequence", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Tweening.WidgetTweening.BP_OpacityTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalFloat&       FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetTweening::BP_OpacityTo(int32* OutTweenId, class UObject* ContextObject, class UWidget* Target, const struct FTweenOptionalFloat& FromOptions, float ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetTweening", "BP_OpacityTo");

	Params::WidgetTweening_BP_OpacityTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = ToValue;
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.WidgetTweening.BP_TransformAngleTo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalFloat&       FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetTweening::BP_TransformAngleTo(int32* OutTweenId, class UObject* ContextObject, class UWidget* Target, const struct FTweenOptionalFloat& FromOptions, float ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetTweening", "BP_TransformAngleTo");

	Params::WidgetTweening_BP_TransformAngleTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = ToValue;
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.WidgetTweening.BP_TransformPivotTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalVector2D&    FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetTweening::BP_TransformPivotTo(int32* OutTweenId, class UObject* ContextObject, class UWidget* Target, const struct FTweenOptionalVector2D& FromOptions, const struct FVector2D& ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetTweening", "BP_TransformPivotTo");

	Params::WidgetTweening_BP_TransformPivotTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = std::move(ToValue);
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.WidgetTweening.BP_TransformScaleTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalVector2D&    FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetTweening::BP_TransformScaleTo(int32* OutTweenId, class UObject* ContextObject, class UWidget* Target, const struct FTweenOptionalVector2D& FromOptions, const struct FVector2D& ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetTweening", "BP_TransformScaleTo");

	Params::WidgetTweening_BP_TransformScaleTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = std::move(ToValue);
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.WidgetTweening.BP_TransformShearTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalVector2D&    FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ToValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetTweening::BP_TransformShearTo(int32* OutTweenId, class UObject* ContextObject, class UWidget* Target, const struct FTweenOptionalVector2D& FromOptions, const struct FVector2D& ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetTweening", "BP_TransformShearTo");

	Params::WidgetTweening_BP_TransformShearTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = std::move(ToValue);
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}


// Function Tweening.WidgetTweening.BP_TranslationTo
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32*                                  OutTweenId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenOptionalVector2D&    FromOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ToValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRelative                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenDelayOptions&        DelayOptions                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ETweenBuiltInEasing                     EasingFunction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      EasingCurve                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTweenLoopOptions&         LoopOptions                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAutoPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoKill                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWidgetTweening::BP_TranslationTo(int32* OutTweenId, class UObject* ContextObject, class UWidget* Target, const struct FTweenOptionalVector2D& FromOptions, const struct FVector2D& ToValue, bool bIsRelative, float duration, const struct FTweenDelayOptions& DelayOptions, ETweenBuiltInEasing EasingFunction, class UCurveFloat* EasingCurve, const struct FTweenLoopOptions& LoopOptions, bool bAutoPlay, bool bAutoKill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("WidgetTweening", "BP_TranslationTo");

	Params::WidgetTweening_BP_TranslationTo Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Target = Target;
	Parms.FromOptions = std::move(FromOptions);
	Parms.ToValue = std::move(ToValue);
	Parms.bIsRelative = bIsRelative;
	Parms.duration = duration;
	Parms.DelayOptions = std::move(DelayOptions);
	Parms.EasingFunction = EasingFunction;
	Parms.EasingCurve = EasingCurve;
	Parms.LoopOptions = std::move(LoopOptions);
	Parms.bAutoPlay = bAutoPlay;
	Parms.bAutoKill = bAutoKill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTweenId != nullptr)
		*OutTweenId = Parms.OutTweenId;
}

}

