#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarCore

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "ModularGameplay_classes.hpp"
#include "DelMarCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CosmeticsFrameworkLoadouts_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "FortniteAI_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DelMarTrackRuntime_classes.hpp"
#include "EnhancedInput_classes.hpp"
#include "LinkId_structs.hpp"
#include "VehicleCosmeticsRuntime_classes.hpp"
#include "CommonInput_structs.hpp"
#include "PlayspaceSystem_classes.hpp"
#include "GameFeatures_classes.hpp"
#include "AudioGameplay_classes.hpp"
#include "VehicleCosmeticsAudioRuntime_classes.hpp"


namespace SDK
{

// Class DelMarCore.DelMarActorMover
// 0x0040 (0x0C20 - 0x0BE0)
class ADelMarActorMover final : public AFortCreativeDeviceProp
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                       MovementSpline;                                    // 0x0BE8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarSplineMovementType                     MovementType;                                      // 0x0BF0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ManagedActor;                                      // 0x0BF8(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarSplineActorMovementComponent*    SplineMovementComponent;                           // 0x0C00(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C08[0x10];                                     // 0x0C08(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ServerMovementStartTime;                           // 0x0C18(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C1C[0x4];                                      // 0x0C1C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitializeMovement();
	void OnRep_ServerStartTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarActorMover">();
	}
	static class ADelMarActorMover* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarActorMover>();
	}
};

// Class DelMarCore.DelMarAIController
// 0x01F8 (0x05B0 - 0x03B8)
class ADelMarAIController final : public AAIController
{
public:
	uint8                                         Pad_3B8[0x20];                                     // 0x03B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ADelMarAIController* AIController, const struct FFortAthenaLoadout& Loadout)> OnLoadoutChanged; // 0x03D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                           DescriptorTag;                                     // 0x03E8(0x0004)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAthenaLoadout                     CosmeticLoadoutBC;                                 // 0x03F0(0x0130)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FCosmeticLoadout                       VehicleCosmeticLoadout;                            // 0x0520(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EDelMarInvertSteerMethod                      BotSteerMethod;                                    // 0x0530(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTree*                          BTAssetToRunOnPawnAISpawned;                       // 0x0538(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UBehaviorTree*>                  SkillLevelBehaviorTrees;                           // 0x0540(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	int32                                         MinSkillLevelForRubberbanding;                     // 0x0550(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDelMarCoreOobTubePositionalRenderingComponent> OobTubePositionRenderingComponentClass; // 0x0558(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          DelMarVehicle;                                     // 0x0560(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_568[0x10];                                     // 0x0568(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DelMarBotControllerUID;                            // 0x0578(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         DelMarBotSkillLevel;                               // 0x057C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 DelMarBotPlayerName;                               // 0x0580(0x0010)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarAIService*                       DelMarAIService;                                   // 0x0590(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                        PlayerBotPawn;                                     // 0x0598(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5A0[0x10];                                     // 0x05A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleGroundedStateChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAIController">();
	}
	static class ADelMarAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarAIController>();
	}
};

// Class DelMarCore.DelMarAIService
// 0x00F0 (0x0168 - 0x0078)
class UDelMarAIService final : public UAthenaAIService
{
public:
	TSubclassOf<class UFortAthenaAISpawnerDataComponent_AIBotCosmeticBase> CosmeticComponentClass;   // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDelMarAIVehicleCosmeticLibraryData> VehicleCosmeticLibrary;                // 0x0080(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBotsUniqueIDUseValidAccountID;                    // 0x00A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseRegionalNameList;                              // 0x00A1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFortAthenaAIBotNameDataAsset> BotNameDataAsset;                            // 0x00A8(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ADelMarAIController>        AIControllerClass;                                 // 0x00C8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>              MMRSpawnTablePtr;                                  // 0x00D0(0x0020)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ADelMarAIController*>            DelMarAIControllers;                               // 0x00F0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0100(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarRespawnManagerComponent> RespawnManagerComponent;                    // 0x0108(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class FString>                           ReservedPlayerNames;                               // 0x0110(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandlePlayerRegistered(class AFortPlayerState* RegisteredPlayerState);
	void HandlePlayerUnregistered(class AFortPlayerState* UnregisteredPlayerState, bool bSetAsInactive);

	int32 GetMaxNumberOfPlayers() const;
	const TArray<class ADelMarAIController*> GetRegisteredAIBotControllers() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAIService">();
	}
	static class UDelMarAIService* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarAIService>();
	}
};

// Class DelMarCore.DelMarAIVehicleCosmeticLibraryData
// 0x0030 (0x0060 - 0x0030)
class UDelMarAIVehicleCosmeticLibraryData final : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UDataTable>              PredefineVehiclCosmeticSetsDataTable;              // 0x0030(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDelMarAIVehicleCosmeticSlotDataTableInfo> RandomizedVehicleSlotDataTables;        // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAIVehicleCosmeticLibraryData">();
	}
	static class UDelMarAIVehicleCosmeticLibraryData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarAIVehicleCosmeticLibraryData>();
	}
};

// Class DelMarCore.DriveHazardInfo
// 0x00B8 (0x00E0 - 0x0028)
class UDriveHazardInfo final : public UObject
{
public:
	TWeakObjectPtr<class AActor>                  Actor;                                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0xB0];                                      // 0x0030(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DriveHazardInfo">();
	}
	static class UDriveHazardInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDriveHazardInfo>();
	}
};

// Class DelMarCore.DelMarBTService_VehicleBase
// 0x0030 (0x00A0 - 0x0070)
class UDelMarBTService_VehicleBase : public UBTService
{
public:
	struct FBlackboardKeySelector                 VehicleKey;                                        // 0x0070(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          DelMarVehicle;                                     // 0x0098(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBTService_VehicleBase">();
	}
	static class UDelMarBTService_VehicleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBTService_VehicleBase>();
	}
};

// Class DelMarCore.DelMarBTService_FindDriveGoal
// 0x04F0 (0x0590 - 0x00A0)
class alignas(0x10) UDelMarBTService_FindDriveGoal final : public UDelMarBTService_VehicleBase
{
public:
	struct FBlackboardKeySelector                 DriveGoalLocationKey;                              // 0x00A0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 DriveGoalRotationKey;                              // 0x00C8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 IsJumpDriveGoalKey;                                // 0x00F0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 IsOffRoadDriveGoalKey;                             // 0x0118(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 IsKickflipDriveGoalKey;                            // 0x0140(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 KickflipDirecitonKey;                              // 0x0168(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 HasUpcomingCollisionKey;                           // 0x0190(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         GroundedDriveGoalVehicleForwardOffset;             // 0x01B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         AirDriveGoalVehicleForwardOffset;                  // 0x01BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PathNoiseAmplitude;                                // 0x01C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PathNoiseFrequency;                                // 0x01C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxNumberOfCheckedTrackSegments;                   // 0x01C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GroundedOffroadRaycastDistance;                    // 0x01CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GroundedOffRoadRaycastTrackForwardOffset;          // 0x01D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TrackGapCheckForwardOffset;                        // 0x01D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReturnToTrackRaycastForwardOffset;                 // 0x01D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReturnToTrackRaycastDepthPadding;                  // 0x01DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReturnToTrackMaintainVehicleOffsetDegreeThreshold; // 0x01E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ReturnToTrackRaycastMinAngleDifference;            // 0x01E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         UnsafeLandingDesiredUnderthrustHeightFactor;       // 0x01E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         UnsafeLandingJumpGoalTrackOffsetReductionFactor;   // 0x01EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OffRoadSurfaceMaxNormalToTrackAngleThreshold;      // 0x01F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxVehicleAirRollAngleToReturnToTrackFromBelow;    // 0x01F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumberOfSideAvoidanceRaycasts;                     // 0x01F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DegreesBetweenRaycasts;                            // 0x01FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftPrimaryTraceRotationFactor;                   // 0x0200(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NonJumpableHazardMinHitNormalDegrees;              // 0x0204(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECollisionChannel                             RaycastCollisionChannel;                           // 0x0208(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class AActor>>             IgnoredActorClasses;                               // 0x0210(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     RaycastDistanceCurve;                              // 0x0220(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     RayCastDistanceContributionCurve;                  // 0x02B0(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     VehicleDistanceAvoidanceCurve;                     // 0x0340(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         DriveGoalOffsetCancelPadding;                      // 0x03D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriveHazardOffsetCancelPadding;                    // 0x03D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         VehicleTrackOffsetCancelPadding;                   // 0x03D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriveHazardMaxJumpDistanceFactor;                  // 0x03DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriveHazardMinJumpDistanceFactor;                  // 0x03E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HazardJumpGoalMaxHeightOffset;                     // 0x03E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HazardJumpGoalMinHeightOffset;                     // 0x03E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlockedJumpTracePadding;                           // 0x03EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TrackGapJumpHeightThreshold;                       // 0x03F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TrackGapDriveGoalHeightOffset;                     // 0x03F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>             JumpableActorClasses;                              // 0x03F8(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         DownwardKickflipSurfaceNormalDegreeThreshold;      // 0x0408(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         UpwardKickflipMinNormalDegreesToWorldUp;           // 0x040C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         KickflipDriveGoalTrackHeightOffset;                // 0x0410(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         KickflipDriveGoalForwardDistanceThreshold;         // 0x0414(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         UnderKickflipSurfaceForwardDistanceThreshold;      // 0x0418(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         KickflipTraceHeightOffset;                         // 0x041C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PercentChanceToIgnoreDriveHazard;                  // 0x0420(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PercentChanceToNotCheckForSafeLanding;             // 0x0424(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackPositionComponent> TrackPositionComponent;                      // 0x0428(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarTrackBase>        CurrentTrack;                                      // 0x0430(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackSplineComponent> CurrentTrackSplineComponent;                   // 0x0438(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackOobTubePositionalRenderingComponent> OobTubePositionalRenderingComponent; // 0x0440(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AActor>, class UDriveHazardInfo*> PrevFrameDriveHazardInfoMap;         // 0x0448(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                  OffRoadDriveActor;                                 // 0x0498(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                  CurrentJumpHazard;                                 // 0x04A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A8[0xE8];                                     // 0x04A8(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleKickflipActivated(bool bLeft);
	void HandleVehicleAnyWheelsOnGroundStateChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bAnyWheelsOnGround);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBTService_FindDriveGoal">();
	}
	static class UDelMarBTService_FindDriveGoal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBTService_FindDriveGoal>();
	}
};

// Class DelMarCore.DelMarBTService_ResetVehicle
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarBTService_ResetVehicle final : public UDelMarBTService_VehicleBase
{
public:
	TWeakObjectPtr<class UDelMarPlayerRaceDataComponent> PlayerRaceDataComponent;                    // 0x00A0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackPositionComponent> TrackPositionComponent;                      // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBTService_ResetVehicle">();
	}
	static class UDelMarBTService_ResetVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBTService_ResetVehicle>();
	}
};

// Class DelMarCore.DelMarBTTask_VehicleBase
// 0x0030 (0x00A0 - 0x0070)
class UDelMarBTTask_VehicleBase : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                 VehicleKey;                                        // 0x0070(0x0028)(Edit, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarVehicle>          DelMarVehicle;                                     // 0x0098(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBTTask_VehicleBase">();
	}
	static class UDelMarBTTask_VehicleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBTTask_VehicleBase>();
	}
};

// Class DelMarCore.DelMarBTTask_DriveTrack
// 0x0870 (0x0910 - 0x00A0)
class alignas(0x10) UDelMarBTTask_DriveTrack final : public UDelMarBTTask_VehicleBase
{
public:
	struct FBlackboardKeySelector                 DriveGoalLocationKey;                              // 0x00A0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 DriveGoalRotationKey;                              // 0x00C8(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 IsJumpDriveGoalKey;                                // 0x00F0(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 IsOffRoadDriveGoalKey;                             // 0x0118(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 IsKickflipDriveGoalKey;                            // 0x0140(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 KickflipDirecitonKey;                              // 0x0168(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                 HasUpcomingCollisionKey;                           // 0x0190(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     GroundedTrackHorizontalOffsetSteerCurve;           // 0x01B8(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     AirTrackHorizontalOffsetSteerCurve;                // 0x0248(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     CollisionAvoidanceHorizontalOffsetSteerCurve;      // 0x02D8(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     GroundedTurnDegreesSteerDecisionCurve;             // 0x0368(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     AirTurnDegreesSteerDecisionCurve;                  // 0x03F8(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     CollisionTurnDegreesSteerDecisionCurve;            // 0x0488(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         DriveThrottle;                                     // 0x0518(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanKickDrift;                                     // 0x051C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfDriftCheckSamples;                         // 0x0520(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinDriftSampleDistanceScaleFactor;                 // 0x0524(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxDriftSampleDistanceScaleFactor;                 // 0x0528(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinExitDriftSampleDistanceFromVehicle;             // 0x052C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxExitDriftSampleDistanceFromVehicle;             // 0x0530(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinRequiredDriftDegrees;                           // 0x0534(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRequiredDriftDegrees;                           // 0x0538(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinRequiredKickDriftDegrees;                       // 0x053C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRequiredKickDriftDegrees;                       // 0x0540(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinSecondsToUpdateRandomDriftConfigValues;         // 0x0544(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     PercentChanceToKickDriftCurve;                     // 0x0548(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         MinDriftSlipRatioForExitKickDrift;                 // 0x05D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinDriftSpeed;                                     // 0x05DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftKickUnderSteerDegreesThreshold;               // 0x05E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftKickOverSteerDegreesThreshold;                // 0x05E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftTapUnderSteerDegreesThreshold;                // 0x05E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftTapOverSteerDegreesThreshold;                 // 0x05EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftCounterSteerDegreesThreshold;                 // 0x05F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarScaledCurve                     MinDriftSlipRatioCurve;                            // 0x05F8(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     DistanceBetweenDriftSamplesCurve;                  // 0x0688(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     DriftSampleDistanceFromVehicleCurve;               // 0x0718(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     DriveGoalJumpHeightThresholdCurve;                 // 0x07A8(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         JumpGoalTrackAngleDistanceOffset;                  // 0x0838(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         JumpMinSpeed;                                      // 0x083C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinNumTurboChargesNeededToTurbo;                   // 0x0840(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTurboTrackCutoffAngleInDegrees;                 // 0x0844(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TurboActivationBaseChance;                         // 0x0848(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SecondaryTurboBoostChance;                         // 0x084C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTimeBetweenTurboCheck;                          // 0x0850(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTimeBetweenTurboCheck;                          // 0x0854(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackPositionComponent> TrackPositionComponent;                      // 0x0858(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarTrackBase>        CurrentTrack;                                      // 0x0860(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackSplineComponent> CurrentTrackSplineComponent;                   // 0x0868(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlackboardComponent*                   BlackboardComponent;                               // 0x0870(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_878[0x98];                                     // 0x0878(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleTurboActivated();
	void HandleVehicleAnyWheelsOnGroundStateChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bAnyWheelsOnGround);
	void TurboBonusZoneStateChanged(EDelMarTurboZoneState NewState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBTTask_DriveTrack">();
	}
	static class UDelMarBTTask_DriveTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBTTask_DriveTrack>();
	}
};

// Class DelMarCore.DelMarBTTask_RaceCountdown
// 0x0018 (0x00B8 - 0x00A0)
class UDelMarBTTask_RaceCountdown final : public UDelMarBTTask_VehicleBase
{
public:
	float                                         MaxReactionTime;                                   // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinReactionTime;                                   // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBTTask_RaceCountdown">();
	}
	static class UDelMarBTTask_RaceCountdown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBTTask_RaceCountdown>();
	}
};

// Class DelMarCore.DelMarCameraModeOverrideComponent
// 0x0000 (0x00A8 - 0x00A8)
class UDelMarCameraModeOverrideComponent final : public UFortCameraModeOverrideComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCameraModeOverrideComponent">();
	}
	static class UDelMarCameraModeOverrideComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCameraModeOverrideComponent>();
	}
};

// Class DelMarCore.DelMarChallengeGhostSystemControllerComponent
// 0x0038 (0x00D8 - 0x00A0)
class UDelMarChallengeGhostSystemControllerComponent final : public UControllerComponent
{
public:
	TSubclassOf<class UDelMarGhostPlaybackSessionComponent> GhostPlaybackSessionComponentClass;      // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UDelMarGhostRecordingSessionComponent> GhostRecordingSessionComponentClass;    // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        BestRunTime;                                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarGhostPlaybackSessionComponent> CachedPlaybackSession;                // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarGhostRecordingSessionComponent> CachedRecordingSession;              // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarChallengeRaceManager> CachedRaceManager;                             // 0x00C8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        CachedLocalPlayerState;                            // 0x00D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarChallengeGhostSystemControllerComponent">();
	}
	static class UDelMarChallengeGhostSystemControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarChallengeGhostSystemControllerComponent>();
	}
};

// Class DelMarCore.DelMarRaceManager
// 0x0218 (0x04A8 - 0x0290)
class ADelMarRaceManager : public AActor
{
public:
	uint8                                         Pad_290[0x90];                                     // 0x0290(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnRaceFinished;                                    // 0x0320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRaceStarted;                                     // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRaceCountdownStarted;                            // 0x0340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnRaceReset;                                       // 0x0350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerState* PlayerState)> OnPlayerFinishedRace;        // 0x0360(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerState* PlayerState)> OnPlayerLapComplete;         // 0x0370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AFortPlayerState* PlayerState)> OnPlayerResetRun;            // 0x0380(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bRaceStarted;                                      // 0x0390(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRaceFinished;                                     // 0x0391(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerState*>               SpectatorPlayerStates;                             // 0x0398(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerState*>               ActiveRacerPlayerStates;                           // 0x03A8(0x0010)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UDelMarRaceConfigComponent*             RaceConfig;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceLevelConfig>  ActiveRaceLevelConfig;                             // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarTimeManagerComponent*            TimeManager;                                       // 0x03C8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarRespawnManagerComponent*         RespawnManager;                                    // 0x03D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarCheckpointManagerComponent*      CheckpointManager;                                 // 0x03D8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarRubberbandingManagerComponent*   RubberbandingManager;                              // 0x03E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarPositionalTrackerComponent*      PositionalTracker;                                 // 0x03E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarEliminationRaceManagerComponent* EliminationManager;                                // 0x03F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarGlobalInputDisabler*             InputDisablerComponent;                            // 0x03F8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarMatchEventSystemComponent*       MatchEventSystemComponent;                         // 0x0400(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class AFortPlayerState*>                 ManagedPlayerStates;                               // 0x0408(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSet<TWeakObjectPtr<class AFortPlayerState>>  InactivePlayerStates;                              // 0x0458(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	void FinalizeRegisteredPlayerInitialization(class AFortPlayerState* PlayerState);
	void FinishRace();
	void HandleRegisteredPlayerPawnSet(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
	void NetMulticast_FinishRace(double RaceFinishedTime);
	void NetMulticast_ResetRace(bool bNextRound);
	void NetMulticast_ResetRun(const class AFortPlayerState* InPlayerState, bool bPlayerTriggered);
	void OnRep_ActiveRaceLevelConfig();
	void RegisterPlayerController(class AController* InController);
	void RegisterPlayerState(class AFortPlayerState* InPlayerState);
	void RequestCountdownForPlayer(class AFortPlayerState* PlayerState);
	void RequestStartRace(bool bSkipCountdown);
	void ResetRace(bool bIsRoundReset);
	void ResetRun(class AFortPlayerState* PlayerState, bool bPlayerTriggered);
	void SetActiveRaceLevelConfig(class ADelMarRaceLevelConfig* InRaceLevelConfig);
	void SetPlayerAsSpectator(class AFortPlayerState* PlayerState);
	void SetSpectatorAsPlayer(class AFortPlayerState* PlayerState);
	void UnregisterAllPlayers(bool bSetAsInactive);
	void UnregisterPlayerController(class AController* InController, bool bSetAsInactive);
	void UnregisterPlayerState(class AFortPlayerState* InPlayerState, bool bSetAsInactive);

	class ADelMarRaceLevelConfig* GetActiveRaceLevelConfig() const;
	TArray<class AFortPlayerState*> GetActiveRacers() const;
	EDelMarRaceMode GetCurrentRaceMode() const;
	EDelMarRaceSpawnMode GetCurrentSpawnMode() const;
	class UDelMarEliminationRaceManagerComponent* GetEliminationManagerComponent() const;
	TArray<class AFortPlayerState*> GetManagedPlayerStatesArray() const;
	int32 GetNumberOfLapsForRace() const;
	int32 GetNumInactiveRacers() const;
	class UDelMarPositionalTrackerComponent* GetPositionalTracker() const;
	class UDelMarRaceConfigComponent* GetRaceConfig() const;
	class UDelMarRespawnManagerComponent* GetRespawnManagerComponent() const;
	class UDelMarRubberbandingManagerComponent* GetRubberbandingManager() const;
	TArray<class AFortPlayerState*> GetSpectators() const;
	class UDelMarTimeManagerComponent* GetTimeManager() const;
	bool IsActiveRacer(const class AFortPlayerState* PlayerState) const;
	bool IsSpectator(const class AFortPlayerState* PlayerState) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceManager">();
	}
	static class ADelMarRaceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarRaceManager>();
	}
};

// Class DelMarCore.DelMarChallengeRaceManager
// 0x0010 (0x04B8 - 0x04A8)
class ADelMarChallengeRaceManager final : public ADelMarRaceManager
{
public:
	bool                                          bIsOvertime;                                       // 0x04A8(0x0001)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           OvertimeTimer;                                     // 0x04B0(0x0008)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void NetMulticast_StartOvertime(const double RaceFinishTimestamp);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarChallengeRaceManager">();
	}
	static class ADelMarChallengeRaceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarChallengeRaceManager>();
	}
};

// Class DelMarCore.DelMarStateMachine
// 0x0108 (0x01A8 - 0x00A0)
class UDelMarStateMachine : public UActorComponent
{
public:
	TArray<struct FDelMarStateOverride>           StateOverrides;                                    // 0x00A0(0x0010)(ZeroConstructor, Transient, Config, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, TSubclassOf<class UDelMarState>> StateMappings;                        // 0x00B0(0x0050)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTag                           RequestedStateTag;                                 // 0x0100(0x0004)(Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           CurrentStateTag;                                   // 0x0104(0x0004)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           DefaultStateTag;                                   // 0x0108(0x0004)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDelMarState*>                   ActiveStates;                                      // 0x0110(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UDelMarState*>                   ReplicatedStates;                                  // 0x0120(0x0010)(Net, ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTag                           WaitingForStateReplicationTag;                     // 0x0130(0x0004)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_134[0x74];                                     // 0x0134(0x0074)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_RequestedStateTag();
	void RequestState(const struct FGameplayTag& StateTag);

	class UDelMarState* GetActiveStateByTag(const struct FGameplayTag& GameplayTag) const;
	class UDelMarState* GetCurrentState() const;
	struct FGameplayTag GetCurrentStateTag() const;
	struct FGameplayTag GetRequestedStateTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarStateMachine">();
	}
	static class UDelMarStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarStateMachine>();
	}
};

// Class DelMarCore.DelMarState
// 0x0008 (0x0030 - 0x0028)
class UDelMarState : public UObject
{
public:
	struct FGameplayTag                           StateTag;                                          // 0x0028(0x0004)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState">();
	}
	static class UDelMarState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState>();
	}
};

// Class DelMarCore.DelMarRacerState
// 0x0000 (0x0030 - 0x0030)
class UDelMarRacerState : public UDelMarState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRacerState">();
	}
	static class UDelMarRacerState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRacerState>();
	}
};

// Class DelMarCore.DelMarRacerState_WithSpectatorTransitionBase
// 0x0000 (0x0030 - 0x0030)
class UDelMarRacerState_WithSpectatorTransitionBase : public UDelMarRacerState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRacerState_WithSpectatorTransitionBase">();
	}
	static class UDelMarRacerState_WithSpectatorTransitionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRacerState_WithSpectatorTransitionBase>();
	}
};

// Class DelMarCore.DelMarChallengeRacerState_RunActive
// 0x0000 (0x0030 - 0x0030)
class UDelMarChallengeRacerState_RunActive final : public UDelMarRacerState_WithSpectatorTransitionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarChallengeRacerState_RunActive">();
	}
	static class UDelMarChallengeRacerState_RunActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarChallengeRacerState_RunActive>();
	}
};

// Class DelMarCore.DelMarRacerStateMachineComponent
// 0x0030 (0x01D8 - 0x01A8)
class UDelMarRacerStateMachineComponent : public UDelMarStateMachine
{
public:
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x01A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           PreviousStateTag;                                  // 0x01B0(0x0004)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B4[0x24];                                     // 0x01B4(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRacerStateMachineComponent">();
	}
	static class UDelMarRacerStateMachineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRacerStateMachineComponent>();
	}
};

// Class DelMarCore.DelMarChallengeRacerStateMachineComponent
// 0x0000 (0x01D8 - 0x01D8)
class UDelMarChallengeRacerStateMachineComponent final : public UDelMarRacerStateMachineComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarChallengeRacerStateMachineComponent">();
	}
	static class UDelMarChallengeRacerStateMachineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarChallengeRacerStateMachineComponent>();
	}
};

// Class DelMarCore.DelMarSpectatorControllerComponent
// 0x0060 (0x0100 - 0x00A0)
class UDelMarSpectatorControllerComponent : public UControllerComponent
{
public:
	class UInputAction*                           SpectateNextPlayerAction;                          // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                           SpectatePrevPlayerAction;                          // 0x00A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                           ExitSpectateAction;                                // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDelMarPlayerInputManagerComponent> InputManagerClass;                         // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UEnhancedInputComponent> InputComponent;                                    // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00C8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarRequestComponent> SpectatorRequestComponent;                         // 0x00D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        CurrentViewTarget;                                 // 0x00D8(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        PrevValidViewTarget;                               // 0x00E0(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        SpectatorPlayerState;                              // 0x00E8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerControllerZone> SpectatorController;                             // 0x00F0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsLateJoinSpectator;                              // 0x00F8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExitSpectate();
	void NetMulticast_BeginSpectating();
	void NetMulticast_FinishSpectating();
	void ServerSetSpectatorTarget(class AFortPlayerState* PlayerState);
	void SetIsLateJoinSpectator(bool bNewLateJoinSpectator);
	void SetSpectatorTarget(class AFortPlayerState* PlayerState);
	void SpectateNextPlayer();
	void SpectatePrevPlayer();

	bool IsLateJoinSpectator() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarSpectatorControllerComponent">();
	}
	static class UDelMarSpectatorControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarSpectatorControllerComponent>();
	}
};

// Class DelMarCore.DelMarChallengeSpectatorControllerComponent
// 0x0000 (0x0100 - 0x0100)
class UDelMarChallengeSpectatorControllerComponent final : public UDelMarSpectatorControllerComponent
{
public:
	void ClientUpdateFinishedSpectatorTarget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarChallengeSpectatorControllerComponent">();
	}
	static class UDelMarChallengeSpectatorControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarChallengeSpectatorControllerComponent>();
	}
};

// Class DelMarCore.DelMarRaceManagerComponent
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarRaceManagerComponent : public UGameFrameworkComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceManagerComponent">();
	}
	static class UDelMarRaceManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceManagerComponent>();
	}
};

// Class DelMarCore.DelMarTimeManagerComponent
// 0x0090 (0x0130 - 0x00A0)
class UDelMarTimeManagerComponent : public UDelMarRaceManagerComponent
{
public:
	TMulticastInlineDelegate<void(class AFortPlayerState* PlayerState)> OnPlayerCountdownStarted;    // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	double                                        ServerRaceStartTime;                               // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        ServerRaceFinishTime;                              // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                        ServerCountdownIntervalTime;                       // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarRaceConfigComponent> RaceConfig;                                     // 0x00C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceLevelConfig>  RaceLevelConfig;                                   // 0x00D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00D8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AFortPlayerState>, double> ActiveCountdownRunStartTimeMap;             // 0x00E0(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)

public:
	void ResetClocks();
	void StartCountdownForPlayer(class AFortPlayerState* PlayerState, double ServerCountdownStartTime, double ServerRunStartTime);
	void StartCountdownForRace(double ServerCountdownStartTime, double ServerRunStartTime, double InServerCountdownIntervalTime);

	double GetRaceTimeRemaining() const;
	double GetSecondsRemainingTillRaceStart() const;
	double GetSecondsSinceRaceStart() const;
	double GetServerCountdownIntervalTime() const;
	double GetServerRaceFinishTime() const;
	double GetServerRaceStartTime() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTimeManagerComponent">();
	}
	static class UDelMarTimeManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTimeManagerComponent>();
	}
};

// Class DelMarCore.DelMarChallengeTimeManagerComponent
// 0x0050 (0x0180 - 0x0130)
class UDelMarChallengeTimeManagerComponent final : public UDelMarTimeManagerComponent
{
public:
	TSet<TWeakObjectPtr<class AFortPlayerState>>  SubsequentRunStartSet;                             // 0x0130(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarChallengeTimeManagerComponent">();
	}
	static class UDelMarChallengeTimeManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarChallengeTimeManagerComponent>();
	}
};

// Class DelMarCore.DelMarClientReplayRecordingComponent
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarClientReplayRecordingComponent final : public UControllerComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarClientReplayRecordingComponent">();
	}
	static class UDelMarClientReplayRecordingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarClientReplayRecordingComponent>();
	}
};

// Class DelMarCore.DelMarCompetitiveRaceManager
// 0x0018 (0x04C0 - 0x04A8)
class ADelMarCompetitiveRaceManager final : public ADelMarRaceManager
{
public:
	float                                         FinishRaceAfterFirstPlayerFinishedSeconds;         // 0x04A8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4AC[0xC];                                      // 0x04AC(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FirstPlayerFinishedTimestamp;                      // 0x04B8(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleFinalRacePositionsUpdated(const TArray<struct FDelMarFinalRacePositionEntry>& FinalRacePositions, const struct FDelMarEvent_RunRecorded& RecordedRun);
	void OnRep_FirstPlayerFinishedTimestamp();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCompetitiveRaceManager">();
	}
	static class ADelMarCompetitiveRaceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarCompetitiveRaceManager>();
	}
};

// Class DelMarCore.DelMarCompetitiveRacerState_RunActive
// 0x0000 (0x0030 - 0x0030)
class UDelMarCompetitiveRacerState_RunActive final : public UDelMarRacerState_WithSpectatorTransitionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCompetitiveRacerState_RunActive">();
	}
	static class UDelMarCompetitiveRacerState_RunActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCompetitiveRacerState_RunActive>();
	}
};

// Class DelMarCore.DelMarCompetitiveRacerState_RunFinished
// 0x0000 (0x0030 - 0x0030)
class UDelMarCompetitiveRacerState_RunFinished final : public UDelMarRacerState_WithSpectatorTransitionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCompetitiveRacerState_RunFinished">();
	}
	static class UDelMarCompetitiveRacerState_RunFinished* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCompetitiveRacerState_RunFinished>();
	}
};

// Class DelMarCore.DelMarCompetitiveRacerStateMachineComponent
// 0x0000 (0x01D8 - 0x01D8)
class UDelMarCompetitiveRacerStateMachineComponent final : public UDelMarRacerStateMachineComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCompetitiveRacerStateMachineComponent">();
	}
	static class UDelMarCompetitiveRacerStateMachineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCompetitiveRacerStateMachineComponent>();
	}
};

// Class DelMarCore.DelMarConnectedHintComponent
// 0x0050 (0x00F0 - 0x00A0)
class UDelMarConnectedHintComponent final : public UActorComponent
{
public:
	bool                                          bShouldShowHint;                                   // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDelMarVehicleAction>       VehicleActionClass;                                // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAcceptMultipleTags;                               // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  MultipleTagContainer;                              // 0x00B8(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x00D8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarVehicleAction*                   VehicleAction;                                     // 0x00E0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginPlay();
	void HandleActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void HandleActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void HandleVehicleActionPerformed();
	void PassNuxHintTypeToConnectedHintComponent(const struct FGameplayTag& HintTypeTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarConnectedHintComponent">();
	}
	static class UDelMarConnectedHintComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarConnectedHintComponent>();
	}
};

// Class DelMarCore.DelMarCoreOobTubePositionalRenderingComponent
// 0x0008 (0x0118 - 0x0110)
class UDelMarCoreOobTubePositionalRenderingComponent final : public UDelMarTrackOobTubePositionalRenderingComponent
{
public:
	TWeakObjectPtr<class APlayerState>            ViewTargetPlayerState;                             // 0x0110(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleAIPawnSpawned(class AAIController* BotController, class AFortPawn* BotPawn);
	void HandleViewTargetChanged(class AFortPlayerController* FortPC, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCoreOobTubePositionalRenderingComponent">();
	}
	static class UDelMarCoreOobTubePositionalRenderingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCoreOobTubePositionalRenderingComponent>();
	}
};

// Class DelMarCore.DelMarCoreSplineMeshComponent
// 0x0000 (0x0710 - 0x0710)
class UDelMarCoreSplineMeshComponent final : public USplineMeshComponent
{
public:
	void OnBeginActorOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCoreSplineMeshComponent">();
	}
	static class UDelMarCoreSplineMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCoreSplineMeshComponent>();
	}
};

// Class DelMarCore.DelMarCosmeticsDatabase
// 0x0020 (0x0050 - 0x0030)
class UDelMarCosmeticsDatabase final : public UPrimaryDataAsset
{
public:
	TArray<class UDelMarCosmeticItemDefinition*>  Items;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDelMarCosmeticSlotInfo>        SlotInfos;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	TArray<class UDelMarCosmeticItemDefinition*> GetItemsForSlot(const struct FGameplayTag& Slot);

	const TArray<struct FDelMarCosmeticSlotInfo> GetSlotInfos() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCosmeticsDatabase">();
	}
	static class UDelMarCosmeticsDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCosmeticsDatabase>();
	}
};

// Class DelMarCore.DelMarDeathRacerState_ActiveRace
// 0x0010 (0x0040 - 0x0030)
class UDelMarDeathRacerState_ActiveRace final : public UDelMarRacerState_WithSpectatorTransitionBase
{
public:
	TWeakObjectPtr<class ADelMarDeathRaceManager> DeathRaceManager;                                  // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFinishedRound;                                    // 0x0038(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDeathRacerState_ActiveRace">();
	}
	static class UDelMarDeathRacerState_ActiveRace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDeathRacerState_ActiveRace>();
	}
};

// Class DelMarCore.DelMarDeathRacerState_FinishedRace
// 0x0000 (0x0030 - 0x0030)
class UDelMarDeathRacerState_FinishedRace final : public UDelMarRacerState_WithSpectatorTransitionBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDeathRacerState_FinishedRace">();
	}
	static class UDelMarDeathRacerState_FinishedRace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDeathRacerState_FinishedRace>();
	}
};

// Class DelMarCore.DelMarDeathRacerStateMachineComponent
// 0x0000 (0x01D8 - 0x01D8)
class UDelMarDeathRacerStateMachineComponent final : public UDelMarRacerStateMachineComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDeathRacerStateMachineComponent">();
	}
	static class UDelMarDeathRacerStateMachineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDeathRacerStateMachineComponent>();
	}
};

// Class DelMarCore.DelMarDoubleTapInputTrigger
// 0x0010 (0x0060 - 0x0050)
class UDelMarDoubleTapInputTrigger final : public UInputTrigger
{
public:
	float                                         Delay;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDoubleTapInputTrigger">();
	}
	static class UDelMarDoubleTapInputTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDoubleTapInputTrigger>();
	}
};

// Class DelMarCore.DelMarPhysMatAttribute
// 0x0000 (0x0028 - 0x0028)
class UDelMarPhysMatAttribute : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPhysMatAttribute">();
	}
	static class UDelMarPhysMatAttribute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPhysMatAttribute>();
	}
};

// Class DelMarCore.DelMarDriveParticlesPhysMatAttribute
// 0x0008 (0x0030 - 0x0028)
class UDelMarDriveParticlesPhysMatAttribute final : public UDelMarPhysMatAttribute
{
public:
	class UNiagaraSystem*                         DriveParticles;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDriveParticlesPhysMatAttribute">();
	}
	static class UDelMarDriveParticlesPhysMatAttribute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDriveParticlesPhysMatAttribute>();
	}
};

// Class DelMarCore.DelMarDriverInteractionComponent
// 0x0058 (0x00F8 - 0x00A0)
class UDelMarDriverInteractionComponent final : public UControllerComponent
{
public:
	class AFortPlayerState*                       ViewPlayerState;                                   // 0x00A0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADelMarVehicle*                         ViewVehicle;                                       // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x30];                                      // 0x00B0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PassEventSquareDistThreshold;                      // 0x00E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarPlayerRaceDataComponent*         RaceData;                                          // 0x00E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleViewTargetChanged(class AFortPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDriverInteractionComponent">();
	}
	static class UDelMarDriverInteractionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarDriverInteractionComponent>();
	}
};

// Class DelMarCore.DelMarEvent_FinalFirstPlaceChanged
// 0x0010 (0x0038 - 0x0028)
class UDelMarEvent_FinalFirstPlaceChanged final : public UObject
{
public:
	TWeakObjectPtr<class AFortPlayerState>        NewFirstPlace;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortPlayerState>        PrevFirstPlace;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEvent_FinalFirstPlaceChanged">();
	}
	static class UDelMarEvent_FinalFirstPlaceChanged* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEvent_FinalFirstPlaceChanged>();
	}
};

// Class DelMarCore.DelMarEvent_GlobalLeaderboardActive
// 0x0020 (0x0048 - 0x0028)
class UDelMarEvent_GlobalLeaderboardActive final : public UObject
{
public:
	class FString                                 LeaderboardEventId;                                // 0x0028(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LeaderboardWindowId;                               // 0x0038(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEvent_GlobalLeaderboardActive">();
	}
	static class UDelMarEvent_GlobalLeaderboardActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEvent_GlobalLeaderboardActive>();
	}
};

// Class DelMarCore.DelMarEvent_GlobalLeaderboardFocusedLeaderboardEntriesPopulated
// 0x0000 (0x0028 - 0x0028)
class UDelMarEvent_GlobalLeaderboardFocusedLeaderboardEntriesPopulated final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEvent_GlobalLeaderboardFocusedLeaderboardEntriesPopulated">();
	}
	static class UDelMarEvent_GlobalLeaderboardFocusedLeaderboardEntriesPopulated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEvent_GlobalLeaderboardFocusedLeaderboardEntriesPopulated>();
	}
};

// Class DelMarCore.DelMarEvent_GlobalLeaderboardTopLeaderboardEntriesPopulated
// 0x0000 (0x0028 - 0x0028)
class UDelMarEvent_GlobalLeaderboardTopLeaderboardEntriesPopulated final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEvent_GlobalLeaderboardTopLeaderboardEntriesPopulated">();
	}
	static class UDelMarEvent_GlobalLeaderboardTopLeaderboardEntriesPopulated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEvent_GlobalLeaderboardTopLeaderboardEntriesPopulated>();
	}
};

// Class DelMarCore.DelMarEvent_GlobalLeaderboardFriendLeaderboardEntriesPopulated
// 0x0000 (0x0028 - 0x0028)
class UDelMarEvent_GlobalLeaderboardFriendLeaderboardEntriesPopulated final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEvent_GlobalLeaderboardFriendLeaderboardEntriesPopulated">();
	}
	static class UDelMarEvent_GlobalLeaderboardFriendLeaderboardEntriesPopulated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEvent_GlobalLeaderboardFriendLeaderboardEntriesPopulated>();
	}
};

// Class DelMarCore.DelMarEvent_GlobalLeaderboardPersonalBestRetrieved
// 0x0040 (0x0068 - 0x0028)
class UDelMarEvent_GlobalLeaderboardPersonalBestRetrieved final : public UObject
{
public:
	struct FDelMarGlobalLeaderboardEntry          PersonalBest;                                      // 0x0028(0x0040)(Transient, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEvent_GlobalLeaderboardPersonalBestRetrieved">();
	}
	static class UDelMarEvent_GlobalLeaderboardPersonalBestRetrieved* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEvent_GlobalLeaderboardPersonalBestRetrieved>();
	}
};

// Class DelMarCore.DelMarFlowAnalyticsControllerComponent
// 0x0018 (0x00B8 - 0x00A0)
class UDelMarFlowAnalyticsControllerComponent final : public UControllerComponent
{
public:
	class FString                                 FlowAnalyicsEventName;                             // 0x00A0(0x0010)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   PlayerController;                                  // 0x00B0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void TutorialComplete();
	void TutorialGoRace();
	void TutorialKeepTraining();
	void TutorialReplay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarFlowAnalyticsControllerComponent">();
	}
	static class UDelMarFlowAnalyticsControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarFlowAnalyticsControllerComponent>();
	}
};

// Class DelMarCore.DelMarGameplayState
// 0x0000 (0x0030 - 0x0030)
class UDelMarGameplayState : public UDelMarState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGameplayState">();
	}
	static class UDelMarGameplayState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGameplayState>();
	}
};

// Class DelMarCore.DelMarGameUserSettings
// 0x0018 (0x0040 - 0x0028)
class UDelMarGameUserSettings final : public UObject
{
public:
	int32                                         NuxLastViewedVideoVersion;                         // 0x0028(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNuxHasPromptedToPlayTutorial;                     // 0x002C(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasPromptedToPlaySpeedRun;                        // 0x002D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNuxHasShownDefaultMode;                           // 0x002E(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastPlayedDelMarMnemonic;                          // 0x0030(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGameUserSettings">();
	}
	static class UDelMarGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGameUserSettings>();
	}
};

// Class DelMarCore.DelMarGhostSessionComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDelMarGhostSessionComponent : public UControllerComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartSession();
	void StopSession();

	bool IsSessionActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGhostSessionComponent">();
	}
	static class UDelMarGhostSessionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGhostSessionComponent>();
	}
};

// Class DelMarCore.DelMarGhostPlaybackSessionComponent
// 0x0048 (0x00F8 - 0x00B0)
class UDelMarGhostPlaybackSessionComponent final : public UDelMarGhostSessionComponent
{
public:
	uint8                                         Pad_B0[0x20];                                      // 0x00B0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	ETeleportType                                 TeleportSetting;                                   // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AFortPhysicsPawn>           PlaybackActorClass;                                // 0x00D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CurrentFrame;                                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarGhostReplayLog*                  PlaybackLog;                                       // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPhysicsPawn*                       PlaybackActor;                                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetPlaybackLog(class UDelMarGhostReplayLog* InLog);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGhostPlaybackSessionComponent">();
	}
	static class UDelMarGhostPlaybackSessionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGhostPlaybackSessionComponent>();
	}
};

// Class DelMarCore.DelMarGhostPlaybackTrigger
// 0x0030 (0x02C0 - 0x0290)
class ADelMarGhostPlaybackTrigger final : public AActor
{
public:
	int32                                         PreviewFrame;                                      // 0x0290(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         StartFrame;                                        // 0x0294(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         EndFrame;                                          // 0x0298(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxFrame;                                          // 0x029C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarGhostReplayLog*                  PlaybackLog;                                       // 0x02A0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BoxCollider;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDelMarGhostPlaybackSessionComponent> PlaybackSessionClassOverride;            // 0x02B0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarGhostPlaybackSessionComponent*   PlaybackSession;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_HandlePlaybackCompleted(const struct FVector& Location);
	void HandlePlaybackCompleted();
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGhostPlaybackTrigger">();
	}
	static class ADelMarGhostPlaybackTrigger* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarGhostPlaybackTrigger>();
	}
};

// Class DelMarCore.DelMarGhostRecordingSessionComponent
// 0x0050 (0x0100 - 0x00B0)
class UDelMarGhostRecordingSessionComponent final : public UDelMarGhostSessionComponent
{
public:
	uint8                                         Pad_B0[0x18];                                      // 0x00B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarGhostReplayLog*                  RecordLog;                                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecordOffPhysicsDelegate;                         // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D1[0x23];                                      // 0x00D1(0x0023)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentFrame;                                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x00F8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetRecordOffPhysicsDelegate(bool bEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGhostRecordingSessionComponent">();
	}
	static class UDelMarGhostRecordingSessionComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGhostRecordingSessionComponent>();
	}
};

// Class DelMarCore.DelMarGhostReplayLog
// 0x0018 (0x0040 - 0x0028)
class UDelMarGhostReplayLog final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGhostReplayFrame>              Frames;                                            // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGhostReplayLog">();
	}
	static class UDelMarGhostReplayLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGhostReplayLog>();
	}
};

// Class DelMarCore.DelMarGlobalLeaderboardControllerComponent
// 0x00B0 (0x0150 - 0x00A0)
class UDelMarGlobalLeaderboardControllerComponent final : public UControllerComponent
{
public:
	bool                                          bIsLeaderboardEnabled;                             // 0x00A0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDelMarGlobalLeaderboardEntry>  TopLeaderboardEntries;                             // 0x00A8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDelMarGlobalLeaderboardEntry>  FocusedLeaderboardEntries;                         // 0x00B8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDelMarGlobalLeaderboardEntry>  FriendLeaderboardEntries;                          // 0x00C8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                          bHasRequestedLeaderboards;                         // 0x00D8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHasPersonalBest;                                  // 0x00D9(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarGlobalLeaderboardEntry          PersonalBest;                                      // 0x00E0(0x0040)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_120[0x8];                                      // 0x0120(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarEvent_GlobalLeaderboardActive*   GlobalLeaderboardActiveEvent;                      // 0x0128(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDelMarLeaderboardSettings             LeaderboardSettings;                               // 0x0130(0x0020)(Net, RepNotify, NativeAccessSpecifierPrivate)

public:
	void ClientNewPersonalBest(const struct FDelMarEvent_GlobalLeaderboardNewPersonalBest& PersonalBestEvent);
	void ClientUpdateLeaderboards();
	void OnRep_LeaderboardSettings();
	void ServerNewPersonalBest(const struct FDelMarEvent_GlobalLeaderboardNewPersonalBest& PersonalBestRetrievedEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGlobalLeaderboardControllerComponent">();
	}
	static class UDelMarGlobalLeaderboardControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGlobalLeaderboardControllerComponent>();
	}
};

// Class DelMarCore.GuidedZoneRequirement
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement">();
	}
	static class UGuidedZoneRequirement* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_Drift
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_Drift final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_Drift">();
	}
	static class UGuidedZoneRequirement_Drift* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_Drift>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_DriftKick
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_DriftKick final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_DriftKick">();
	}
	static class UGuidedZoneRequirement_DriftKick* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_DriftKick>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_Kickflip
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_Kickflip final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_Kickflip">();
	}
	static class UGuidedZoneRequirement_Kickflip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_Kickflip>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_Turbo
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_Turbo final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_Turbo">();
	}
	static class UGuidedZoneRequirement_Turbo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_Turbo>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_TurboBonusZone
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_TurboBonusZone final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_TurboBonusZone">();
	}
	static class UGuidedZoneRequirement_TurboBonusZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_TurboBonusZone>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_Underthrust
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_Underthrust final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_Underthrust">();
	}
	static class UGuidedZoneRequirement_Underthrust* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_Underthrust>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_Jump
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_Jump : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_Jump">();
	}
	static class UGuidedZoneRequirement_Jump* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_Jump>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_JumpOrUnderthrust
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_JumpOrUnderthrust final : public UGuidedZoneRequirement_Jump
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_JumpOrUnderthrust">();
	}
	static class UGuidedZoneRequirement_JumpOrUnderthrust* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_JumpOrUnderthrust>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_DriftActive
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_DriftActive final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_DriftActive">();
	}
	static class UGuidedZoneRequirement_DriftActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_DriftActive>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_DriftBoostActive
// 0x0000 (0x0028 - 0x0028)
class UGuidedZoneRequirement_DriftBoostActive final : public UGuidedZoneRequirement
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_DriftBoostActive">();
	}
	static class UGuidedZoneRequirement_DriftBoostActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_DriftBoostActive>();
	}
};

// Class DelMarCore.GuidedZoneRequirement_MidTutorial
// 0x0010 (0x0038 - 0x0028)
class UGuidedZoneRequirement_MidTutorial final : public UGuidedZoneRequirement
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GuidedZoneRequirement_MidTutorial">();
	}
	static class UGuidedZoneRequirement_MidTutorial* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGuidedZoneRequirement_MidTutorial>();
	}
};

// Class DelMarCore.DelMarGuidedTutorialZoneActor
// 0x0118 (0x03A8 - 0x0290)
class ADelMarGuidedTutorialZoneActor final : public AActor
{
public:
	class UBoxComponent*                          BoxCollider;                                       // 0x0290(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FinalTimeDilation;                                 // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TransitionSeconds;                                 // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxTimeDilationSeconds;                            // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDemoVehicleOnFail;                                // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarEvent_SetTutorialAnnouncement   ScreenMessage;                                     // 0x02A8(0x0040)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                         HintDelaySeconds;                                  // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         HintRemovalDelaySeconds;                           // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGuidedZoneRequirement>     ZoneRequirementClass;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  InputTagsToRemoveOnZoneStart;                      // 0x02F8(0x0020)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  InputTagsToAddOnZoneStart;                         // 0x0318(0x0020)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  InputTagsToRemoveOnZoneEnd;                        // 0x0338(0x0020)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  InputTagsToAddOnZoneEnd;                           // 0x0358(0x0020)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UGuidedZoneRequirement*                 ZoneRequirement;                                   // 0x0378(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0380(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          ActiveVehicle;                                     // 0x0388(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   ActivePlayerController;                            // 0x0390(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x10];                                     // 0x0398(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnTutorialZoneComplete();
	void BP_OnTutorialZoneFailed();
	void BP_OnTutorialZoneStarted();
	void HandleVehicleDemolished(const struct FGameplayTag& CausedByTag);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGuidedTutorialZoneActor">();
	}
	static class ADelMarGuidedTutorialZoneActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarGuidedTutorialZoneActor>();
	}
};

// Class DelMarCore.DelMarInputModifierHazard
// 0x0040 (0x02D0 - 0x0290)
class ADelMarInputModifierHazard final : public AActor
{
public:
	TArray<struct FDelMarActivatedInputFrame>     ActivatedInputSequence;                            // 0x0290(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDelMarDisabledInputData>       DisabledEffects;                                   // 0x02A0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UBoxComponent*                          BoxCollider;                                       // 0x02B0(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerController*                      LocalController;                                   // 0x02B8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEnhancedPlayerInput*                   LocalPlayerInput;                                  // 0x02C0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartOverlapTime;                                  // 0x02C8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TotalActivationSequenceTime;                       // 0x02CC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarInputModifierHazard">();
	}
	static class ADelMarInputModifierHazard* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarInputModifierHazard>();
	}
};

// Class DelMarCore.DelMarLevelDataAsset
// 0x0070 (0x00A0 - 0x0030)
class UDelMarLevelDataAsset final : public UPrimaryDataAsset
{
public:
	class FText                                   DisplayName;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   LevelDescription;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              LevelBackgroundImage;                              // 0x0050(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UWorld>>          Levels;                                            // 0x0070(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  LevelDescriptionTags;                              // 0x0080(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLevelDataAsset">();
	}
	static class UDelMarLevelDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLevelDataAsset>();
	}
};

// Class DelMarCore.DelMarLoadoutSave
// 0x0050 (0x0078 - 0x0028)
class UDelMarLoadoutSave final : public USaveGame
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UDelMarCosmeticItemDefinition>> EquippedLoadout;  // 0x0028(0x0050)(Edit, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLoadoutSave">();
	}
	static class UDelMarLoadoutSave* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLoadoutSave>();
	}
};

// Class DelMarCore.DelMarMatchEventSystemComponent
// 0x0068 (0x0108 - 0x00A0)
class UDelMarMatchEventSystemComponent final : public UDelMarRaceManagerComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<struct FGameplayTag>                     EnabledMatchEventTags;                             // 0x00B8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMatchEventSystemComponent">();
	}
	static class UDelMarMatchEventSystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarMatchEventSystemComponent>();
	}
};

// Class DelMarCore.DelMarMatchmakingFlowInjector
// 0x0000 (0x0028 - 0x0028)
class UDelMarMatchmakingFlowInjector final : public UInjectPreMatchmakingFlow
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMatchmakingFlowInjector">();
	}
	static class UDelMarMatchmakingFlowInjector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarMatchmakingFlowInjector>();
	}
};

// Class DelMarCore.DelMarMatchmakingGracefulUpgrader
// 0x0000 (0x0028 - 0x0028)
class UDelMarMatchmakingGracefulUpgrader final : public UGracefulUpgradeOverrider
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMatchmakingGracefulUpgrader">();
	}
	static class UDelMarMatchmakingGracefulUpgrader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarMatchmakingGracefulUpgrader>();
	}
};

// Class DelMarCore.DelMarNetModelSubsystem
// 0x0008 (0x0038 - 0x0030)
class UDelMarNetModelSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarNetModelSubsystem">();
	}
	static class UDelMarNetModelSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarNetModelSubsystem>();
	}
};

// Class DelMarCore.DelMarMutator
// 0x0008 (0x0340 - 0x0338)
class ADelMarMutator : public AFortAthenaMutator
{
public:
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMutator">();
	}
	static class ADelMarMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarMutator>();
	}
};

// Class DelMarCore.DelMarNetworkPredictionMutator
// 0x0018 (0x0358 - 0x0340)
class ADelMarNetworkPredictionMutator final : public ADelMarMutator
{
public:
	uint8                                         Pad_340[0x18];                                     // 0x0340(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarNetworkPredictionMutator">();
	}
	static class ADelMarNetworkPredictionMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarNetworkPredictionMutator>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessorBase
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessorBase : public UFortObjectiveProcessor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessorBase">();
	}
	static class UDelMarObjectiveProcessorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessorBase>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_BeatPlayers
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_BeatPlayers final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_BeatPlayers">();
	}
	static class UDelMarObjectiveProcessor_BeatPlayers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_BeatPlayers>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_BonusTurboActivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_BonusTurboActivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_BonusTurboActivated">();
	}
	static class UDelMarObjectiveProcessor_BonusTurboActivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_BonusTurboActivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_BoostPadBonusSpeedEnded
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_BoostPadBonusSpeedEnded final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_BoostPadBonusSpeedEnded">();
	}
	static class UDelMarObjectiveProcessor_BoostPadBonusSpeedEnded* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_BoostPadBonusSpeedEnded>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_BoostPadHit
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_BoostPadHit final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_BoostPadHit">();
	}
	static class UDelMarObjectiveProcessor_BoostPadHit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_BoostPadHit>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_DistanceTraveled
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_DistanceTraveled final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_DistanceTraveled">();
	}
	static class UDelMarObjectiveProcessor_DistanceTraveled* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_DistanceTraveled>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_DraftActivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_DraftActivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_DraftActivated">();
	}
	static class UDelMarObjectiveProcessor_DraftActivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_DraftActivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_DriftBoostActivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_DriftBoostActivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_DriftBoostActivated">();
	}
	static class UDelMarObjectiveProcessor_DriftBoostActivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_DriftBoostActivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_DriftBoostDeactivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_DriftBoostDeactivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_DriftBoostDeactivated">();
	}
	static class UDelMarObjectiveProcessor_DriftBoostDeactivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_DriftBoostDeactivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_DriftComplete
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_DriftComplete final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_DriftComplete">();
	}
	static class UDelMarObjectiveProcessor_DriftComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_DriftComplete>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_HighestSpeedUpdated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_HighestSpeedUpdated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_HighestSpeedUpdated">();
	}
	static class UDelMarObjectiveProcessor_HighestSpeedUpdated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_HighestSpeedUpdated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_InitialTurboActivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_InitialTurboActivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_InitialTurboActivated">();
	}
	static class UDelMarObjectiveProcessor_InitialTurboActivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_InitialTurboActivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_Kickflipped
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_Kickflipped final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_Kickflipped">();
	}
	static class UDelMarObjectiveProcessor_Kickflipped* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_Kickflipped>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_LapComplete
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_LapComplete final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_LapComplete">();
	}
	static class UDelMarObjectiveProcessor_LapComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_LapComplete>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_PlacementUpdated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_PlacementUpdated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_PlacementUpdated">();
	}
	static class UDelMarObjectiveProcessor_PlacementUpdated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_PlacementUpdated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_PlayedDelMarExperience
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_PlayedDelMarExperience final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_PlayedDelMarExperience">();
	}
	static class UDelMarObjectiveProcessor_PlayedDelMarExperience* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_PlayedDelMarExperience>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_RaceFinished
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_RaceFinished final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_RaceFinished">();
	}
	static class UDelMarObjectiveProcessor_RaceFinished* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_RaceFinished>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_RankAchieved
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_RankAchieved final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_RankAchieved">();
	}
	static class UDelMarObjectiveProcessor_RankAchieved* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_RankAchieved>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_RunComplete
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_RunComplete final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_RunComplete">();
	}
	static class UDelMarObjectiveProcessor_RunComplete* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_RunComplete>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_RunCompleteTest
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_RunCompleteTest final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_RunCompleteTest">();
	}
	static class UDelMarObjectiveProcessor_RunCompleteTest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_RunCompleteTest>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_StartlineBoostActivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_StartlineBoostActivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_StartlineBoostActivated">();
	}
	static class UDelMarObjectiveProcessor_StartlineBoostActivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_StartlineBoostActivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_UnderthrustDeactivated
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_UnderthrustDeactivated final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_UnderthrustDeactivated">();
	}
	static class UDelMarObjectiveProcessor_UnderthrustDeactivated* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_UnderthrustDeactivated>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_UnderthrustPercentUsed
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_UnderthrustPercentUsed final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_UnderthrustPercentUsed">();
	}
	static class UDelMarObjectiveProcessor_UnderthrustPercentUsed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_UnderthrustPercentUsed>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_VehicleJumped
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_VehicleJumped final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_VehicleJumped">();
	}
	static class UDelMarObjectiveProcessor_VehicleJumped* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_VehicleJumped>();
	}
};

// Class DelMarCore.DelMarObjectiveProcessor_VehicleLanded
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarObjectiveProcessor_VehicleLanded final : public UDelMarObjectiveProcessorBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarObjectiveProcessor_VehicleLanded">();
	}
	static class UDelMarObjectiveProcessor_VehicleLanded* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarObjectiveProcessor_VehicleLanded>();
	}
};

// Class DelMarCore.DelMarPhysicsRateDevice
// 0x0050 (0x0C30 - 0x0BE0)
class ADelMarPhysicsRateDevice final : public AFortCreativeDeviceProp
{
public:
	uint8                                         Pad_BE0[0x50];                                     // 0x0BE0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetPhysicsRate(EDelMarPhysicsRate PhysicsRate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPhysicsRateDevice">();
	}
	static class ADelMarPhysicsRateDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarPhysicsRateDevice>();
	}
};

// Class DelMarCore.DelMarPhysMatAttribute_SoundTag
// 0x0008 (0x0030 - 0x0028)
class UDelMarPhysMatAttribute_SoundTag final : public UDelMarPhysMatAttribute
{
public:
	class FName                                   SoundTag;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Priority;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPhysMatAttribute_SoundTag">();
	}
	static class UDelMarPhysMatAttribute_SoundTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPhysMatAttribute_SoundTag>();
	}
};

// Class DelMarCore.DelMarPhysMatAttribute_Terrain
// 0x0020 (0x0048 - 0x0028)
class UDelMarPhysMatAttribute_Terrain final : public UDelMarPhysMatAttribute
{
public:
	struct FDelMarTerrainData                     TerrainData;                                       // 0x0028(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDriveableSurface;                                 // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPhysMatAttribute_Terrain">();
	}
	static class UDelMarPhysMatAttribute_Terrain* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPhysMatAttribute_Terrain>();
	}
};

// Class DelMarCore.DelMarPlayerStateComponent
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarPlayerStateComponent : public UPlayerStateComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerStateComponent">();
	}
	static class UDelMarPlayerStateComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerStateComponent>();
	}
};

// Class DelMarCore.DelMarPlayerActiveRaceManagerComponent
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarPlayerActiveRaceManagerComponent final : public UDelMarPlayerStateComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarRaceManager*                     ActiveRaceManager;                                 // 0x00B8(0x0008)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnRep_ActiveRaceManager(class ADelMarRaceManager* PreviousRaceManager);
	void SetActiveRaceManager(class ADelMarRaceManager* RaceManager);

	class ADelMarRaceManager* GetActiveRaceManager() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerActiveRaceManagerComponent">();
	}
	static class UDelMarPlayerActiveRaceManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerActiveRaceManagerComponent>();
	}
};

// Class DelMarCore.DelMarPlayerAnalyticsComponent
// 0x00E0 (0x0180 - 0x00A0)
class UDelMarPlayerAnalyticsComponent final : public UDelMarPlayerStateComponent
{
public:
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   CachedPlayerController;                            // 0x00A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x00B0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPlayerRaceDataComponent> CachedPlayerRaceData;                       // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarRaceInfoComponent> CachedRaceInfo;                                   // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> CachedPositionalTracker;                 // 0x00C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelmarCompetitiveMatchmakeRatingComponent> MatchmakeRatingComponent;       // 0x00D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDelMarAnalyticsPlayerRaceData         CurrentRaceData;                                   // 0x00D8(0x0040)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDelMarAnalyticsPlayerRaceData         CurrentRunData;                                    // 0x0118(0x0040)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_158[0x28];                                     // 0x0158(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleDraftActivated();
	void HandleDriftBoostDeactivated();
	void HandleDriftKickActivated(float DriftDirection, EDelMarVehicleDriftState DriftState);
	void HandleKickflipActivated(bool bLeft);
	void HandlePlayerResetRun(class AFortPlayerState* PlayerState);
	void HandlePotentialDriftBoostChanged(float Percent);
	void HandleRaceFinished();
	void HandleRaceStarted();
	void HandleTurboBonusZoneChanged(EDelMarTurboZoneState BonusZoneState);
	void HandleTurboChargeUsed();
	void HandleUnderthrustActivated();
	void HandleUnderthrustDeactivated();
	void HandleUnderthrustPercentChanged(float PercentageUnderthrustRemaining);
	void HandleVehicleDemolished(const struct FGameplayTag& CausedByTag);
	void HandleVehicleHitHazard();
	void HandleWorldBonusSpeedStackGained(const struct FGameplayTag& Source, int32 Stacks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerAnalyticsComponent">();
	}
	static class UDelMarPlayerAnalyticsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerAnalyticsComponent>();
	}
};

// Class DelMarCore.DelMarPlayerRaceDataComponent
// 0x0188 (0x0228 - 0x00A0)
class UDelMarPlayerRaceDataComponent : public UDelMarPlayerStateComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   VisitedCheckpoints;                                // 0x00B8(0x0050)(Transient, NativeAccessSpecifierPublic)
	TSet<class ADelMarCheckpoint*>                VisitedCheckpoints_ParallelPath;                   // 0x0108(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	double                                        RunStartTime;                                      // 0x0158(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RunFinishTime;                                     // 0x0160(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CheckpointStartTime;                               // 0x0168(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LapStartTime;                                      // 0x0170(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToFinishLine;                              // 0x0178(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LapDistance;                                       // 0x017C(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PrimaryTrackDistance;                              // 0x0180(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LapsCompleted;                                     // 0x0184(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasStartedFirstLap;                               // 0x0188(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFinishedRace;                                     // 0x0189(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   ViewingSpectators;                                 // 0x0190(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class ADelMarCheckpoint*                      MostRecentlyVisitedCheckpoint;                     // 0x01A0(0x0008)(Net, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarCheckpointManagerComponent> CachedCheckpointManager;                 // 0x01A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x01B0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x01B8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> CachedPositionalTracker;                 // 0x01C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackPositionComponent> CachedLapTracker;                            // 0x01C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class ADelMarCheckpoint*>                CheckpointsVisitedThisLap;                         // 0x01D0(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	int32                                         TimeTrialSectionIndex;                             // 0x0220(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CheckPointIndex;                                   // 0x0224(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	int32 GetNumViewingSpectator();
	TArray<class APlayerState*> GetViewingSpectators();
	void NetMulticast_CheckpointPassed_ParallelPath(const struct FDelMarEvent_CheckpointPassed_ParallelPath& CheckpointEvent);
	void NetMulticast_CheckpointPassedOutOfOrder_ParallelPath(const struct FDelMarEvent_CheckpointPassedOutOfOrder_ParallelPath& InCheckpointPassedOutOfOrderEvent);
	void NetMulticast_LapCompleted(const struct FDelMarEvent_LapComplete& InLapEvent);
	void NetMulticast_RaceCompleted(double RunTime, const bool bValidRun);
	void NetMulticast_SectionCompleted_ParallelPath(const struct FDelMarEvent_SectionComplete_ParallelPath& InSectionEvent);
	void NetMulticast_TeleportEntered(const struct FDelMarEvent_TeleportEnteredEvent& InCheckpointTeleportingEvent);
	void OnRep_ViewingSpectators();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerRaceDataComponent">();
	}
	static class UDelMarPlayerRaceDataComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerRaceDataComponent>();
	}
};

// Class DelMarCore.DelMarPlayerChallengeRaceDataComponent
// 0x0000 (0x0228 - 0x0228)
class UDelMarPlayerChallengeRaceDataComponent final : public UDelMarPlayerRaceDataComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerChallengeRaceDataComponent">();
	}
	static class UDelMarPlayerChallengeRaceDataComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerChallengeRaceDataComponent>();
	}
};

// Class DelMarCore.DelMarPlayerIdleComponent
// 0x0030 (0x00D0 - 0x00A0)
class UDelMarPlayerIdleComponent final : public UDelMarPlayerStateComponent
{
public:
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x00A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x20];                                      // 0x00B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerDisconnected(class AFortPlayerStateAthena* PlayerState, bool bIsDisconnected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerIdleComponent">();
	}
	static class UDelMarPlayerIdleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerIdleComponent>();
	}
};

// Class DelMarCore.DelMarPlayerQuestDistanceTraveledComponent
// 0x0050 (0x00F0 - 0x00A0)
class UDelMarPlayerQuestDistanceTraveledComponent final : public UDelMarPlayerStateComponent
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        CachedPlayerState;                                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                           DistanceTraveledTimer;                             // 0x00B8(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x28];                                      // 0x00C0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UDelMarObjectiveProcessor_DistanceTraveled> DistanceTravelledObjectiveProcessor; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleVehicleDemolished(const struct FGameplayTag& CausedByTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerQuestDistanceTraveledComponent">();
	}
	static class UDelMarPlayerQuestDistanceTraveledComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerQuestDistanceTraveledComponent>();
	}
};

// Class DelMarCore.DelMarPlayerQuestMatchInfoComponent
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarPlayerQuestMatchInfoComponent final : public UDelMarPlayerStateComponent
{
public:
	uint8                                         Pad_A0[0x4];                                       // 0x00A0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        CachedPlayerState;                                 // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleRaceStarted();
	void HandleVehicleDemolished(const struct FGameplayTag& CausedByTag);
	void HandleVehicleHitHazard();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerQuestMatchInfoComponent">();
	}
	static class UDelMarPlayerQuestMatchInfoComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerQuestMatchInfoComponent>();
	}
};

// Class DelMarCore.DelMarPlayerStart
// 0x0010 (0x0310 - 0x0300)
class ADelMarPlayerStart final : public AFortPlayerStart
{
public:
	int32                                         StartlinePriority;                                 // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IsClaimedZDistanceCheck;                           // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      DelMarRaceManager;                                 // 0x0308(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerStart">();
	}
	static class ADelMarPlayerStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarPlayerStart>();
	}
};

// Class DelMarCore.DelMarPlayerWrongwayComponent
// 0x0080 (0x0120 - 0x00A0)
class UDelMarPlayerWrongwayComponent final : public UDelMarPlayerStateComponent
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackPositionComponent> CachedTrackPositionComp;                     // 0x00B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPlayerRaceDataComponent> CachedRaceData;                             // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarCheckpointManagerComponent> CachedCheckpointManager;                 // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackManager>     CachedTrackManager;                                // 0x00C8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D0[0x50];                                      // 0x00D0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerWrongwayComponent">();
	}
	static class UDelMarPlayerWrongwayComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerWrongwayComponent>();
	}
};

// Class DelMarCore.DelMarPlayspaceComponent_ServerExpiration
// 0x0000 (0x01B8 - 0x01B8)
class UDelMarPlayspaceComponent_ServerExpiration final : public UPlayspaceComponent_ServerExpiration
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayspaceComponent_ServerExpiration">();
	}
	static class UDelMarPlayspaceComponent_ServerExpiration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayspaceComponent_ServerExpiration>();
	}
};

// Class DelMarCore.DelMarProxyGhostVisualComponent
// 0x0068 (0x0108 - 0x00A0)
class UDelMarProxyGhostVisualComponent final : public UDelMarPlayerStateComponent
{
public:
	TWeakObjectPtr<class AFortAthenaVehicle>      CachedVehicle;                                     // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UVehicleCosmeticsAssembledMeshUserComponent> CachedVCAMUC;                  // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     ProxyGhostMaterial;                                // 0x00B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FDelMarProxyMeshMaterialInfo> VehicleMaterialInfoMap;           // 0x00B8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)

public:
	void HandlePartCustomizationUpdated(const int32 MeshPartIndex);
	void HandleVehicleCosmeticsFinished();
	void HandleViewTargetChanged(class AFortPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarProxyGhostVisualComponent">();
	}
	static class UDelMarProxyGhostVisualComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarProxyGhostVisualComponent>();
	}
};

// Class DelMarCore.DelMarRaceInfoComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDelMarRaceInfoComponent final : public UDelMarRaceManagerComponent
{
public:
	class FString                                 RaceGUID;                                          // 0x00A0(0x0010)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleRaceStarted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceInfoComponent">();
	}
	static class UDelMarRaceInfoComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceInfoComponent>();
	}
};

// Class DelMarCore.DelMarRaceLevelConfig
// 0x0090 (0x0C70 - 0x0BE0)
class ADelMarRaceLevelConfig final : public AFortCreativeDeviceProp
{
public:
	EDelMarRaceMode                               RaceMode;                                          // 0x0BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BE1[0x3];                                      // 0x0BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultNumRequiredLaps;                            // 0x0BE4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZKillOffsetDistanceFromLowestSplinePoint;          // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldRunAsADelMarExperience;                     // 0x0BEC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BED[0x3];                                      // 0x0BED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MatchTimeLimitSeconds;                             // 0x0BF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OvertimeSeconds;                                   // 0x0BF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideTurboChargeRegenRateSeconds;              // 0x0BF8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BF9[0x3];                                      // 0x0BF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurboChargeRegenRateSeconds;                       // 0x0BFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideTurboRaceStartCharges;                    // 0x0C00(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurboRaceStartCharges;                             // 0x0C04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideTurboLapCompleteCharges;                  // 0x0C08(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C09[0x3];                                      // 0x0C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurboLapCompleteCharges;                           // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EDelMarRaceMode, TSubclassOf<class ADelMarRaceManager>> RaceManagerClassMap;                // 0x0C10(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FDelMarRaceCVar>                RaceCVars;                                         // 0x0C60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	class ADelMarRaceManager* SpawnRaceManager(bool bFireInitializationEvent);

	TSubclassOf<class ADelMarRaceManager> GetRaceManagerClass() const;
	struct FGameplayTag GetRaceModeTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceLevelConfig">();
	}
	static class ADelMarRaceLevelConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarRaceLevelConfig>();
	}
};

// Class DelMarCore.DelMarRaceManagerVerbComponent
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarRaceManagerVerbComponent final : public UDelMarRaceManagerComponent
{
public:
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> PositionalTracker;                       // 0x00A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerState*>               PrevRacePositions;                                 // 0x00B0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

public:
	void HandleCountdownStarted();
	void HandleFinalRacePositionsChanged(const TArray<struct FDelMarFinalRacePositionEntry>& FinalRacePositions, const struct FDelMarEvent_RunRecorded& RecordedRun);
	void HandlePlayerLapCompleted(const struct FDelMarEvent_LapComplete& LapCompleteEvent);
	void HandlePlayerPositionsChanged(const TArray<class AFortPlayerState*>& RacePositions);
	void HandleRaceFinished();
	void HandleRaceStarted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceManagerVerbComponent">();
	}
	static class UDelMarRaceManagerVerbComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceManagerVerbComponent>();
	}
};

// Class DelMarCore.DelMarRaceMusicPlaylist
// 0x0010 (0x0040 - 0x0030)
class UDelMarRaceMusicPlaylist final : public UPrimaryDataAsset
{
public:
	TArray<struct FDelMarMusicTrack>              Tracks;                                            // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceMusicPlaylist">();
	}
	static class UDelMarRaceMusicPlaylist* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceMusicPlaylist>();
	}
};

// Class DelMarCore.DelMarRaceMusicPlaylistComponent
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarRaceMusicPlaylistComponent final : public UActorComponent
{
public:
	void SetMusicPlaylist(class UDelMarRaceMusicPlaylist* SetPlaylist, bool bEnableMusic);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceMusicPlaylistComponent">();
	}
	static class UDelMarRaceMusicPlaylistComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceMusicPlaylistComponent>();
	}
};

// Class DelMarCore.DelMarRacerState_Spectator
// 0x0000 (0x0030 - 0x0030)
class UDelMarRacerState_Spectator final : public UDelMarRacerState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRacerState_Spectator">();
	}
	static class UDelMarRacerState_Spectator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRacerState_Spectator>();
	}
};

// Class DelMarCore.DelMarRacerState_Countdown
// 0x0008 (0x0038 - 0x0030)
class UDelMarRacerState_Countdown final : public UDelMarRacerState
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          Vehicle;                                           // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRacerState_Countdown">();
	}
	static class UDelMarRacerState_Countdown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRacerState_Countdown>();
	}
};

// Class DelMarCore.DelMarRacerState_RunFinished
// 0x0008 (0x0038 - 0x0030)
class UDelMarRacerState_RunFinished final : public UDelMarRacerState_WithSpectatorTransitionBase
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          Vehicle;                                           // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRacerState_RunFinished">();
	}
	static class UDelMarRacerState_RunFinished* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRacerState_RunFinished>();
	}
};

// Class DelMarCore.DelMarSpeedUpDevice
// 0x0020 (0x0C00 - 0x0BE0)
class ADelMarSpeedUpDevice final : public AFortCreativeDeviceProp
{
public:
	float                                         SpeedAmount;                                       // 0x0BE0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedEffectDuration;                               // 0x0BE4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDotProductAngleValue;                           // 0x0BE8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           SpeedSourceTag;                                    // 0x0BEC(0x0004)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyForce;                                       // 0x0BF0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BF1[0x3];                                      // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GroupId;                                           // 0x0BF4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   Collider;                                          // 0x0BF8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void BP_HandleSpeedEffectGranted();
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool ShouldGrantSpeedEffect(class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarSpeedUpDevice">();
	}
	static class ADelMarSpeedUpDevice* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarSpeedUpDevice>();
	}
};

// Class DelMarCore.DelMarSplineActorMovementComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDelMarSplineActorMovementComponent final : public UActorComponent
{
public:
	TWeakObjectPtr<class USplineComponent>        MovementSpline;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MovementSpeed;                                     // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarSplineActorMovementComponent">();
	}
	static class UDelMarSplineActorMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarSplineActorMovementComponent>();
	}
};

// Class DelMarCore.DelMarStartLineActor
// 0x0008 (0x0298 - 0x0290)
class ADelMarStartLineActor final : public AActor
{
public:
	class ADelMarCheckpoint*                      Checkpoint;                                        // 0x0290(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarStartLineActor">();
	}
	static class ADelMarStartLineActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarStartLineActor>();
	}
};

// Class DelMarCore.DelMarTutorialConfigComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDelMarTutorialConfigComponent final : public UActorComponent
{
public:
	TArray<struct FDelMarTutorialSection>         Sections;                                          // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTutorialConfigComponent">();
	}
	static class UDelMarTutorialConfigComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTutorialConfigComponent>();
	}
};

// Class DelMarCore.DelMarTutorialInteractableSpline
// 0x0060 (0x02F0 - 0x0290)
class ADelMarTutorialInteractableSpline final : public AActor
{
public:
	bool                                          bMustTriggerInOrder;                               // 0x0290(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ChildActorScaleMultiplier;                         // 0x0298(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarSplineGenerationMode                   SplineGenerationMode;                              // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChildActorCount;                                   // 0x02B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSplineRotationForActors;                       // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDebugNumbers;                                 // 0x02B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DebugTextZOffset;                                  // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DebugTextSize;                                     // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              DebugTextMaterial;                                 // 0x02C8(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                       SplineComponent;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ADelMarTutorialTriggerActor> ChildActorClass;                                  // 0x02D8(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UChildActorComponent*>           ChildActorComponents;                              // 0x02E0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void BP_HandleAllSplineTriggersCompleted(class AActor* FinalCompletedTrigger);
	void HandleColliderOverlap(class ADelMarTutorialTriggerActor* InTrigger);
	void ResetTriggers();

	bool GetHaveAllTriggersCompleted() const;
	int32 GetTriggerIndex(class ADelMarTutorialTriggerActor* InTrigger) const;
	float GetTriggerIndexAsRatio(class ADelMarTutorialTriggerActor* InTrigger) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTutorialInteractableSpline">();
	}
	static class ADelMarTutorialInteractableSpline* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarTutorialInteractableSpline>();
	}
};

// Class DelMarCore.DelMarTutorialRaceManager
// 0x0018 (0x04C0 - 0x04A8)
class ADelMarTutorialRaceManager final : public ADelMarRaceManager
{
public:
	struct FDelMarVehicleAbilityConfig            InitialVehicleAbilityConfig;                       // 0x04A8(0x0011)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTutorialRaceManager">();
	}
	static class ADelMarTutorialRaceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarTutorialRaceManager>();
	}
};

// Class DelMarCore.DelMarTutorialTriggerActor
// 0x0028 (0x02B8 - 0x0290)
class ADelMarTutorialTriggerActor final : public AActor
{
public:
	uint8                                         Pad_290[0x8];                                      // 0x0290(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          BoxCollider;                                       // 0x0298(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A0[0x18];                                     // 0x02A0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool BP_CanTriggerActor(class AActor* OtherActor);
	void BP_HandleColliderReset();
	void BP_HandleColliderTriggered();
	bool CanTriggerActor(class AActor* OtherActor);
	void HandleColliderOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ResetTrigger();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTutorialTriggerActor">();
	}
	static class ADelMarTutorialTriggerActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarTutorialTriggerActor>();
	}
};

// Class DelMarCore.DelMarUIInputControllerComponent
// 0x00A0 (0x0140 - 0x00A0)
class UDelMarUIInputControllerComponent final : public UControllerComponent
{
public:
	uint8                                         Pad_A0[0x68];                                      // 0x00A0(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           HudWidgetExpandAction;                             // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                           ToggleQuestListAction;                             // 0x0110(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDelMarPlayerInputManagerComponent> InputManagerClass;                         // 0x0118(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UEnhancedInputComponent> InputComponent;                                    // 0x0120(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        PlayerState;                                       // 0x0128(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   PlayerController;                                  // 0x0130(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPlayerPreferencesComponent> PlayerPreferences;                       // 0x0138(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleHudWidgetExpandCompleted();
	void HandleHudWidgetExpandTriggered();
	void HandleToggleQuestList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarUIInputControllerComponent">();
	}
	static class UDelMarUIInputControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarUIInputControllerComponent>();
	}
};

// Class DelMarCore.DelMarVehicleAction
// 0x0018 (0x0040 - 0x0028)
class UDelMarVehicleAction : public UObject
{
public:
	TMulticastInlineDelegate<void()>              OnActionPerformed;                                 // 0x0028(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction">();
	}
	static class UDelMarVehicleAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction>();
	}
};

// Class DelMarCore.DelMarVehicleAction_Jump
// 0x0000 (0x0040 - 0x0040)
class UDelMarVehicleAction_Jump final : public UDelMarVehicleAction
{
public:
	void HandleJump();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction_Jump">();
	}
	static class UDelMarVehicleAction_Jump* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction_Jump>();
	}
};

// Class DelMarCore.DelMarVehicleAction_Drift
// 0x0000 (0x0040 - 0x0040)
class UDelMarVehicleAction_Drift final : public UDelMarVehicleAction
{
public:
	void HandleDrift(float DriftDirection, EDelMarVehicleDriftState DriftState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction_Drift">();
	}
	static class UDelMarVehicleAction_Drift* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction_Drift>();
	}
};

// Class DelMarCore.DelMarVehicleAction_HazardHit
// 0x0000 (0x0040 - 0x0040)
class UDelMarVehicleAction_HazardHit final : public UDelMarVehicleAction
{
public:
	void HandleHazardHit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction_HazardHit">();
	}
	static class UDelMarVehicleAction_HazardHit* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction_HazardHit>();
	}
};

// Class DelMarCore.DelMarVehicleAction_KickFlip
// 0x0000 (0x0040 - 0x0040)
class UDelMarVehicleAction_KickFlip final : public UDelMarVehicleAction
{
public:
	void HandleKickflip(bool bLeftSide);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction_KickFlip">();
	}
	static class UDelMarVehicleAction_KickFlip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction_KickFlip>();
	}
};

// Class DelMarCore.DelMarVehicleAction_Turbo
// 0x0000 (0x0040 - 0x0040)
class UDelMarVehicleAction_Turbo final : public UDelMarVehicleAction
{
public:
	void HandleTurbo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction_Turbo">();
	}
	static class UDelMarVehicleAction_Turbo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction_Turbo>();
	}
};

// Class DelMarCore.DelMarVehicleAction_Underthrust
// 0x0000 (0x0040 - 0x0040)
class UDelMarVehicleAction_Underthrust final : public UDelMarVehicleAction
{
public:
	void HandleUnderthrust();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAction_Underthrust">();
	}
	static class UDelMarVehicleAction_Underthrust* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAction_Underthrust>();
	}
};

// Class DelMarCore.DelMarVehicleAutoInputComponent
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarVehicleAutoInputComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleAutoInputComponent">();
	}
	static class UDelMarVehicleAutoInputComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleAutoInputComponent>();
	}
};

// Class DelMarCore.DelMarVehicleBodySetup
// 0x0050 (0x0080 - 0x0030)
class UDelMarVehicleBodySetup final : public UDataAsset
{
public:
	struct FDelMarVehicleAxleConfig               FrontAxle;                                         // 0x0030(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleAxleConfig               BackAxle;                                          // 0x0058(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleBodySetup">();
	}
	static class UDelMarVehicleBodySetup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleBodySetup>();
	}
};

// Class DelMarCore.DelMarVehicleBodySetupMap
// 0x00A0 (0x00D0 - 0x0030)
class UDelMarVehicleBodySetupMap final : public UDataAsset
{
public:
	TMap<class FName, class UDelMarVehicleBodySetup*> BodySetupNameMap;                              // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UDelMarVehicleBodySetup*> BodySetupArchetypeMap;                 // 0x0080(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleBodySetupMap">();
	}
	static class UDelMarVehicleBodySetupMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleBodySetupMap>();
	}
};

// Class DelMarCore.DelMarVehicleCameraMode_V2
// 0x3300 (0x3360 - 0x0060)
class alignas(0x10) UDelMarVehicleCameraMode_V2 final : public UFortCameraMode
{
public:
	TSubclassOf<class UDelMarCameraInputControllerComponent> CameraInputControllerComponentClass;    // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FDelMarDefaultCameraValues> VehicleArchetypeDefaults;           // 0x0068(0x0050)(Edit, NativeAccessSpecifierPublic)
	float                                         DefaultInterpLambda;                               // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOV;                                               // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalFOVInterpLambda;                              // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            TotalFOVClamp;                                     // 0x00C4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalDistanceInterpLambda;                         // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            TotalDistanceClamp;                                // 0x00DC(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x00EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalHeightInterpLambda;                           // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeightOffsetInterpLambda;                          // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            TotalHeightClamp;                                  // 0x00F8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleToOriginDegrees;                              // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleToOriginInterpLambda;                         // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            TotalAngleToOriginClamp;                           // 0x0110(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwivelInterpLambda;                                // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwivelPitchMax;                                    // 0x0124(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwivelYawMax;                                      // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundNormalInterpLambda;                          // 0x012C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardInterpLambda;                               // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CarPitchInterpLambda;                              // 0x0134(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AerialCarPitchInterpLambda;                        // 0x0138(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAerialCarPitch;                                 // 0x013C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchRotationAxisInterpLambda;                     // 0x0140(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalDriftDegreeThreshold;                      // 0x0144(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDegreesVehicleWorldUpThreshold;                 // 0x0148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarScaledCurve                     MaxUpRotationPerSecondCurve;                       // 0x0150(0x0090)(Edit, NativeAccessSpecifierPublic)
	float                                         MaxUpRotationPerSecondStatic;                      // 0x01E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WorldUpInterpRate;                                 // 0x01E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreventPenetration;                               // 0x01E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoPredictiveAvoidance;                            // 0x01E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CollisionPushOutDistance;                          // 0x01EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PenetrationBlendOutTime;                           // 0x01F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PenetrationBlendInTime;                            // 0x01F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             PenetrationTraceChannel;                           // 0x01F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPenetrationAvoidanceFeeler>    PenetrationAvoidanceFeelers;                       // 0x0200(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     ForwardAirInterpLambdaCurve;                       // 0x0210(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     ForwardAirBlendCurve;                              // 0x02A0(0x0088)(Edit, NativeAccessSpecifierPublic)
	float                                         MinForwardSpeedForAerialBlend;                     // 0x0328(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinTimeInAirBeforeUsingVehicleUp;                  // 0x032C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     GroundNormalAirInterpLambdaCurve;                  // 0x0330(0x0090)(Edit, NativeAccessSpecifierPublic)
	float                                         AirFreestyleDeactivationExtendedSeconds;           // 0x03C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AirFreestyleDeactivationLambdaSeconds;             // 0x03C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AirFreestyleDeactivationForwardLambda;             // 0x03C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AirFreestyleDeactivationNormalLambda;              // 0x03CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DriftForwardBlendCurve;                            // 0x03D0(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AerialDriftForwardBlendCurve;                      // 0x0458(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DriftForwardInterpLambdaCurve;                     // 0x04E0(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     DriftOriginOffsetCurve;                            // 0x0568(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     DriftOriginOffsetInterpLambdaCurve;                // 0x05F0(0x0090)(Edit, NativeAccessSpecifierPublic)
	float                                         DriftOriginOffsetInactiveLambda;                   // 0x0680(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarCameraFloatBlendedProperty      DriftKickOffsetDistance;                           // 0x0688(0x01D0)(Edit, NativeAccessSpecifierPublic)
	float                                         DriftKickOffsetLambda;                             // 0x0858(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DriftKickOffsetInactiveLambda;                     // 0x085C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeactivateKickOffsetOnKickEnd;                    // 0x0860(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     DriftRollDegreesCurve;                             // 0x0868(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     DriftRollDegreesInterpLambdaCurve;                 // 0x08F0(0x0090)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     DriftScalarCurveCurve;                             // 0x0980(0x0090)(Edit, NativeAccessSpecifierPublic)
	float                                         GroundMaxPitchForNormalBlend;                      // 0x0A10(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundExtraPitchForNormalBlend;                    // 0x0A14(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             StableSpeedDistance;                               // 0x0A18(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             StableSpeedFOV;                                    // 0x0AC8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             StableSpeedHeight;                                 // 0x0B78(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             StableSpeedAngleToOrigin;                          // 0x0C28(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             AccelerationDistance;                              // 0x0CD8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             AccelerationFOV;                                   // 0x0D88(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             AccelerationHeight;                                // 0x0E38(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             AccelerationAngleToOrigin;                         // 0x0EE8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseSpeedDistance;                                 // 0x0F98(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseSpeedFOV;                                      // 0x1048(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseSpeedHeight;                                   // 0x10F8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseSpeedAngleToOrigin;                            // 0x11A8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseAccelerationDistance;                          // 0x1258(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseAccelerationFOV;                               // 0x1308(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseAccelerationHeight;                            // 0x13B8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             BaseAccelerationAngleToOrigin;                     // 0x1468(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      TurboDistance;                                     // 0x1518(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      TurboFOV;                                          // 0x16E8(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      TurboBonusZoneSuccessDistance;                     // 0x18B8(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      TurboBonusZoneSuccessFOV;                          // 0x1A88(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      DriftBonusDistance;                                // 0x1C58(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      DriftBonusFOV;                                     // 0x1E28(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      StartlineDistance;                                 // 0x1FF8(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      StartlineFOV;                                      // 0x21C8(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             DraftDistance;                                     // 0x2398(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             DraftFOV;                                          // 0x2448(0x00B0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      WorldBonusSpeedDistance;                           // 0x24F8(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatBlendedProperty      WorldBonusSpeedFOV;                                // 0x26C8(0x01D0)(Edit, NativeAccessSpecifierPublic)
	struct FDelMarCameraFloatProperty             AerialDivingBonusSpeedDistance;                    // 0x2898(0x00B0)(Edit, NativeAccessSpecifierPublic)
	float                                         NonSkydivingDistanceScalar;                        // 0x2948(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_294C[0x4];                                     // 0x294C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarCameraFloatProperty             AerialDivingBonusSpeedFOV;                         // 0x2950(0x00B0)(Edit, NativeAccessSpecifierPublic)
	float                                         NonSkydivingFOVScalar;                             // 0x2A00(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarVehicle>          VehicleTarget;                                     // 0x2A04(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarCameraInputControllerComponent> CameraInputControllerComponent;      // 0x2A0C(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2A14[0x94C];                                   // 0x2A14(0x094C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAirFreestyleDeactivated();
	void OnAppliedTeleportRotation();
	void OnDriftBonusActivated();
	void OnDriftBonusDeactivated();
	void OnDriftKickActivated(float DriftDirection, EDelMarVehicleDriftState DriftState);
	void OnDriftKickDeactivated();
	void OnStartlineBoostActivated(float StartlineBoostPerc);
	void OnStartlineBoostDeactivated();
	void OnTurboActivated();
	void OnTurboBonusZoneStateChanged(EDelMarTurboZoneState ZoneState);
	void OnTurboDeactivated();
	void OnWorldBonusSpeedStackGained(const struct FGameplayTag& Source, int32 Stacks);
	void OnWorldBonusSpeedStackLost(const struct FGameplayTag& Source, int32 Stacks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleCameraMode_V2">();
	}
	static class UDelMarVehicleCameraMode_V2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleCameraMode_V2>();
	}
};

// Class DelMarCore.DelMarVehicleInterface
// 0x0000 (0x0000 - 0x0000)
class IDelMarVehicleInterface final
{
public:
	bool AnyWheelsOnGround() const;
	bool CanStrafeBeActivated() const;
	float GetAcceleration() const;
	float GetBaseForwardSpeed() const;
	float GetBaseTargetSpeed() const;
	float GetBonusSpeed() const;
	class UDelMarVehicleCosmeticComponent* GetCosmeticComponent() const;
	float GetCurrentNumTurboCharges() const;
	EDelMarTurboZoneState GetCurrentTurboBonusZoneState() const;
	float GetDraftingCurrentBonusSpeedPercentage() const;
	float GetDraftingMaxBonusSpeedPercentage() const;
	EDelmarDraftingState GetDraftingState() const;
	float GetDraftingTargetDegrees() const;
	float GetDriftAngle() const;
	float GetDriftBoostAppliedBonusSpeed() const;
	float GetDriftDuration() const;
	float GetDriftSlipAngleRatio() const;
	float GetForwardSpeed() const;
	int32 GetKickflipActivationCharges() const;
	float GetKickflipDistanceToSuctionSurface() const;
	float GetKickflipDuration() const;
	struct FDelMarVehicleLandingData GetLandingData() const;
	float GetMaxNumTurboCharges() const;
	float GetNormalizedBonusSpeed() const;
	float GetNormalizedForwardSpeed() const;
	float GetOversteerAccumulationPercentage() const;
	float GetPercentageTurboActiveTimeRemaining() const;
	class UPostProcessComponent* GetPostProcessComponent() const;
	float GetPotentialDriftBoostPercentage() const;
	float GetQueuedBonusSpeed() const;
	struct FVector GetReattachmentDirection() const;
	float GetRemainingTurboActiveSeconds() const;
	float GetSideSpeed() const;
	class USkeletalMeshComponent* GetSkeletalMeshComponent() const;
	float GetSpeedometerSpeed() const;
	float GetStableSpeed() const;
	float GetStartlineAppliedBonusSpeed() const;
	float GetStartlineMaxEarnedBonusSpeed() const;
	float GetStartlinePercentageMaxBonusSpeedEarned() const;
	float GetSteering() const;
	float GetSteeringAngle() const;
	float GetStrafeCooldownPercentage() const;
	float GetTargetDriftSide() const;
	float GetTargetSpeed() const;
	float GetThrottle() const;
	float GetTotalTimeSkydiving() const;
	class UDelMarTrackPositionComponent* GetTrackPositionComponent() const;
	float GetTurboAdditionalActiveSeconds() const;
	float GetTurboAppliedBonusSpeed() const;
	float GetTurboBonusZoneBonusSpeed() const;
	float GetUnderthrustActiveDuration() const;
	float GetUnderthrustPercentageTankRemaining() const;
	EDelMarVehicleForwardState GetVehicleForwardState() const;
	struct FVector GetVelocity() const;
	float GetWorldAppliedBonusSpeed() const;
	bool HasValidDraftingTarget() const;
	bool InDriftBoostRange() const;
	bool IsAccelerating() const;
	bool IsAirFreestyling() const;
	bool IsAllVehicleInputDisabled() const;
	bool IsBraking() const;
	bool IsDriftControlled() const;
	bool IsInvulnerabilityActive() const;
	bool IsKickflipSuctionActive() const;
	bool IsKickingWheels() const;
	bool IsLosingAppliedBonusSpeed() const;
	bool IsReattaching() const;
	bool IsSkyDiving() const;
	bool IsStrafeActive() const;
	bool IsStrafeDisabled() const;
	bool IsStrafeLeft() const;
	bool WheelsOnGround() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleInterface">();
	}
	static class IDelMarVehicleInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDelMarVehicleInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class DelMarCore.DelMarVehicleLoadoutSetup
// 0x0050 (0x0080 - 0x0030)
class UDelMarVehicleLoadoutSetup final : public UPrimaryDataAsset
{
public:
	struct FDelMarLoadout                         Loadout;                                           // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleLoadoutSetup">();
	}
	static class UDelMarVehicleLoadoutSetup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleLoadoutSetup>();
	}
};

// Class DelMarCore.DelMarVehicleManager
// 0x0170 (0x01A0 - 0x0030)
class UDelMarVehicleManager final : public UWorldSubsystem
{
public:
	uint8                                         Pad_30[0x170];                                     // 0x0030(0x0170)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_GetAllVehicles(TArray<class ADelMarVehicle*>* OutVehicles);
	void BP_GetVehiclesInRange(const struct FVector& SourcePosition, const float Range, const bool bDo2DCheck, TArray<class ADelMarVehicle*>* OutVehicles);
	void HandlePawnEnteredVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex);
	void HandlePawnExitedVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex);
	void HandlePawnPlayerStateSet(class AFortPlayerPawn* Pawn);
	void HandleViewTargetChanged(class AFortPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleManager">();
	}
	static class UDelMarVehicleManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleManager>();
	}
};

// Class DelMarCore.DelMarVehicle
// 0x1A70 (0x3B20 - 0x20B0)
class ADelMarVehicle final : public AFortAthenaSKVehicle
{
public:
	uint8                                         Pad_20B0[0x50];                                    // 0x20B0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UFortCameraMode>>    DelMarCameraModes;                                 // 0x2100(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bLocalDriverHasReplicatedVehicle;                  // 0x2110(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2111[0xF];                                     // 0x2111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAthenaVehicleInputState           PendingDriverInputState;                           // 0x2120(0x0040)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	ECommonInputType                              CurrentInputType;                                  // 0x2160(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2161[0x3];                                     // 0x2161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToPack;                                    // 0x2164(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceFromTrackFinish;                           // 0x2168(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ATTR_bVehicleThrottleDisabled;                     // 0x216C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_216D[0x3];                                     // 0x216D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarInputAction                     ThrottleAction;                                    // 0x2170(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     BrakeAction;                                       // 0x2180(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     SteerAction;                                       // 0x2190(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     SteerLeftAction;                                   // 0x21A0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     SteerRightAction;                                  // 0x21B0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     PitchAction;                                       // 0x21C0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     PitchUpAction;                                     // 0x21D0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     PitchDownAction;                                   // 0x21E0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     RollAction;                                        // 0x21F0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     YawAction;                                         // 0x2200(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     DriftAction;                                       // 0x2210(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     JumpAction;                                        // 0x2220(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     KickFlipAction;                                    // 0x2230(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     UnderthrustAction;                                 // 0x2240(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     TurboAction;                                       // 0x2250(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     DelMarExitAction;                                  // 0x2260(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     ResetRunAction;                                    // 0x2270(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     AirFreestyleAction;                                // 0x2280(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     StrafeAction;                                      // 0x2290(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     AerialPitchAction;                                 // 0x22A0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     DemolishAction;                                    // 0x22B0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UDelMarPlayerInputManagerComponent> InputManagerClass;                         // 0x22C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22C8[0x18];                                    // 0x22C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IdleVelocityLengthThreshold;                       // 0x22E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x22E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_22EC[0x4];                                     // 0x22EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarVehicleNetworkPhysicsComponent*  NetworkPhysicsComponent;                           // 0x22F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarVehicleCosmeticComponent*        CosmeticComponent;                                 // 0x22F8(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2300[0x8];                                     // 0x2300(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarVehicleMovementSet*              DelMarVehicleMovementSet;                          // 0x2308(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortClientSettingsRecord*              FortSettings;                                      // 0x2310(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDelMarTrackPositionComponent> TrackPositionComponentClass;                    // 0x2318(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarTrackPositionComponent*          TrackPositionComponent;                            // 0x2320(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2328[0x8];                                     // 0x2328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TWeakObjectPtr<class USkeletalMeshComponent>> WheelSkeletalMeshComps;                     // 0x2330(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FDelMarVehicleCachedContact>    CachedContacts;                                    // 0x2340(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         NearbyTrackDistanceThreshold;                      // 0x2350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2354[0x6C];                                    // 0x2354(0x006C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarVehicleConfigOverrides          ConfigOverrides;                                   // 0x23C0(0x0098)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2458[0xC48];                                   // 0x2458(0x0C48)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VisualSteerAngleInterpRate;                        // 0x30A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DriftVisualSteerAngleInterpRate;                   // 0x30A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideVisualSteeringAngle;                      // 0x30A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30A9[0x3];                                     // 0x30A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DrivingVisualSteeringDegrees;                      // 0x30AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDelMarScaledCurve                     DriftSteeringDegreesCurve;                         // 0x30B0(0x0090)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bShowVisualSteerAngleInAir;                        // 0x3140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3141[0x7];                                     // 0x3141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarVehicleBodySetup*                BodySetup;                                         // 0x3148(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3150[0x18];                                    // 0x3150(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UDelMarRaceConfigComponent> ActiveRaceConfig;                               // 0x3168(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTimeManagerComponent> RaceTimeManager;                               // 0x3170(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarGlobalInputDisabler> GlobalInputDisabler;                            // 0x3178(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3180[0x10];                                    // 0x3180(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnVehicleWheelsLeftGround;                         // 0x3190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float UpdatedSpeedometerSpeed)> OnSpeedometerSpeedChanged;         // 0x31A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         MinNoThrottleSpeed;                                // 0x31B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedSlowdownSpeedometerSeconds;                   // 0x31B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   SpeedSlowdownTags;                                 // 0x31B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EDelMarInvertSteerMethod                      InvertSteerMethod;                                 // 0x31C8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPitchInverted;                                    // 0x31C9(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVerticalKickflipInverted;                         // 0x31CA(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAerialPitchActivationEnabled;                     // 0x31CB(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31CC[0x34];                                    // 0x31CC(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBonusSpeedActivated;                             // 0x3200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnBonusSpeedDeactivated;                           // 0x3210(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Value)>   OnBonusSpeedChanged;                               // 0x3220(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bValue)> OnAnyWheelsOnGroundChanged; // 0x3230(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bValue)> OnWheelsOnGroundChanged; // 0x3240(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EDelMarVehicleForwardState NewForwardState)> OnVehicleForwardStateChanged; // 0x3250(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3260[0xC0];                                    // 0x3260(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float ImpactMagnitude, const struct FVector& WorldLocation, float ForwardRotationDegrees)> OnDelMarVehicleHitWall; // 0x3320(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Magnitude, const struct FVector& WorldLocation)> OnDelMarVehicleHitVehicle; // 0x3330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Magnitude, const struct FVector& WorldLocation)> OnDelMarVehicleHitByVehicle; // 0x3340(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float LandingForce, bool bLandedKickflip)> OnVehicleLanded;        // 0x3350(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3360[0x10];                                    // 0x3360(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayTag& Source, int32 Stacks)> OnWorldBonusSpeedStackGained; // 0x3370(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& Source, int32 Stacks)> OnWorldBonusSpeedStackLost; // 0x3380(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3390[0x70];                                    // 0x3390(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnVehicleStartedSkydiving;                         // 0x3400(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnVehicleStoppedSkydiving;                         // 0x3410(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3420[0x10];                                    // 0x3420(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnDriftActivated;                                  // 0x3430(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDriftDeactivated;                                // 0x3440(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float DriftSlipAngleRatio)> OnDriftSlipAngleRatioChanged;          // 0x3450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float DriftDirection, EDelMarVehicleDriftState DriftState)> OnDriftKickActivated; // 0x3460(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDriftKickDeactivated;                            // 0x3470(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsDriftingControlled)> OnDriftControlChanged;                // 0x3480(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float duration)> OnDriftDurationChanged;                           // 0x3490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A0[0x50];                                    // 0x34A0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnEnteredDriftBoostRange;                          // 0x34F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnExitedDriftBoostRange;                           // 0x3500(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStartedLosingAppliedDriftBoost;                  // 0x3510(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDriftBoostActivated;                             // 0x3520(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDriftBoostDeactivated;                           // 0x3530(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMaxPotentialReached;                             // 0x3540(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnMaxPotentialLost;                                // 0x3550(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAllPotentialLost;                                // 0x3560(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float PercentageBoost)> OnEarnedDriftBoost;                        // 0x3570(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float PercentageBoost)> OnPotentialDriftBoostChanged;              // 0x3580(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3590[0x38];                                    // 0x3590(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnDraftActivated;                                  // 0x35C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnDraftDeactivated;                                // 0x35D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EDelmarDraftingState CurrentState)> OnDraftStateChanged;           // 0x35E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnReachedMaxBonusSpeed;                            // 0x35F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3608[0x34];                                    // 0x3608(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarRubberbandingConfig             RubberbandingConfig;                               // 0x363C(0x0028)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3664[0x34];                                    // 0x3664(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float PercentageMaxBonusSpeedEarned)> OnStartlineBoostActivated;   // 0x3698(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStartlineBoostDeactivated;                       // 0x36A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStartlineBoostFailed;                            // 0x36B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDelMarStartlineBoostData              StartlineBoostData;                                // 0x36C8(0x0014)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_36DC[0x1C];                                    // 0x36DC(0x001C)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bLeftSide)> OnStrafeActivated;                                // 0x36F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnStrafeDeactivated;                               // 0x3708(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Value)>   OnStrafeCooldownChanged;                           // 0x3718(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bValue)>   OnStrafeUsabilityChanged;                          // 0x3728(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bValue)>   OnStrafeDisabledChanged;                           // 0x3738(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3748[0x20];                                    // 0x3748(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnTurboActivated;                                  // 0x3768(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTurboDeactivated;                                // 0x3778(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTurboChargesUpdated;                             // 0x3788(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EDelMarTurboZoneState ZoneState)> OnTurboBonusZoneStateChanged;    // 0x3798(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnTurboChargeUsed;                                 // 0x37A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         TurboCharges;                                      // 0x37B8(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_37BC[0x44];                                    // 0x37BC(0x0044)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bLeftSide)> OnKickflipActivated;                              // 0x3800(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnKickflipDeactivated;                             // 0x3810(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnKickflipSuctionActivated;                        // 0x3820(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnKickflipSuctionDeactivated;                      // 0x3830(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float duration)> OnKickflipDistanceToSuctionSurfaceChanged;        // 0x3840(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float duration)> OnKickflipDurationChanged;                        // 0x3850(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 Value)>   OnKickflipActivationChargesChanged;                // 0x3860(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3870[0x88];                                    // 0x3870(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnReattachmentActivated;                           // 0x38F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnReattachmentDeactivated;                         // 0x3908(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                                ForcedReattachmentDirection;                       // 0x3918(0x0018)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3930[0x28];                                    // 0x3930(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnUnderthrustActivated;                            // 0x3958(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnUnderthrustDeactivated;                          // 0x3968(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float PercentageUnderthrustRemaining)> OnUnderthrustPercentChanged; // 0x3978(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnUnderthrustExhausted;                            // 0x3988(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3998[0x18];                                    // 0x3998(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnJumpActivated;                                   // 0x39B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnJumpDeactivated;                                 // 0x39C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_39D0[0x8];                                     // 0x39D0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DemolitionRespawnSeconds;                          // 0x39D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39DC[0x4];                                     // 0x39DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FGameplayTag& CausedByTag)> OnVehicleDemolished;      // 0x39E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(float Value)>   OnDemolishPressDurationUpdated;                    // 0x39F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A00[0x18];                                    // 0x3A00(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnHazardHit;                                       // 0x3A18(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnInvulnerabilityActivated;                        // 0x3A28(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnInvulnerabilityDeactivated;                      // 0x3A38(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A48[0x4];                                     // 0x3A48(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpawnBroadcastSeconds;                          // 0x3A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarVehicleSpawnInfo                SpawnInfo;                                         // 0x3A50(0x0010)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bFirstCar, bool bPrevCarDemolished)> OnDelMarVehicleSpawned;  // 0x3A60(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bAllowExitingVehicle;                              // 0x3A70(0x0001)(Edit, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A71[0x7];                                     // 0x3A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnVehicleTeleportEntered;                          // 0x3A78(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnVehicleTeleportExit;                             // 0x3A88(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnVehicleAppliedTeleportRotation;                  // 0x3A98(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnVehicleAppliedTeleportLocation;                  // 0x3AA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAirFreestyleActivated;                           // 0x3AB8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAirFreestyleDeactivated;                         // 0x3AC8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AD8[0x8];                                     // 0x3AD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarAudioController*                 CachedVehicleAudioController;                      // 0x3AE0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVehicleCollisionsEnabled;                         // 0x3AE8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPawnCollisionsEnabled;                            // 0x3AE9(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3AEA[0xE];                                     // 0x3AEA(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUsePredictiveInterpolation;                       // 0x3AF8(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3AF9[0x7];                                     // 0x3AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  PostProcessComp;                                   // 0x3B00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B08[0x18];                                    // 0x3B08(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddTargetSpeedAdjustment(const class FName& Source, float Value);
	void AddWorldBonusSpeedStack(const struct FDelMarWorldBonusSpeedStack& BonusSpeedStack);
	void ClearConfigOverrides();
	void DemolishVehicle(const struct FGameplayTag& InCausedByTag);
	void HandleAerialThrottleBrakeChanged();
	void HandleFinishedCharacterCustomization(class AFortPlayerPawn* PlayerPawn);
	void HandleNewPlayerState(class AFortPlayerPawn* Pawn);
	void HandleOnVehicleCosmeticsFinished();
	void HandlePitchDeadzoneChanged();
	void HandleSteerDeadzoneChanged();
	void HandleThrottleDeadzoneChanged();
	void HandleThrottleToggleChanged();
	void OnApplyOverlapFilter();
	void OnRep_bPawnCollisionsEnabled();
	void OnRep_bVehicleCollisionsEnabled();
	void OnRep_SpawnInfo();
	void OnRep_StartlineBoostData();
	void OnRep_TurboCharges();
	void ResetRunPressed();
	void ResetTrackPosition(class ADelMarTrackBase* Track, int32 TrackSegment);
	void ServerAddReplicatedGameplayTag(const struct FGameplayTag& InTag);
	void ServerAddReplicatedGameplayTags(const struct FGameplayTagContainer& InTags);
	void ServerDemolishVehicle(const struct FGameplayTag& InCausedByTag);
	void ServerNotifyTurboActivated();
	void ServerOnClientTeleport();
	void ServerRemoveReplicatedGameplayTag(const struct FGameplayTag& InTag);
	void ServerRemoveReplicatedGameplayTags(const struct FGameplayTagContainer& InTags);
	void ServerSetLocalDriverHasReplicatedTheVehicle(bool bNewValue);
	void ServerTeleportVehicleEntered();
	void ServerTeleportVehicleExited();
	void SetConfigOverrides(const struct FDelMarVehicleConfigOverrides& InConfigOverrides);
	void SetVehicleMesh(class USkeletalMesh* NewMesh, class UPhysicsAsset* PhysicsAsset);
	void TeleportVehicleEntered();
	void TeleportVehicleExited();
	void TryGetFortClientSettings();

	class UDelMarAudioComponentGroup* GetAudioComponentGroup() const;
	class UDelMarVehicleCosmeticComponent* GetCosmeticComponent() const;
	class ADelMarRaceManager* GetRaceManager() const;
	class UDelMarTrackPositionComponent* GetTrackPositionComponent() const;
	bool IsInvulnerabilityActive() const;
	bool IsRespawnEffectSignificant() const;
	bool IsWheelOnGround(EDelMarVehicleWheelIndex WheelIndex) const;
	void OnRep_ConfigOverrides() const;
	bool VehicleHasTag(const struct FGameplayTag& InTag) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicle">();
	}
	static class ADelMarVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarVehicle>();
	}
};

// Class DelMarCore.DelMarVehicleNetworkPhysicsComponent
// 0x0540 (0x05E0 - 0x00A0)
class UDelMarVehicleNetworkPhysicsComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarVehicleReplicatedState          ReplicatedState;                                   // 0x00B0(0x0290)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0x2A0];                                    // 0x0340(0x02A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPhysicsStateChanged(class UPrimitiveComponent* ChangedComponent, EComponentPhysicsStateChange StateChange);
	void OnRep_ReplicatedState(const struct FDelMarVehicleReplicatedState& PrevReplicatedState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleNetworkPhysicsComponent">();
	}
	static class UDelMarVehicleNetworkPhysicsComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleNetworkPhysicsComponent>();
	}
};

// Class DelMarCore.DelMarVehicleStateTagManagerComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDelMarVehicleStateTagManagerComponent final : public UActorComponent
{
public:
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAbilitySystemComponent> CachedASC;                                         // 0x00A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleAnyWheelsOnGroundChanged(const TScriptInterface<class IDelMarVehicleInterface>& Vehicle, bool bWheelsOnGround);
	void HandleDraftActivated();
	void HandleDraftDeactivated();
	void HandleDriftActivated();
	void HandleDriftBoostActivated();
	void HandleDriftBoostDeactivated();
	void HandleDriftDeactivated();
	void HandleTurboChargeUsed();
	void HandleTurboDeactivated();
	void HandleWorldBonusSpeedStackGained(const struct FGameplayTag& Source, int32 Stacks);
	void HandleWorldBonusSpeedStackLost(const struct FGameplayTag& Source, int32 Stacks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleStateTagManagerComponent">();
	}
	static class UDelMarVehicleStateTagManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleStateTagManagerComponent>();
	}
};

// Class DelMarCore.DelMarVehicleVerbComponent
// 0x0028 (0x00C8 - 0x00A0)
class UDelMarVehicleVerbComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x28];                                      // 0x00A0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleAnyWheelsOnGroundChanged(const TScriptInterface<class IDelMarVehicleInterface>& Vehicle, bool bWheelsOnGround);
	void HandleDraftActivated();
	void HandleDriftBoostActivated();
	void HandleDriftBoostDeactivated();
	void HandleDriftDeactivated();
	void HandleDriftDurationChanged(float duration);
	void HandleJumpActivated();
	void HandleKickflipped(bool bLeft);
	void HandlePotentialDriftBoostChanged(float Percent);
	void HandleSpeedometerSpeedChanged(float UpdatedSpeedometerSpeed);
	void HandleStartlineBoostActivated(float BoostPercent);
	void HandleTurboBonusZoneChanged(EDelMarTurboZoneState BonusZoneState);
	void HandleTurboChargeUsed();
	void HandleUnderthrustDeactivated();
	void HandleUnderthrustPercentChanged(float PercentageUnderthrustRemaining);
	void HandleVehicleLanded(float LandingForce, bool bLandedKickflip);
	void HandleWorldBonusSpeedStackGained(const struct FGameplayTag& Source, int32 Stacks);
	void HandleWorldBonusSpeedStackLost(const struct FGameplayTag& Source, int32 Stacks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleVerbComponent">();
	}
	static class UDelMarVehicleVerbComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleVerbComponent>();
	}
};

// Class DelMarCore.GameFeatureAction_MergeRankedDisplayData
// 0x0010 (0x0038 - 0x0028)
class UGameFeatureAction_MergeRankedDisplayData final : public UGameFeatureAction
{
public:
	class UFortHabaneroDisplayData*               MergeSource;                                       // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHabaneroDisplayData*               MergeDestination;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_MergeRankedDisplayData">();
	}
	static class UGameFeatureAction_MergeRankedDisplayData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_MergeRankedDisplayData>();
	}
};

// Class DelMarCore.GameFeatureAction_OverrideGameModeAISettings
// 0x0020 (0x0048 - 0x0028)
class UGameFeatureAction_OverrideGameModeAISettings final : public UGameFeatureAction
{
public:
	TSoftObjectPtr<class UAthenaAISettings>       AISettings;                                        // 0x0028(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameFeatureAction_OverrideGameModeAISettings">();
	}
	static class UGameFeatureAction_OverrideGameModeAISettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_OverrideGameModeAISettings>();
	}
};

// Class DelMarCore.UDelMarPlayerSuspendComponent
// 0x0018 (0x00B8 - 0x00A0)
class UUDelMarPlayerSuspendComponent final : public UControllerComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UDelMarPlayerSuspendComponent">();
	}
	static class UUDelMarPlayerSuspendComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUDelMarPlayerSuspendComponent>();
	}
};

// Class DelMarCore.DelMarAudioComponentGroup
// 0x0010 (0x03E0 - 0x03D0)
class UDelMarAudioComponentGroup final : public UAudioComponentGroup
{
public:
	class UDelMarAudioMixModifierExtension*       MixModifierExtension;                              // 0x03C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDelMarSubmixSendExtension*             SubmixSendExtension;                               // 0x03D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UDelMarAudioMixModifierExtension* GetMixModifiers() const;
	class UDelMarSubmixSendExtension* GetSubmixSends() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAudioComponentGroup">();
	}
	static class UDelMarAudioComponentGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarAudioComponentGroup>();
	}
};

// Class DelMarCore.DelMarAudioController
// 0x00F0 (0x04A8 - 0x03B8)
class ADelMarAudioController final : public AVehicleCosmeticsAudioController
{
public:
	uint8                                         Pad_3B8[0x18];                                     // 0x03B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnBigAirStarted;                                   // 0x03D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnBigAirStopped;                                   // 0x03E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDelMarAudioComponentGroup*             ComponentGroup;                                    // 0x03F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocal;                                          // 0x03F8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinishLineDistanceThreshold;                       // 0x03FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ApproachingFinishLineMinTime;                      // 0x0400(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BigAirLandingDistanceThreshold;                    // 0x0404(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BigAirTimeThreshold;                               // 0x0408(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BigAirDownSpeedThreshold;                          // 0x040C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NonLocalVelocityInterpSpeed;                       // 0x0410(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAcceleration;                                   // 0x0414(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBigAir;                                         // 0x0418(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarVehicle*                         CachedVehicle;                                     // 0x0420(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanShift;                                         // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_429[0x7F];                                     // 0x0429(0x007F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleVehicleDemolished(const struct FGameplayTag& CausedByTag);
	class UAudioComponent* PlaySound(class USoundBase* Sound, float InFadeInTime, float InTargetVolume, bool bDisableAttenuation, const EAudioFaderCurve InFadeCurve);

	class UDelMarAudioComponentGroup* GetComponentGroup() const;
	bool IsVirtualized() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAudioController">();
	}
	static class ADelMarAudioController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarAudioController>();
	}
};

// Class DelMarCore.DelMarAudioMixModifierExtension
// 0x0028 (0x00C8 - 0x00A0)
class UDelMarAudioMixModifierExtension final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x28];                                      // 0x00A0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddMixGroup(const struct FAudioMixModifierGroup& InMixModifier);
	void RemoveMixGroup(const struct FAudioMixModifierGroup& InMixModifier);
	void RemoveMixGroupByName(const class FName InName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAudioMixModifierExtension">();
	}
	static class UDelMarAudioMixModifierExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarAudioMixModifierExtension>();
	}
};

// Class DelMarCore.DelMarAudioReverbComponent
// 0x0288 (0x0328 - 0x00A0)
class UDelMarAudioReverbComponent final : public UActorComponent
{
public:
	class USoundSubmixBase*                       ReverbSend;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSubmixBase*                       EarlyReflectionSend;                               // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     EnclosureReverbBlendCurve;                         // 0x00B0(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     WallDistanceBlendCurve;                            // 0x0138(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     EnclosureSendLevelCurve;                           // 0x01C0(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     WallDistanceSendLevelCurve;                        // 0x0248(0x0088)(Edit, NativeAccessSpecifierPublic)
	int32                                         NumPoints;                                         // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceRadius;                                       // 0x02D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TraceOrigin;                                       // 0x02D8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumTracesPerFrame;                                 // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarVehicle*                         CachedVehicleOwner;                                // 0x02F8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x28];                                     // 0x0300(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAudioReverbComponent">();
	}
	static class UDelMarAudioReverbComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarAudioReverbComponent>();
	}
};

// Class DelMarCore.DelMarSubmixSendExtension
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarSubmixSendExtension final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SendInterpTime;                                    // 0x00A8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x14];                                      // 0x00AC(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RemoveSend(class USoundSubmixBase* InSubmix);
	void SetSend(class USoundSubmixBase* InSubmix, const float InLevel, const bool bTrackCount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarSubmixSendExtension">();
	}
	static class UDelMarSubmixSendExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarSubmixSendExtension>();
	}
};

// Class DelMarCore.DelMarNuxBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UDelMarNuxBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 GetCurrentLapNumber(const class ADelMarVehicle* Vehicle);
	static struct FDelMarRankedInfo GetCurrentRankedInfoForVehicle(const class ADelMarVehicle* Vehicle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarNuxBlueprintFunctionLibrary">();
	}
	static class UDelMarNuxBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarNuxBlueprintFunctionLibrary>();
	}
};

// Class DelMarCore.DelMarCheckpoint
// 0x01A0 (0x0D80 - 0x0BE0)
class alignas(0x10) ADelMarCheckpoint final : public AFortCreativeDeviceProp
{
public:
	TMulticastInlineDelegate<void(class ADelMarVehicle* Vehicle)> OnCheckpointTirggeredEvent;        // 0x0BE0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         bIsFinishLine : 1;                                 // 0x0BF0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsStartingLine : 1;                               // 0x0BF0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsTimeTrialSectionEnd : 1;                        // 0x0BF0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsTeleportEnabled : 1;                            // 0x0BF0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ADelMarCheckpoint*>                NextCheckpoints;                                   // 0x0BF8(0x0050)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                         DynamicSpawnOffset;                                // 0x0C48(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SpawnDistanceBeforeOrAfterSplineLocation;          // 0x0C4C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BaseRadius;                                        // 0x0C50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CheckpointId;                                      // 0x0C54(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NonTransactional, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SplinePointIndex;                                  // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarPlayerStart*                     SpawnPoint;                                        // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarTrackSnapToComponent*            SnapToComponent;                                   // 0x0C68(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class ADelMarCheckpoint*>                PreviousCheckpoints;                               // 0x0C70(0x0050)(Edit, EditConst, AdvancedDisplay, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FCheckpointTrackDistance               NearestTrack;                                      // 0x0CC0(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCheckpointTrackDistance>       AssociatedTracks;                                  // 0x0CD8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         ComputedCheckpointIndex;                           // 0x0CE8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CEC[0x4];                                      // 0x0CEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   ColliderVolume;                                    // 0x0CF0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_CF8[0x78];                                     // 0x0CF8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarCheckpoint*                      CheckpointToTeleportTo;                            // 0x0D70(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D78[0x8];                                      // 0x0D78(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_ActivateRift();
	void BP_DeactivateRift();
	void BP_FirstPlaceChanged(bool bValidPrevFirstPlace);
	void BP_LapFinished(int32 CompletedLap, int32 CurrentLap, int32 TotalLaps);
	void BP_RaceFinished();
	void BP_RaceReset();
	void ClientSetCheckpointActive(int32 CurrentLap, int32 TotalLaps);
	void ClientSetCheckpointInactive();
	void HandlePawnEnteredVehicle(const TScriptInterface<class IFortVehicleInterface>& Vehicle, class AFortPawn* Pawn, int32 SeatIndex);
	void OnTriggered(class ADelMarVehicle* InDelMarVehicle);
	void UpdateCheckpointMesh(EDelMarCheckpointMeshType MeshType);

	EDelMarCheckpointMeshType GetCheckpointMeshType() const;
	const struct FCheckpointTrackDistance GetFurthestAheadTrackDistance() const;
	const struct FCheckpointTrackDistance GetFurthestBehindTrackDistance() const;
	const struct FCheckpointTrackDistance GetNearestTrackData() const;
	struct FTransform GetSpawnTransform() const;
	const struct FCheckpointTrackDistance GetTrackDistanceDataForTrack(const class ADelMarTrackBase* InTrack, const bool bEnsureAssociated) const;
	bool IsAssociatedWithTrack(const class ADelMarTrackBase* InTrack) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCheckpoint">();
	}
	static class ADelMarCheckpoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarCheckpoint>();
	}
};

// Class DelMarCore.FortClientPilot_QuickSmokeDelMar
// 0x0010 (0x0320 - 0x0310)
class UFortClientPilot_QuickSmokeDelMar final : public UFortClientPilot_GameplayBase
{
public:
	uint8                                         Pad_310[0x10];                                     // 0x0310(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortClientPilot_QuickSmokeDelMar">();
	}
	static class UFortClientPilot_QuickSmokeDelMar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortClientPilot_QuickSmokeDelMar>();
	}
};

// Class DelMarCore.DelMarBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UDelMarBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AreAllLeaderboardFiltersEnabled();
	static bool BP_KillAndRespawnVehicle(const class AController* Controller, const struct FGameplayTag& CausedByTag);
	static class FText DelMarFormatTime(const double TimeSeconds, const bool bIncludeMilliseconds);
	static double GetClientWorldTimeSeconds(const class UObject* WorldContextObject);
	static class ADelMarPlayspace* GetDelMarPlayspace(const class UObject* WorldContextObject);
	static class ADelMarVehicle* GetDelMarVehicle(const class APlayerController* PlayerController);
	static EDelMarNetModel GetNetModel(const class UObject* WorldContextObject);
	static class AFortPlayerController* GetPrimaryPlayerController(const class UObject* WorldContextObject);
	static class AFortPlayerState* GetPrimaryPlayerState(const class UObject* WorldContextObject);
	static double GetTimerDeltaFromServerTime(const double TimestampSeconds, const EDelMarTimerDirection Direction, const bool bCapAtZero, bool* bIsPositive, const class UObject* WorldContextObject);
	static bool IsDelMarExperience(bool bEnableCaching);
	static bool IsDelMarGFSActive();
	static bool IsDelMarPlaylist(class UObject* ContextObject);
	static void SetDelMarControlsText(const class APlayerController* PlayerController, const struct FDelMarEvent_SetControlsText& Event);
	static void SetDelMarTutorialHint(const class APlayerController* PlayerController, const struct FDelMarEvent_SetTutorialHint& Event);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarBlueprintLibrary">();
	}
	static class UDelMarBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarBlueprintLibrary>();
	}
};

// Class DelMarCore.DelMarCheatManager
// 0x0010 (0x0038 - 0x0028)
class UDelMarCheatManager final : public UChildCheatManager
{
public:
	TArray<class FString>                         SafePlayerNames;                                   // 0x0028(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)

public:
	void DelMarCancelMissedCheckpointDemoCountdown();
	void DelMarCancelReturnToTrackDemoCountdown();
	void DelMarClearActiveAutoInput();
	void DelMarClearQueuedAutoInput();
	void DelMarDemolishSelf();
	void DelMarDemolishSelfWithTag(const class FString& DemolishTagString);
	void DelMarEndSpectate();
	void DelMarExitVehicle();
	void DelMarFetchFocusedLeaderboard();
	void DelMarFetchFriendsLeaderboard();
	void DelMarFetchGlobalLeaderboard();
	void DelMarFinishRace();
	void DelMarFinishRaceSelf();
	void DelMarForceEveryoneToReadyUp();
	void DelMarForceLoadLevel(const class FString& LevelName);
	void DelMarForceLoadUEFNIsland(const class FString& IslandCode);
	void DelMarGhostClearPlaybackFile();
	void DelMarGhostForcePlayAllTriggers();
	void DelMarGhostSetRecordOffPhysics(bool bEnabled);
	void DelMarGhostSetReplayEnabled(bool bEnabled);
	void DelMarGhostStartPlayerPlayback();
	void DelMarGhostStartPlayerRecording(const class FString& SaveFileName, bool bSaveToFile);
	void DelMarGhostStopPlayerRecording();
	void DelMarGiveSelfSomeCompetitiveMMRStats(const int32 MyPosition, const int32 TotalNumberOfPlayers, const int32 NumberOfTimesToSendMMRUpdate);
	void DelMarGrantQuestsInDir(const class FString& Dir);
	void DelMarGrantTurboCharges(const float Amount, const bool bGrantToEveryone);
	void DelMarInitiateMissedCheckpointDemoCountdown(float SecondsUntilDemo);
	void DelMarInitiateReturnToTrackDemoCountdown(float SecondsUntilDemo);
	void DelMarNextTutorialSection();
	void DelMarPauseAllBots();
	void DelMarPrevTutorialSection();
	void DelMarPrintLogsToDiagnoseSpinout();
	void DelMarPrintQuestProgress();
	void DelMarQueueAutoInputDriveThenTurn(int32 Repeat, float Throttle, float StraightDuration, float Steer, float TurnDuration);
	void DelMarQueueAutoInputJump(int32 Repeat, float Delay);
	void DelMarQueueAutoInputThrottle(float Throttle, float duration);
	void DelMarRemoveAllBots();
	void DelMarRemoveBotByName(class FString* BotName);
	void DelMarRemoveNumberOfBots(int32 NumberOfBotsToRemove);
	void DelMarRenamePlayers();
	void DelMarResetPreRaceViewTarget();
	void DelMarResetRace();
	void DelMarResetTutorialSplines();
	void DelMarRespawnAtLastCheckpoint();
	void DelMarRespawnAtLastCheckpoint_ParallelPath();
	void DelMarRespawnPointLocked(bool bLocked);
	void DelMarResumeAllBots();
	void DelMarReturnToLobby();
	void DelMarSetAirFreestyleEnabled(bool bEnabled);
	void DelMarSetCollisionDemosEnabled(bool bEnabled);
	void DelMarSetDemoModeEnabled(const bool bEnabled);
	void DelMarSetDraftingEnabled(bool bEnabled);
	void DelMarSetGlobalInputEnabled(const class FString& InputTag, const bool bEnableInput);
	void DelMarSetInfiniteUnderthrustEnabled(bool bEnabled);
	void DelMarSetInputMappingContextEnabled(const class FString& InputTag, const bool bEnableInput);
	void DelMarSetInvertSteerMethod(EDelMarInvertSteerMethod InInvertSteerMethod);
	void DelMarSetLap(int32 LapNum);
	void DelMarSetLapTotal(int32 NewTotal);
	void DelMarSetLoadingScreenVisibility(bool bShouldBeVisible);
	void DelMarSetReplicatedTagEnabledOnSelf(const class FString& InputTag, const bool bEnabled);
	void DelMarSetRespawnCollisionProtectionEnabled(bool bEnabled);
	void DelMarSetRespawnCollisionProtectionSeconds(float Seconds);
	void DelMarSetRespawnInvulnerabilityEnabled(bool bEnabled);
	void DelMarSetRespawnInvulnerabilitySeconds(float Seconds);
	void DelMarSetRespawnTracesEnabled(bool bEnabled);
	void DelMarSetRubberbandingEnabled(bool bEnabled);
	void DelMarSetRubberbandingMaxBonusSpeedScalar(float InMaxBonusSpeedScalar);
	void DelMarSetRubberbandingMaxDistanceFromPack(float InMaxDistanceFromPack);
	void DelMarSetRubberbandingMaxPackDistance(float InMaxPackDistance);
	void DelMarSetRubberbandingMaxPackDistanceGainedPerSecond(float InMaxPackDistanceGainedPerSecond);
	void DelMarSetRubberbandingMaxPackDistanceLostPerSecond(float InMaxPackDistanceLostPerSecond);
	void DelMarSetRubberbandingMinDistanceFromPack(float InMinDistanceFromPack);
	void DelMarSetRubberbandingMinPackDistance(float InMinPackDistance);
	void DelMarSetRubberbandingMMR(int32 InMMR);
	void DelMarSetRubberbandingNumPlayersForPackDistance(int32 InNumPlayersForPackDistance);
	void DelMarSetSpawnMode(EDelMarRaceSpawnMode SpawnMode);
	void DelMarSetStartlineBoostEnabled(bool bEnabled);
	void DelMarSetStartlineBoostPotentialOverride(float PotentialOverride);
	void DelMarSetStrafeEnabled(bool bEnabled);
	void DelMarSetTurboCharges(const float Amount, const bool bGrantToEveryone);
	void DelMarSetTutorialSection(int32 Index_0);
	void DelMarSetVehicleCollisionsOverrideForSelf(EDelMarVehicleCollisionOverrideSetting NewValue);
	void DelMarSetVehicleCollisionsOverrideGlobal(EDelMarVehicleCollisionOverrideSetting NewValue);
	void DelMarSetVerticalKickflipInverted(bool InbVerticalKickflipInverted);
	void DelMarSkipWaitingForPlayers();
	void DelMarSpawnBots(int32 NumberOfBotsToSpawn);
	void DelMarSpawnBotsAtSkillLevel(int32 NumberOfBotsToSpawn, int32 SkillLevel);
	void DelMarSpawnVehicleForSelf();
	void DelMarSpectate();
	void DelMarStartFollowTrack(float Throttle);
	void DelMarStartQueuedAutoInput();
	void DelMarStartRace();
	void DelMarTeleportToNextCheckpoint_ParallelPath(const int32 ParallelPathIndex);
	void DelMarTeleportToPreviousCheckpoint_ParallelPath(const int32 ParallelPathIndex);
	void DelMarUsePredictiveInterpolation(bool bEnabled, bool bEveryOther);

	void BugIt(const class FString& BugName) const;
	void BugItGo(float X, float Y, float Z, float pitch, float Yaw, float Roll) const;
	void DelMarCreateTrackScrubberForProfiling() const;
	void DelMarDestroyTrackScrubbers() const;
	void DelMarStartTrackScrubberWithViewTarget(bool bRunCsvProfilerDuringScrub) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCheatManager">();
	}
	static class UDelMarCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCheatManager>();
	}
};

// Class DelMarCore.DelMarGlobals
// 0x0000 (0x0028 - 0x0028)
class UDelMarGlobals final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGlobals">();
	}
	static class UDelMarGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGlobals>();
	}
};

// Class DelMarCore.DelMarVehicleCameraMode
// 0x0620 (0x2310 - 0x1CF0)
class UDelMarVehicleCameraMode final : public UFortCameraMode_AthenaVehicle
{
public:
	struct FDelMarVehicleCameraSettings           CameraSettings;                                    // 0x1CE8(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D04[0x4];                                     // 0x1D04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     VelocityViewDistance;                              // 0x1D08(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     VelocityFOV;                                       // 0x1D90(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AerialViewDistance;                                // 0x1E18(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AerialFocusOffset;                                 // 0x1EA0(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AerialPitch;                                       // 0x1F28(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AccelViewDistance;                                 // 0x1FB0(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AccelPitch;                                        // 0x2038(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     AirRotationInterpRate;                             // 0x20C0(0x0088)(Edit, NativeAccessSpecifierPublic)
	float                                         DriftSwivelSpeed;                                  // 0x2148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ViewDistanceInterpSpeed;                           // 0x214C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOVInterpSpeed;                                    // 0x2150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccelerationViewDistanceDecayRate;                 // 0x2154(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAccumulatedAccelViewDistance;                   // 0x2158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinAccumulatedAccelViewDistance;                   // 0x215C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AerialOffsetInterpSpeed;                           // 0x2160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumDownwardAerialPitch;                        // 0x2164(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumUpwardAerialPitch;                          // 0x2168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccelerationPitchDecayRate;                        // 0x216C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAccumulatedAccelPitch;                          // 0x2170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinAccumulatedAccelPitch;                          // 0x2174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreventSpeedIncreaseInAir;                        // 0x2178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2179[0x3];                                     // 0x2179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedInputScalar;                                  // 0x217C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwivelPitchMax;                                    // 0x2180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwivelYawMax;                                      // 0x2184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundPitchInterpRate;                             // 0x2188(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundMaxPitchForNormalBlend;                      // 0x218C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundNormalInterpRate;                            // 0x2190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundNormalAirInterpRate;                         // 0x2194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundYawRateMin;                                  // 0x2198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundYawRateMax;                                  // 0x219C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallYawRateMin;                                    // 0x21A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallYawRateMax;                                    // 0x21A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpToGroundTime;                                // 0x21A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpToAirTime;                                   // 0x21AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AverageVelocityInterpRate;                         // 0x21B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FocusOffsetInterpRate;                             // 0x21B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceSpeedScale;                                // 0x21B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceOffsetMin;                                 // 0x21BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceOffsetMax;                                 // 0x21C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceInterpRate;                                // 0x21C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpeedFOVOffset;                                 // 0x21C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SupersonicFOVOffset;                               // 0x21CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOVInterpRate;                                     // 0x21D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21D4[0x4];                                     // 0x21D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarVehicle*                         VehicleTarget;                                     // 0x21D8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21E0[0x130];                                   // 0x21E0(0x0130)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleCameraMode">();
	}
	static class UDelMarVehicleCameraMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleCameraMode>();
	}
};

// Class DelMarCore.DelMarEliminationRaceManagerComponent
// 0x0018 (0x00B8 - 0x00A0)
class UDelMarEliminationRaceManagerComponent final : public UDelMarRaceManagerComponent
{
public:
	TArray<struct FDelMarEliminationMMRCountPair> EliminationsConfig;                                // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         ParsedNumberOfPlayersToEliminate;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarEliminationRaceManagerComponent">();
	}
	static class UDelMarEliminationRaceManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarEliminationRaceManagerComponent>();
	}
};

// Class DelMarCore.DelMarStateSequencerFXComponent
// 0x0128 (0x01C8 - 0x00A0)
class UDelMarStateSequencerFXComponent final : public UActorComponent
{
public:
	float                                         FXSizeScalar;                                      // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class UNiagaraSystem*> ParticleClassMap;                               // 0x00A8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFXSystemSpawnParameters               SpawnParams;                                       // 0x0100(0x0070)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class ADelMarTimeDelayedStateSequencer*       ParentRef;                                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UNiagaraComponent*> ParticleComponentMap;                        // 0x0178(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void HandleCurrentStateChanged(const struct FGameplayTag& NewState);
	void HandleEnabledChanged(bool bEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarStateSequencerFXComponent">();
	}
	static class UDelMarStateSequencerFXComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarStateSequencerFXComponent>();
	}
};

// Class DelMarCore.DelMarTimeDelayedStateSequencer
// 0x0050 (0x02E0 - 0x0290)
class ADelMarTimeDelayedStateSequencer final : public AActor
{
public:
	TMulticastInlineDelegate<void(const struct FGameplayTag& NewState)> OnCurrentStateChanged;       // 0x0290(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bEnabled)> OnEnabledChanged;                                  // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bEnableOnSpawn;                                    // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLoopSpecificAmount;                               // 0x02B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalLoopCount;                                    // 0x02B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDelMarTimeDelayedState>        StateArray;                                        // 0x02B8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0xC];                                      // 0x02C8(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsEnabled;                                        // 0x02D4(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentStateIndex;                                 // 0x02D8(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_bIsEnabled();
	void OnRep_CurrentStateIndex();
	void SetEnabled(const bool bEnabled);

	struct FGameplayTag GetCurrentStateTag() const;
	int32 GetStateCount() const;
	struct FGameplayTag GetStateTagAtIndex(const int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTimeDelayedStateSequencer">();
	}
	static class ADelMarTimeDelayedStateSequencer* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarTimeDelayedStateSequencer>();
	}
};

// Class DelMarCore.DelMarGhostVehicle
// 0x0050 (0x2070 - 0x2020)
class ADelMarGhostVehicle final : public AFortAthenaVehicle
{
public:
	uint8                                         Pad_2020[0x48];                                    // 0x2020(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              GhostMaterial;                                     // 0x2068(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleVehicleCosmeticsFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGhostVehicle">();
	}
	static class ADelMarGhostVehicle* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarGhostVehicle>();
	}
};

// Class DelMarCore.DelMarGlobalInputDisabler
// 0x0038 (0x00D8 - 0x00A0)
class UDelMarGlobalInputDisabler final : public UDelMarRaceManagerComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DisabledInputTags;                                 // 0x00B8(0x0020)(Edit, Net, Protected, NativeAccessSpecifierProtected)

public:
	void SetGlobalInputsEnabled(const struct FGameplayTagContainer& InputTags, const bool bEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGlobalInputDisabler">();
	}
	static class UDelMarGlobalInputDisabler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGlobalInputDisabler>();
	}
};

// Class DelMarCore.DelMarCosmeticActorSpawnLogic
// 0x0000 (0x0028 - 0x0028)
class UDelMarCosmeticActorSpawnLogic : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCosmeticActorSpawnLogic">();
	}
	static class UDelMarCosmeticActorSpawnLogic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCosmeticActorSpawnLogic>();
	}
};

// Class DelMarCore.DelMarCosmeticActorSpawnLogic_AttachTo
// 0x0008 (0x0030 - 0x0028)
class UDelMarCosmeticActorSpawnLogic_AttachTo final : public UDelMarCosmeticActorSpawnLogic
{
public:
	class FName                                   AttachSocket;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCosmeticActorSpawnLogic_AttachTo">();
	}
	static class UDelMarCosmeticActorSpawnLogic_AttachTo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCosmeticActorSpawnLogic_AttachTo>();
	}
};

// Class DelMarCore.DelMarCosmeticActorSpawnLogic_AttachToEach
// 0x0010 (0x0038 - 0x0028)
class UDelMarCosmeticActorSpawnLogic_AttachToEach final : public UDelMarCosmeticActorSpawnLogic
{
public:
	TArray<class FName>                           AttachSockets;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCosmeticActorSpawnLogic_AttachToEach">();
	}
	static class UDelMarCosmeticActorSpawnLogic_AttachToEach* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCosmeticActorSpawnLogic_AttachToEach>();
	}
};

// Class DelMarCore.DelMarCosmeticActor
// 0x0038 (0x02C8 - 0x0290)
class ADelMarCosmeticActor : public AActor
{
public:
	class UDelMarCosmeticActorSpawnLogic*         SpawnLogic;                                        // 0x0290(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class ADelMarCosmeticActor>> CosmeticDependencies;                            // 0x0298(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TScriptInterface<class IDelMarVehicleInterface> Vehicle;                                         // 0x02A8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarVehicleConfigs*                  VehicleConfig;                                     // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDelMarVehicleCosmeticComponent*        VehicleCosmeticComponent;                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void ApplyCosmetic();
	void BP_OnAnyWheelsOnGroundChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bValue);
	void BP_OnBonusSpeedActivated();
	void BP_OnBonusSpeedChanged(float BonusSpeed);
	void BP_OnBonusSpeedDeactivated();
	void BP_OnCosmeticApplied();
	void BP_OnDelMarAppliedTeleportRotation();
	void BP_OnDelMarTeleportEntered();
	void BP_OnDelMarTeleportExited();
	void BP_OnDelMarVehicleSpawned(bool bFirstVehicleForPlayer, bool bPrevVehicleDemolished);
	void BP_OnDraftStateChanged(EDelmarDraftingState CurrentState);
	void BP_OnDriftActivated();
	void BP_OnDriftBoostActivated();
	void BP_OnDriftBoostDeactivated();
	void BP_OnDriftControlChanged(bool bIsDriftingControlled);
	void BP_OnDriftDeactivated();
	void BP_OnDriftDurationChanged(float duration);
	void BP_OnDriftKickActivated(float DriftDirection, EDelMarVehicleDriftState DriftState);
	void BP_OnDriftKickDeactivated();
	void BP_OnInvulnerabilityActivated();
	void BP_OnInvulnerabilityDeactivated();
	void BP_OnJumpActivated();
	void BP_OnJumpDeactivated();
	void BP_OnKickflipActivated(bool bLeftSide);
	void BP_OnKickflipActivationChargesChanged(int32 ActivationCharges);
	void BP_OnKickflipDeactivated();
	void BP_OnKickflipDistanceToSuctionSurfaceChanged(float Distance);
	void BP_OnKickflipDurationChanged(float duration);
	void BP_OnKickflipSuctionActivated();
	void BP_OnKickflipSuctionDeactivated();
	void BP_OnReachedMaxDraftBonusSpeed();
	void BP_OnReattachmentActivated();
	void BP_OnReattachmentDeactivated();
	void BP_OnStartlineBoostActivated(float PercentageMaxBonusSpeedEarned);
	void BP_OnStartlineBoostDeactivated();
	void BP_OnStartlineBoostFailed();
	void BP_OnStrafeActivated(bool bLeftSide);
	void BP_OnStrafeCooldownChanged(float CooldownPercentage);
	void BP_OnStrafeDeactivated();
	void BP_OnStrafeDisabledChanged(bool bDisabled);
	void BP_OnStrafeUsabilityChanged(bool bCanActivate);
	void BP_OnTurboActivated();
	void BP_OnTurboBonusStateChanged(EDelMarTurboZoneState NewState);
	void BP_OnTurboDeactivated();
	void BP_OnUnderthrustActivated();
	void BP_OnUnderthrustDeactivated();
	void BP_OnVehicleDemolished(const struct FGameplayTag& CausedByTag);
	void BP_OnVehicleForwardStateChanged(EDelMarVehicleForwardState NewForwardState);
	void BP_OnVehicleLanded(float LandingForced, bool bLandedKickflip);
	void BP_OnVehicleStartedSkydiving();
	void BP_OnVehicleStoppedSkydiving();
	void BP_OnVehicleWheelsLeftGround();
	void BP_OnWheelsOnGroundChanged(const TScriptInterface<class IDelMarVehicleInterface>& VehicleRef, bool bValue);
	void BP_OnWorldBonusSpeedStackGained(const struct FGameplayTag& Source, int32 Stacks);
	void BP_OnWorldBonusSpeedStackLost(const struct FGameplayTag& Source, int32 Stacks);

	class USkeletalMeshComponent* GetBodyMeshComponent() const;
	bool IsLocallyViewed() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCosmeticActor">();
	}
	static class ADelMarCosmeticActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarCosmeticActor>();
	}
};

// Class DelMarCore.DelMarCosmeticItemDefinition
// 0x0018 (0x01B0 - 0x0198)
class UDelMarCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	struct FGameplayTag                           Slot;                                              // 0x0198(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           CosmeticActorClasses;                              // 0x01A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCosmeticItemDefinition">();
	}
	static class UDelMarCosmeticItemDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCosmeticItemDefinition>();
	}
};

// Class DelMarCore.DelMarVehicleBodyItemDefinition
// 0x0000 (0x01B0 - 0x01B0)
class UDelMarVehicleBodyItemDefinition final : public UDelMarCosmeticItemDefinition
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleBodyItemDefinition">();
	}
	static class UDelMarVehicleBodyItemDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleBodyItemDefinition>();
	}
};

// Class DelMarCore.DelMarLeaderboardManager
// 0x01C8 (0x0268 - 0x00A0)
class UDelMarLeaderboardManager final : public UDelMarRaceManagerComponent
{
public:
	class FString                                 CurrentSeasonIdentifier;                           // 0x00A0(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDelMarEvent_GlobalLeaderboardPersonalBestRetrieved* PersonalBestRetrievedEvent;           // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x70];                                      // 0x00B8(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarLeaderboardConfig               LeaderboardConfig;                                 // 0x0128(0x0020)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                         Pad_148[0x120];                                    // 0x0148(0x0120)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_LeaderboardConfig();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLeaderboardManager">();
	}
	static class UDelMarLeaderboardManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLeaderboardManager>();
	}
};

// Class DelMarCore.DelMarMatchmakingComponent
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarMatchmakingComponent final : public UControllerComponent
{
public:
	void ClientStartMatchmaking(const struct FOnlineLinkId& LinkId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMatchmakingComponent">();
	}
	static class UDelMarMatchmakingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarMatchmakingComponent>();
	}
};

// Class DelMarCore.DelMarMutator_AllowSpectateOtherTeams
// 0x0000 (0x0340 - 0x0340)
class ADelMarMutator_AllowSpectateOtherTeams final : public AFortAthenaMutator_AllowSpectateOtherTeams
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMutator_AllowSpectateOtherTeams">();
	}
	static class ADelMarMutator_AllowSpectateOtherTeams* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarMutator_AllowSpectateOtherTeams>();
	}
};

// Class DelMarCore.DelMarAsyncPhysicsTickMutator
// 0x0010 (0x0350 - 0x0340)
class ADelMarAsyncPhysicsTickMutator final : public ADelMarMutator
{
public:
	float                                         AsyncTickRate;                                     // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_344[0xC];                                      // 0x0344(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void TryToApplySolverOverrides();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarAsyncPhysicsTickMutator">();
	}
	static class ADelMarAsyncPhysicsTickMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarAsyncPhysicsTickMutator>();
	}
};

// Class DelMarCore.DelMarConsoleVariableMutator
// 0x0030 (0x0370 - 0x0340)
class ADelMarConsoleVariableMutator final : public ADelMarMutator
{
public:
	class FString                                 VariableName;                                      // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 Value;                                             // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_360[0x10];                                     // 0x0360(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarConsoleVariableMutator">();
	}
	static class ADelMarConsoleVariableMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarConsoleVariableMutator>();
	}
};

// Class DelMarCore.DelMarPhysMatAttributeMap
// 0x0050 (0x0080 - 0x0030)
class UDelMarPhysMatAttributeMap final : public UDataAsset
{
public:
	TMap<class UPhysicalMaterial*, struct FPhysicalMaterialAttributes_X> MaterialAttributesMap;      // 0x0030(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPhysMatAttributeMap">();
	}
	static class UDelMarPhysMatAttributeMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPhysMatAttributeMap>();
	}
};

// Class DelMarCore.DelMarCameraComponent
// 0x0008 (0x00A8 - 0x00A0)
class UDelMarCameraComponent final : public UControllerComponent
{
public:
	TWeakObjectPtr<class UDelMarVehicleManager>   VehicleManager;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCameraComponent">();
	}
	static class UDelMarCameraComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCameraComponent>();
	}
};

// Class DelMarCore.DelMarCameraInputControllerComponent
// 0x0060 (0x0100 - 0x00A0)
class UDelMarCameraInputControllerComponent final : public UControllerComponent
{
public:
	struct FDelMarInputAction                     TurnCameraAction;                                  // 0x00A0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     LookUpCameraAction;                                // 0x00B0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarInputAction                     ReverseCameraAction;                               // 0x00C0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UDelMarPlayerInputManagerComponent> InputManagerClass;                         // 0x00D0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UEnhancedInputComponent> InputComponent;                                    // 0x00D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortClientSettingsRecord> FortSettings;                                    // 0x00E0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E8[0x18];                                      // 0x00E8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleCameraSwivelDeadzoneChanged();
	void HandleInputSettingsChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCameraInputControllerComponent">();
	}
	static class UDelMarCameraInputControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCameraInputControllerComponent>();
	}
};

// Class DelMarCore.DelMarContextualHintComponent
// 0x00F8 (0x0198 - 0x00A0)
class UDelMarContextualHintComponent final : public UControllerComponent
{
public:
	struct FDelMarEvent_SetTutorialHint           HazardHitHint;                                     // 0x00A0(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FDelMarEvent_SetTutorialHint> DemolishedByHints;                // 0x00E8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarEvent_SetTutorialHint           SlowerTerrainHint;                                 // 0x0138(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarVehicle>          Vehicle;                                           // 0x0180(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APlayerController>       CachedPlayerController;                            // 0x0188(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_190[0x8];                                      // 0x0190(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleVehicleDemolished(const struct FGameplayTag& CausedByTag);
	void HandleVehicleHazardHit();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarContextualHintComponent">();
	}
	static class UDelMarContextualHintComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarContextualHintComponent>();
	}
};

// Class DelMarCore.DelMarLocalCheckpointVisibilityControllerComponent
// 0x0078 (0x0118 - 0x00A0)
class UDelMarLocalCheckpointVisibilityControllerComponent final : public UControllerComponent
{
public:
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarCheckpointManagerComponent> CachedCheckpointManager;                 // 0x00A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        ViewTargetPlayerState;                             // 0x00B0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        CachedLocalPlayerState;                            // 0x00B8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class ADelMarCheckpoint*>                CurrentlyActiveCheckpoints;                        // 0x00C0(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                          bVisitedStartingCheckpoint;                        // 0x0110(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleCheckpointPassed(const struct FDelMarEvent_CheckpointPassed_ParallelPath& CheckpointEvent);
	void HandleLapComplete(const struct FDelMarEvent_LapComplete& LapEvent);
	void HandleViewTargetChanged(class AFortPlayerController* PlayerController, class AActor* OldViewTarget, class AActor* NewViewTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLocalCheckpointVisibilityControllerComponent">();
	}
	static class UDelMarLocalCheckpointVisibilityControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLocalCheckpointVisibilityControllerComponent>();
	}
};

// Class DelMarCore.DelMarNetworkInputComponent
// 0x0060 (0x0100 - 0x00A0)
class UDelMarNetworkInputComponent final : public UControllerComponent
{
public:
	uint8                                         Pad_A0[0x60];                                      // 0x00A0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ServerSendInputs(const struct FDelMarNetworkInputPacket& InputPacket);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarNetworkInputComponent">();
	}
	static class UDelMarNetworkInputComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarNetworkInputComponent>();
	}
};

// Class DelMarCore.DelMarPlayerDeathRaceDataComponent
// 0x0008 (0x0230 - 0x0228)
class UDelMarPlayerDeathRaceDataComponent final : public UDelMarPlayerRaceDataComponent
{
public:
	int32                                         Score;                                             // 0x0228(0x0004)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerDeathRaceDataComponent">();
	}
	static class UDelMarPlayerDeathRaceDataComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerDeathRaceDataComponent>();
	}
};

// Class DelMarCore.DelMarPlayerInputManagerComponent
// 0x0070 (0x0110 - 0x00A0)
class UDelMarPlayerInputManagerComponent final : public UDelMarPlayerStateComponent
{
public:
	TMap<struct FGameplayTag, struct FDelMarInputMappingContextData> InputMappingContextMap;         // 0x00A0(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UDelMarInputContextRedirectMap*         PlatformDigitalRedirect;                           // 0x00F0(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   CachedController;                                  // 0x00F8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedVehicle;                                     // 0x0100(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x0108(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerInputManagerComponent">();
	}
	static class UDelMarPlayerInputManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerInputManagerComponent>();
	}
};

// Class DelMarCore.DelMarPlayerPreferencesComponent
// 0x0058 (0x00F8 - 0x00A0)
class UDelMarPlayerPreferencesComponent final : public UDelMarPlayerStateComponent
{
public:
	TMulticastInlineDelegate<void(bool bUseToggle)> OnUseToggleOnExpandableHudWidgetChanged;         // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bUseToggle)> OnUseIconOnlyPlayerNameplatesChanged;            // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FGameplayTag& Layout)> OnTouchControlsLayoutChanged;  // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EDelMarInvertSteerMethod                      InvertSteerMethod;                                 // 0x00D0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPitchInverted;                                    // 0x00D1(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bVerticalKickflipInverted;                         // 0x00D2(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAerialPitchActivationEnabled;                     // 0x00D3(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseToggleOnExpandableHudWidget;                   // 0x00D4(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseIconOnlyPlayerNameplates;                      // 0x00D5(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TouchControlsLayout;                               // 0x00D8(0x0004)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x00DC(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortClientSettingsRecord> FortSettings;                                    // 0x00E4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0xC];                                       // 0x00EC(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleAerialPitchActivationSettingChanged();
	void HandleIconOnlyNameplatesSettingChanged();
	void HandleInvertSteerSettingChanged();
	void HandleLocalFortInputSettingsChanged();
	void HandleTouchControlsSettingsChanged();
	void HandleVerticalKickflipInvertedSettingChanged();
	void ServerSetInvertSteerMethod(EDelMarInvertSteerMethod InInvertSteerMethod);
	void ServerUpdateAerialPitchActivation(const bool bInAerialPitchActivationEnabled);
	void ServerUpdatePitchInverted(const bool bInPitchInverted);
	void ServerUpdateVerticalKickflipInverted(const bool bInVerticalKickflipInverted);
	void TryGetFortClientSettings();

	struct FGameplayTag GetTouchControlsLayout() const;
	bool GetUseIconOnlyPlayerNameplates() const;
	bool GetUseToggleOnExpandableHudWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerPreferencesComponent">();
	}
	static class UDelMarPlayerPreferencesComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerPreferencesComponent>();
	}
};

// Class DelMarCore.DelMarPlayerRespawnComponent
// 0x00C0 (0x0160 - 0x00A0)
class UDelMarPlayerRespawnComponent final : public UDelMarPlayerStateComponent
{
public:
	float                                         TeleportEnterPhaseSeconds;                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RespawnBackwardsRangeDistance;                     // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RespawnForwardRangeDistance;                       // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RespawnHeightStartDistance;                        // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RespawnHeightPenetrationDistance;                  // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RespawnValidTrackRadius;                           // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckForObstacles;                                // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OppositeSideThreshold;                             // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ObstacleAreaBounds;                                // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AActor>>             ObstacleActorClasses;                              // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AActor>>             ObstacleActorIgnoreClasses;                        // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x00F8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          DelMarVehicle;                                     // 0x0100(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarCheckpointManagerComponent> CheckpointManager;                       // 0x0108(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPlayerRaceDataComponent> PlayerRaceData;                             // 0x0110(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarRaceConfigComponent> RaceConfig;                                     // 0x0118(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarTrack>            LastActiveTrack;                                   // 0x0120(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarTrackPositionComponent> TrackPosition;                               // 0x0128(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LastValidSegmentIndex;                             // 0x0130(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastValidDistanceAlongSpline;                      // 0x0134(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastValidPrimaryDistance;                          // 0x0138(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSpawnOnOppositeSide;                              // 0x013C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPreviousVehicleDemolished;                        // 0x013D(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFirstVehicleForPlayer;                            // 0x013E(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13F[0x1];                                      // 0x013F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarCheckpoint*                      CachedTeleportCheckpoint;                          // 0x0140(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_148[0x18];                                     // 0x0148(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleVehicleAppliedTeleportLocation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerRespawnComponent">();
	}
	static class UDelMarPlayerRespawnComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerRespawnComponent>();
	}
};

// Class DelMarCore.DelMarPlayerStartlineComponent
// 0x0050 (0x00F0 - 0x00A0)
class UDelMarPlayerStartlineComponent final : public UDelMarPlayerStateComponent
{
public:
	float                                         FailBufferSeconds;                                 // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarVehicle>          DelMarVehicle;                                     // 0x00A4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AC[0x44];                                      // 0x00AC(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerStartlineComponent">();
	}
	static class UDelMarPlayerStartlineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerStartlineComponent>();
	}
};

// Class DelMarCore.DelMarPlayerTurboManagerComponent
// 0x0028 (0x00C8 - 0x00A0)
class UDelMarPlayerTurboManagerComponent final : public UDelMarPlayerStateComponent
{
public:
	float                                         TurboCharges;                                      // 0x00A0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RechargeRateSeconds;                               // 0x00A4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LapCompleteCharges;                                // 0x00A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RaceStartCharges;                                  // 0x00AC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCharges;                                        // 0x00B0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarVehicle>          CachedDelMarVehicle;                               // 0x00B4(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00BC(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleTurboChargeUsed();
	void ModifyTurboCharges(float TurboChargeAmount);
	void ModifyTurboCharges_Delayed(float TurboChargeAmount);
	void SetTurboCharges(float TurboChargeAmount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayerTurboManagerComponent">();
	}
	static class UDelMarPlayerTurboManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPlayerTurboManagerComponent>();
	}
};

// Class DelMarCore.DelMarRemoveAthenaMarkerComponent
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarRemoveAthenaMarkerComponent final : public UControllerComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRemoveAthenaMarkerComponent">();
	}
	static class UDelMarRemoveAthenaMarkerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRemoveAthenaMarkerComponent>();
	}
};

// Class DelMarCore.DelMarRequestComponent
// 0x0088 (0x0128 - 0x00A0)
class UDelMarRequestComponent final : public UDelMarPlayerStateComponent
{
public:
	uint8                                         Pad_A0[0x48];                                      // 0x00A0(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  MapChoice;                                         // 0x00E8(0x0020)(Net, Transient, NativeAccessSpecifierPublic)
	bool                                          bIsReadyToStartRace;                               // 0x0108(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsReadyToJoinRace;                                // 0x0109(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarPostRaceVote                           PostRaceVote;                                      // 0x010A(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVotedPostRace;                                    // 0x010B(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x010C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarRespawnManagerComponent> CachedRespawnManager;                       // 0x0114(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        PlayerState;                                       // 0x011C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleLoadoutsChangedOnServer(const struct FCosmeticLoadout& CosmeticLoadout);
	void PostRaceNextRaceSelected();
	void PostRaceReturnToLobbySelected();
	void ServerPostRaceNextRaceSelected();
	void ServerPostRaceReturnToLobbySelected();
	void ServerReadyUp(bool bInReadyUp);
	void ServerRequestBecomeSpectator();
	void ServerRequestFinalInitialization();
	void ServerRequestIdleKickExtension();
	void ServerRequestMap(const struct FGameplayTagContainer& InMapChoice);
	void ServerRequestMapFromGameplay(const struct FGameplayTagContainer& InMapChoice);
	void ServerRequestRacerCountdown();
	void ServerRequestResetRun();
	void ServerRequestSpectatorBecomePlayer();
	void ServerRequestVehicleSpawn();
	void ServerSetJoinNextRace(bool bInReadyToJoinRace);
	void ServerSetPostRaceVote(EDelMarPostRaceVote NewVote);

	void OnRep_bIsReadyToJoinRace() const;
	void OnRep_bIsReadyToStartRace() const;
	void OnRep_PostRaceVote() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRequestComponent">();
	}
	static class UDelMarRequestComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRequestComponent>();
	}
};

// Class DelMarCore.DelMarRunRecordPlayerComponent
// 0x0070 (0x0110 - 0x00A0)
class UDelMarRunRecordPlayerComponent final : public UDelMarPlayerStateComponent
{
public:
	struct FDelMarRunRecord                       CurrentRunRecord;                                  // 0x00A0(0x0020)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FDelMarRunRecord                       BestRunRecord;                                     // 0x00C0(0x0020)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FDelMarRunRecord                       BestSectionsRecord;                                // 0x00E0(0x0020)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	double                                        BestSingleLapTime;                                 // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0108(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static void PrintRecords(const struct FDelMarRunRecord& RunRecord, const class FString& Name_0);

	void NetMulticast_LapRecorded(const struct FDelMarEvent_LapRecorded& InLapRecordedEvent);
	void NetMulticast_RunRecorded(const struct FDelMarEvent_RunRecorded& InRunRecordedEvent);
	void NetMulticast_SectionRecorded(const struct FDelMarEvent_SectionRecorded& InSectionRecordedEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRunRecordPlayerComponent">();
	}
	static class UDelMarRunRecordPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRunRecordPlayerComponent>();
	}
};

// Class DelMarCore.DelMarTutorialRequestComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDelMarTutorialRequestComponent final : public UDelMarPlayerStateComponent
{
public:
	TWeakObjectPtr<class AFortPlayerState>        PlayerState;                                       // 0x00A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarTutorialRaceManager> TutorialRaceManager;                            // 0x00A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void Replay();
	void Server_RequestNextSection();
	void Server_RequestPrevSection();
	void Server_RequestSection(int32 SectionIndex);
	void Server_RequestStartRace(const bool bSkipCountdown);

	void GoRace() const;
	void KeepTraining() const;
	void Server_KeepTraining() const;
	void TutorialComplete() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarTutorialRequestComponent">();
	}
	static class UDelMarTutorialRequestComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarTutorialRequestComponent>();
	}
};

// Class DelMarCore.DelMarLevelManagerComponent
// 0x00B0 (0x0150 - 0x00A0)
class UDelMarLevelManagerComponent final : public UPlayspaceComponent
{
public:
	uint8                                         Pad_A0[0x30];                                      // 0x00A0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UDelMarLevelDataAsset>   CurrentLevelData;                                  // 0x00D0(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOnlineLinkId                          CurrentLevelLinkId;                                // 0x00D8(0x0018)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  DesiredMapDescription;                             // 0x00F0(0x0020)(Net, Transient, NativeAccessSpecifierPrivate)
	struct FOnlineLinkId                          DesiredLinkId;                                     // 0x0110(0x0018)(Net, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x28];                                     // 0x0128(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RequestLevelLoad(const struct FGameplayTagContainer& DesiredMap);
	void ServerRequestLevel(const struct FGameplayTagContainer& DesiredMap);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLevelManagerComponent">();
	}
	static class UDelMarLevelManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarLevelManagerComponent>();
	}
};

// Class DelMarCore.DelMarLoadingScreenMutator
// 0x0010 (0x0348 - 0x0338)
class ADelMarLoadingScreenMutator final : public AFortAthenaMutator
{
public:
	uint8                                         Pad_338[0x10];                                     // 0x0338(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarLoadingScreenMutator">();
	}
	static class ADelMarLoadingScreenMutator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarLoadingScreenMutator>();
	}
};

// Class DelMarCore.DelMarPlayspace
// 0x0148 (0x0888 - 0x0740)
class ADelMarPlayspace final : public AFortPlayspace
{
public:
	uint8                                         Pad_740[0x48];                                     // 0x0740(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UFortPlaylistAthena>     MRSPlaylistData;                                   // 0x0788(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MRSLinkId;                                         // 0x0790(0x0010)(Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A0[0x10];                                     // 0x07A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UDelMarGameStateMachine*                PrimaryStateMachine;                               // 0x07B0(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldShowLoadingScreen;                          // 0x07B8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EDelMarRaceMode, TSoftClassPtr<class UClass>> DefaultRaceLevelConfigs;                      // 0x07C0(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      ActiveRaceManager;                                 // 0x0810(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortPlaylistAthena>     PlaylistData;                                      // 0x0818(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarLevelManagerComponent> LevelManager;                                 // 0x0820(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortLevelStreamComponent*              LevelStreamComponent;                              // 0x0828(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDelMarMapSet                          MapSet;                                            // 0x0830(0x0018)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  PlaylistDefinedMapTags;                            // 0x0848(0x0020)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_868[0x20];                                     // 0x0868(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ActiveRaceManagerUpdated();
	void OnRep_MRSLinkId();
	void RequestNextMapFromMapSet();
	void ServerRequestLoadingLevel(const struct FGameplayTagContainer& DesiredMap);
	void ServerRequestLoadingLevelWithLinkCode(const struct FOnlineLinkId& DesiredMap);
	void ServerReturnToSetup(const struct FGameplayTagContainer& OptionalMapToForceLoad);
	void ServerReturnToSetupWithLinkCode(const struct FOnlineLinkId& OptionalMapToForceLoad);
	void SetLoadingScreenVisibiliy(bool bInShouldShowLoadingScreen);
	bool ShouldShowLoadingScreen();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPlayspace">();
	}
	static class ADelMarPlayspace* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarPlayspace>();
	}
};

// Class DelMarCore.DelMarPreRaceControllerComponent
// 0x0070 (0x0110 - 0x00A0)
class UDelMarPreRaceControllerComponent final : public UControllerComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           NavigateAction;                                    // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FViewTargetTransitionParams            ViewTargetTransitionParams;                        // 0x00C0(0x0010)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         NavigateInputDeadzone;                             // 0x00D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDelMarPlayerInputManagerComponent> InputManagerClass;                         // 0x00D8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPlayerInputManagerComponent> InputManager;                           // 0x00E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UEnhancedInputComponent> InputComponent;                                    // 0x00E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UDelMarPositionalTrackerComponent> PositionTracker;                         // 0x00F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerState>        CurrentViewTarget;                                 // 0x00F8(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CellDistThreshold;                                 // 0x0100(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxGridDim;                                        // 0x0104(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ServerSetViewTarget(class AFortPlayerState* PlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPreRaceControllerComponent">();
	}
	static class UDelMarPreRaceControllerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPreRaceControllerComponent>();
	}
};

// Class DelMarCore.DelMarCheckpointManagerComponent
// 0x0068 (0x0108 - 0x00A0)
class UDelMarCheckpointManagerComponent final : public UDelMarRaceManagerComponent
{
public:
	bool                                          bPromptFirstPlaceEvent;                            // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarCheckpoint*                      StartingLineCheckpoint;                            // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADelMarCheckpoint*                      FinishLineCheckpoint;                              // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<class ADelMarCheckpoint*>                LevelCheckpoints;                                  // 0x00B8(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	void HandleRaceFinished(const struct FDelMarEvent_RaceFinished& Event);
	void HandleResetRace(const struct FDelMarEvent_ResetRace& Event);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCheckpointManagerComponent">();
	}
	static class UDelMarCheckpointManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCheckpointManagerComponent>();
	}
};

// Class DelMarCore.DelMarDeathRaceManager
// 0x0030 (0x04D8 - 0x04A8)
class ADelMarDeathRaceManager final : public ADelMarRaceManager
{
public:
	float                                         NextRoundSeconds;                                  // 0x04A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarDeathRaceConfig                 DeathRaceConfigData;                               // 0x04B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumPlayersFinished;                                // 0x04D0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetPointsAwardForPlacement(const int32 InPlacement) const;
	int32 GetScoreThresholdToEndMatch() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarDeathRaceManager">();
	}
	static class ADelMarDeathRaceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADelMarDeathRaceManager>();
	}
};

// Class DelMarCore.DelMarMatchmakeRatingComponentBase
// 0x0000 (0x00A0 - 0x00A0)
class UDelMarMatchmakeRatingComponentBase : public UDelMarRaceManagerComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarMatchmakeRatingComponentBase">();
	}
	static class UDelMarMatchmakeRatingComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarMatchmakeRatingComponentBase>();
	}
};

// Class DelMarCore.DelmarCompetitiveMatchmakeRatingComponent
// 0x0108 (0x01A8 - 0x00A0)
class UDelmarCompetitiveMatchmakeRatingComponent final : public UDelMarMatchmakeRatingComponentBase
{
public:
	TMap<class AFortPlayerState*, int32>          CachedPlayerRankMap;                               // 0x00A0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TSet<class FString>                           PlayerUniqueIdsGivenMMR;                           // 0x00F0(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TSet<class FString>                           PlayerUniqueIds;                                   // 0x0140(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_190[0x18];                                     // 0x0190(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelmarCompetitiveMatchmakeRatingComponent">();
	}
	static class UDelmarCompetitiveMatchmakeRatingComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelmarCompetitiveMatchmakeRatingComponent>();
	}
};

// Class DelMarCore.DelMarPositionalTrackerComponent
// 0x00B8 (0x0158 - 0x00A0)
class UDelMarPositionalTrackerComponent final : public UDelMarRaceManagerComponent
{
public:
	float                                         TargetUpdateRateInSeconds;                         // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x34];                                      // 0x00A4(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AFortPlayerState*, struct FDelMarPositionValue> SplinePositions;                      // 0x00D8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerState*>               RacePositions;                                     // 0x0128(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDelMarFinalRacePositionEntry>  FinalRacePositions;                                // 0x0138(0x0010)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	float                                         TimeSinceLastUpdate;                               // 0x0148(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumLapsInRace;                                     // 0x014C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_150[0x8];                                      // 0x0150(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_FinalRacePositions();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarPositionalTrackerComponent">();
	}
	static class UDelMarPositionalTrackerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarPositionalTrackerComponent>();
	}
};

// Class DelMarCore.DelMarRaceConfigComponent
// 0x0170 (0x0210 - 0x00A0)
class UDelMarRaceConfigComponent final : public UDelMarRaceManagerComponent
{
public:
	bool                                          bGhostReplayEnabled;                               // 0x00A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowExitingVehicles;                             // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetPlayerRunOnUnregister;                       // 0x00A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SecondsBeforeWrongwayWarning;                      // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeDemoWarningsAppear;                   // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeMissedCheckpointDemo;                 // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeReturnToTrackDemo;                    // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceFromTrackBeforeDemoWarning;                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   DefaultVehicleClass;                               // 0x00C0(0x0020)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UDelMarPlayerStateComponent>> ServerPlayerStateComponents;              // 0x00E0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UDelMarPlayerStateComponent>> ClientPlayerStateComponents;              // 0x00F0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UControllerComponent>> ServerControllerComponents;                      // 0x0100(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UControllerComponent>> ClientControllerComponents;                      // 0x0110(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class UDelMarSpectatorControllerComponent> SpectatorControllerComponentClass;        // 0x0120(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarMatchmakingConfig               MatchmakingConfig;                                 // 0x0128(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarStartlineConfig                 StartlineConfig;                                   // 0x0140(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDelMarVehicleRuntimeConfig            VehicleRuntimeConfig;                              // 0x0168(0x0014)(Edit, BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleAbilityConfig            VehicleAbilityConfig;                              // 0x017C(0x0011)(Edit, BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarRespawnConfig                   RespawnConfig;                                     // 0x0190(0x0010)(Edit, BlueprintVisible, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarRubberbandingConfig             DefaultRubberbandingConfig;                        // 0x01A0(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FDelMarRubberbandingMMRConfig>  RubberbandingMMRConfigs;                           // 0x01C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDelMarRubberbandingMMRConfig>  RubberbandingMMROverrideConfigs;                   // 0x01D8(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E8[0x28];                                     // 0x01E8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BroadcastVehicleAbilityConfigUpdated();
	void OnRep_VehicleAbilityConfig(const struct FDelMarVehicleAbilityConfig& OldConfig);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRaceConfigComponent">();
	}
	static class UDelMarRaceConfigComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRaceConfigComponent>();
	}
};

// Class DelMarCore.DelMarRequestTrackerComponent
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarRequestTrackerComponent final : public UDelMarRaceManagerComponent
{
public:
	struct FDelMarEvent_TrackedPlayerReadyStates  PlayerReadyStates;                                 // 0x00A0(0x0020)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	void OnRep_PlayerReadyStates();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRequestTrackerComponent">();
	}
	static class UDelMarRequestTrackerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRequestTrackerComponent>();
	}
};

// Class DelMarCore.DelMarRespawnManagerComponent
// 0x0098 (0x0138 - 0x00A0)
class UDelMarRespawnManagerComponent final : public UDelMarRaceManagerComponent
{
public:
	float                                         RespawnRetrySeconds;                               // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A4[0x14];                                      // 0x00A4(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UDelMarCheckpointManagerComponent> CachedCheckpointManager;                 // 0x00B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x00C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADelMarPlayerStart>      CachedChallengeStartSpawnPoint;                    // 0x00C8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AController>>     RespawnRetryQueue;                                 // 0x00D0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AFortPlayerState>, TWeakObjectPtr<class ADelMarVehicle>> LastSpawnedVehicleMap; // 0x00E0(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_130[0x8];                                      // 0x0130(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class ADelMarVehicle* RequestRespawnPawnAndVehicle(class AController* InController);
	class ADelMarVehicle* RequestRespawnVehicleForPawn(class AFortPlayerPawn* InPlayerPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRespawnManagerComponent">();
	}
	static class UDelMarRespawnManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRespawnManagerComponent>();
	}
};

// Class DelMarCore.DelMarRubberbandingManagerComponent
// 0x0048 (0x00E8 - 0x00A0)
class UDelMarRubberbandingManagerComponent final : public UDelMarRaceManagerComponent
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PackDistance;                                      // 0x00B8(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDelMarRubberbandingConfig             RubberbandingConfig;                               // 0x00BC(0x0028)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                         MMRUsed;                                           // 0x00E4(0x0004)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnRep_RubberbandingConfig();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarRubberbandingManagerComponent">();
	}
	static class UDelMarRubberbandingManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarRubberbandingManagerComponent>();
	}
};

// Class DelMarCore.DelMarGameStateMachine
// 0x0000 (0x01A8 - 0x01A8)
class UDelMarGameStateMachine final : public UDelMarStateMachine
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarGameStateMachine">();
	}
	static class UDelMarGameStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarGameStateMachine>();
	}
};

// Class DelMarCore.DelMarState_Gameplay
// 0x0000 (0x0030 - 0x0030)
class UDelMarState_Gameplay final : public UDelMarState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Gameplay">();
	}
	static class UDelMarState_Gameplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Gameplay>();
	}
};

// Class DelMarCore.DelMarState_Gameplay_ActiveRace
// 0x0000 (0x0030 - 0x0030)
class UDelMarState_Gameplay_ActiveRace final : public UDelMarGameplayState
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Gameplay_ActiveRace">();
	}
	static class UDelMarState_Gameplay_ActiveRace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Gameplay_ActiveRace>();
	}
};

// Class DelMarCore.DelMarState_Gameplay_Postrace
// 0x0280 (0x02B0 - 0x0030)
class UDelMarState_Gameplay_Postrace final : public UDelMarGameplayState
{
public:
	float                                         PostRaceDuration;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PostRaceEndServerTime;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<TWeakObjectPtr<class AFortPlayerState>>  ReadyPlayers;                                      // 0x0040(0x0050)(Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarPlayspace>        CachedPlayspace;                                   // 0x0090(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      CachedRaceManager;                                 // 0x0098(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A0[0x30];                                      // 0x00A0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EliminationList;                                   // 0x00D0(0x0010)(Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x1D0];                                     // 0x00E0(0x01D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_EliminationList();
	void OnRep_PostRaceEndServerTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Gameplay_Postrace">();
	}
	static class UDelMarState_Gameplay_Postrace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Gameplay_Postrace>();
	}
};

// Class DelMarCore.DelMarState_Gameplay_Prerace
// 0x0018 (0x0048 - 0x0030)
class UDelMarState_Gameplay_Prerace final : public UDelMarGameplayState
{
public:
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreRaceCountdownFinishServerTime;                  // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnRep_PreRaceCountdownFinishServerTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Gameplay_Prerace">();
	}
	static class UDelMarState_Gameplay_Prerace* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Gameplay_Prerace>();
	}
};

// Class DelMarCore.DelMarState_Gameplay_WaitingForPlayers
// 0x0030 (0x0060 - 0x0030)
class UDelMarState_Gameplay_WaitingForPlayers final : public UDelMarGameplayState
{
public:
	int32                                         MinPlayers;                                        // 0x0030(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADelMarRaceManager>      RaceManager;                                       // 0x0034(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDelMarEvent_LoadedPlayerStates        LoadedPlayerStates;                                // 0x003C(0x0008)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPartyBeaconHost>    FortPartyBeacon;                                   // 0x0044(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x14];                                      // 0x004C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_LoadedPlayerStates();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Gameplay_WaitingForPlayers">();
	}
	static class UDelMarState_Gameplay_WaitingForPlayers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Gameplay_WaitingForPlayers>();
	}
};

// Class DelMarCore.DelMarState_LevelSetup
// 0x0008 (0x0038 - 0x0030)
class UDelMarState_LevelSetup final : public UDelMarGameplayState
{
public:
	bool                                          bVehiclesReady;                                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bVehiclesSpawned;                                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_LevelSetup">();
	}
	static class UDelMarState_LevelSetup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_LevelSetup>();
	}
};

// Class DelMarCore.DelMarState_Loading
// 0x0038 (0x0068 - 0x0030)
class UDelMarState_Loading final : public UDelMarGameplayState
{
public:
	float                                         DelayBeforeLoadingActuallyStarts;                  // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DesiredMap;                                        // 0x0038(0x0020)(Net, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Loading">();
	}
	static class UDelMarState_Loading* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Loading>();
	}
};

// Class DelMarCore.DelMarState_Lobby
// 0x0008 (0x0038 - 0x0030)
class UDelMarState_Lobby final : public UDelMarGameplayState
{
public:
	bool                                          bLevelLoadRequested;                               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Lobby">();
	}
	static class UDelMarState_Lobby* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Lobby>();
	}
};

// Class DelMarCore.DelMarState_Setup
// 0x0050 (0x0080 - 0x0030)
class UDelMarState_Setup final : public UDelMarGameplayState
{
public:
	bool                                          bHasRequestedLink;                                 // 0x0030(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasRecievedMatchAssignment;                       // 0x0031(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRequiresMatchAssignmentToProceed;                 // 0x0032(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCalledMapRotationService;                         // 0x0033(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DebugMapToLoad;                                    // 0x0038(0x0020)(Transient, NativeAccessSpecifierPrivate)
	struct FOnlineLinkId                          DebugIslandCodeToLoad;                             // 0x0058(0x0018)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarState_Setup">();
	}
	static class UDelMarState_Setup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarState_Setup>();
	}
};

// Class DelMarCore.DelMarCameraShakeComponent
// 0x04D0 (0x0570 - 0x00A0)
class UDelMarCameraShakeComponent final : public UControllerComponent
{
public:
	TMap<EBrelmarCameraShake, float>              ShakeIntensitySettingMap;                          // 0x00A0(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>           JumpShakeEffect;                                   // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>           HazardShakeEffect;                                 // 0x00F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseVehicleLandedKickflipShake;                    // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           VehicleLandedKickflipShake;                        // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     VehicleLandedKickflipShakeIntensityCurve;          // 0x0110(0x0090)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShakeBase>           VehicleLandedCameraShakeEffect;                    // 0x01A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarScaledCurve                     VehicleLandedShakeIntensityCurve;                  // 0x01A8(0x0090)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         MaxSecondsToDampenVehicleHit;                      // 0x0238(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarScaledCurve                     VehicleHitShakeIntensityCurve;                     // 0x0240(0x0090)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarDynamicCameraShakeEffect        VehicleImpactShakeEffect;                          // 0x02D0(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDelMarDynamicCameraShakeEffect        WallImpactShakeEffect;                             // 0x0370(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDelMarDynamicCameraShakeEffect        WallNoRedirectImpactShakeEffect;                   // 0x0410(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDelMarDynamicCameraShakeEffect        BaseAccelerationShakeEffect;                       // 0x04B0(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TScriptInterface<class IDelMarVehicleInterface> Vehicle;                                         // 0x0550(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerController>   CachedPlayerController;                            // 0x0560(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_568[0x8];                                      // 0x0568(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCameraShakeIntensitySettingsChanged(class UFortClientSettingsRecord* Settings);
	void OnHazardHit();
	void OnJumpActivated();
	void OnVehicleHitVehicle(float Magnitude, const struct FVector& WorldLocation);
	void OnVehicleHitWall(float Magnitude, const struct FVector& WorldLocation, float ForwardRotationDegrees);
	void OnVehicleLanded(float LandingForce, bool bLandedKickflip);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarCameraShakeComponent">();
	}
	static class UDelMarCameraShakeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarCameraShakeComponent>();
	}
};

// Class DelMarCore.DelMarVehicleConfigs
// 0x1988 (0x2308 - 0x0980)
class UDelMarVehicleConfigs final : public UFortPhysicsVehicleConfigs
{
public:
	struct FDelMarVehicleCollisionConfig          Collision;                                         // 0x0980(0x0218)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDelMarVehicleBodySetup*                DefaultBodySetup;                                  // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDelMarVehicleBodySetupMap*             BodySetupMap;                                      // 0x0BA0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarVehicleDriveSetup               DriveSetup;                                        // 0x0BA8(0x0370)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDelMarPhysMatAttributeMap*             PhysMatAttributeMap;                               // 0x0F18(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarVehicleRigidBodyConfig          RigidBody;                                         // 0x0F20(0x0038)(Edit, BlueprintVisible, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Terrain           Terrain;                                           // 0x0F58(0x0030)(Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_WorldBonusSpeed   WorldBonusSpeed;                                   // 0x0F88(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_AutoAerialRotation AerialRotation;                                   // 0x0FB0(0x00A8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_AirControl        AirControl;                                        // 0x1058(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_AirFreestyle      AirFreestyle;                                      // 0x1128(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_AirThrottle       AirThrottle;                                       // 0x1158(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_AutoUpright       AutoUpright;                                       // 0x11F8(0x0024)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_121C[0x4];                                     // 0x121C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarVehicleDraftingConfig           Drafting;                                          // 0x1220(0x00C8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleDriftConfig              Drift;                                             // 0x12E8(0x0718)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleDriftBoostConfig         DriftBoost;                                        // 0x1A00(0x01D8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Gravity           Gravity;                                           // 0x1BD8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Jump              Jump;                                              // 0x1BF8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Kickflip          Kickflip;                                          // 0x1C10(0x0158)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleOversteerConfig          Oversteer;                                         // 0x1D68(0x0138)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Reattachment      Reattachment;                                      // 0x1EA0(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Rubberbanding     Rubberbanding;                                     // 0x1F40(0x01B8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_StartlineBoost    StartlineBoost;                                    // 0x20F8(0x00A8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Strafe            Strafe;                                            // 0x21A0(0x001C)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_21BC[0x4];                                     // 0x21BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDelMarVehicleTurboConfig              Turbo;                                             // 0x21C0(0x0070)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDelMarVehicleConfig_Underthrust       Underthrust;                                       // 0x2230(0x00D8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleConfigs">();
	}
	static class UDelMarVehicleConfigs* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleConfigs>();
	}
};

// Class DelMarCore.DelMarVehicleCosmeticComponent
// 0x0050 (0x00F0 - 0x00A0)
class UDelMarVehicleCosmeticComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class ADelMarCosmeticActor* CosmeticActor)> OnCosmeticActorSpawned; // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnAllCosmeticActorsSpawned;                        // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           StaticCosmeticActorClasses;                        // 0x00C0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ADelMarCosmeticActor>> AllowedServerCosmeticActorClasses;               // 0x00D0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class ADelMarCosmeticActor*>           SpawnedCosmeticActors;                             // 0x00E0(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	class ADelMarCosmeticActor* GetCosmeticActor(TSubclassOf<class ADelMarCosmeticActor> CosmeticClass, bool bLookForChildClasses) const;
	TArray<class ADelMarCosmeticActor*> GetCosmeticActors(TSubclassOf<class ADelMarCosmeticActor> CosmeticClass, bool bLookForChildClasses) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleCosmeticComponent">();
	}
	static class UDelMarVehicleCosmeticComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleCosmeticComponent>();
	}
};

// Class DelMarCore.DelMarVehicleForceFeedbackComponent
// 0x0358 (0x03F8 - 0x00A0)
class UDelMarVehicleForceFeedbackComponent final : public UControllerComponent
{
public:
	struct FDelMarDynamicForceFeedbackEffect      DrivingForceFeedback;                              // 0x00A0(0x0128)(Edit, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   JumpForceFeedbackEffect;                           // 0x01C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   OversteerLeftForceFeedbackEffect;                  // 0x01D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   OversteerRightForceFeedbackEffect;                 // 0x01D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UForceFeedbackEffect*>           LandingForceFeedbackEffects;                       // 0x01E0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     LandingForceLevelLookupCurve;                      // 0x01F0(0x0088)(Edit, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   TurboForceFeedbackEffect;                          // 0x0278(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDelMarDynamicForceFeedbackEffect      DriftForceFeedback;                                // 0x0280(0x0128)(Edit, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   DriftUncontrolledForceFeedbackEffect;              // 0x03A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   DriftBoostForceFeedbackEffect;                     // 0x03B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                   DriftTractionForceFeedback;                        // 0x03B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTractionDriftShakeAngle;                        // 0x03C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   HazardHitForceFeedback;                            // 0x03C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IDelMarVehicleInterface> Vehicle;                                         // 0x03D0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APlayerController>       CachedPlayerController;                            // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UForceFeedbackEffect>    CurrentOversteerForceFeedbackEffect;               // 0x03E8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F0[0x8];                                      // 0x03F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleLoadingScreenVisibilityChanged(bool bVisibility);
	void OnDriftActivated();
	void OnDriftBoostActivated();
	void OnDriftBoostDeactivated();
	void OnDriftControlChanged(bool bIsDriftControlled);
	void OnDriftDeactivated();
	void OnHazardHit();
	void OnJumpActivated();
	void OnTurboActivated();
	void OnTurboDeactivated();
	void OnUnderthrustActivated();
	void OnUnderthrustDeactivated();
	void OnVehicleLanded(float LandingForce, bool bLandedKickflip);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleForceFeedbackComponent">();
	}
	static class UDelMarVehicleForceFeedbackComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleForceFeedbackComponent>();
	}
};

// Class DelMarCore.DelMarVehicleMovementSet
// 0x0078 (0x00A8 - 0x0030)
class UDelMarVehicleMovementSet final : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData             AccelMultiplier;                                   // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData             bVehicleThrottleDisabled;                          // 0x0058(0x0028)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData             BonusSpeed;                                        // 0x0080(0x0028)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	void OnRep_AccelMultiplier(const struct FFortGameplayAttributeData& OldSpeedMultiplier);
	void OnRep_BonusSpeed(const struct FFortGameplayAttributeData& OldBonusSpeed);
	void OnRep_VehicleThrottleDisabled(const struct FFortGameplayAttributeData& OldInputDisabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleMovementSet">();
	}
	static class UDelMarVehicleMovementSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleMovementSet>();
	}
};

// Class DelMarCore.DelMarVehicleTurboManagerComponent
// 0x0020 (0x00C0 - 0x00A0)
class UDelMarVehicleTurboManagerComponent final : public UActorComponent
{
public:
	float                                         TurboCharges;                                      // 0x00A0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RechargeRateSeconds;                               // 0x00A4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxCharges;                                        // 0x00A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADelMarVehicle*                         OwnerVehicle;                                      // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleTurboChargeUsed();
	void ModifyTurboCharges(float TurboChargeAmount);
	void ModifyTurboCharges_Delayed(float TurboChargeAmount);
	void OnConfigOverridesSet();
	void SetTurboCharges(float TurboChargeAmount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DelMarVehicleTurboManagerComponent">();
	}
	static class UDelMarVehicleTurboManagerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDelMarVehicleTurboManagerComponent>();
	}
};

}

