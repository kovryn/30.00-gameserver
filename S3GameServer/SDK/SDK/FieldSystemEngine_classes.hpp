#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FieldSystemEngine

#include "Basic.hpp"

#include "FieldSystemEngine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Chaos_structs.hpp"


namespace SDK
{

// Class FieldSystemEngine.FieldSystemActor
// 0x0008 (0x0298 - 0x0290)
class AFieldSystemActor : public AActor
{
public:
	class UFieldSystemComponent*                  FieldSystemComponent;                              // 0x0290(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystemActor">();
	}
	static class AFieldSystemActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFieldSystemActor>();
	}
};

// Class FieldSystemEngine.FieldSystem
// 0x0010 (0x0038 - 0x0028)
class UFieldSystem final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystem">();
	}
	static class UFieldSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldSystem>();
	}
};

// Class FieldSystemEngine.FieldSystemComponent
// 0x00D0 (0x05E0 - 0x0510)
class UFieldSystemComponent final : public UPrimitiveComponent
{
public:
	class UFieldSystem*                           FieldSystem;                                       // 0x0508(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsWorldField;                                     // 0x0510(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsChaosField;                                     // 0x0511(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AChaosSolverActor>> SupportedSolvers;                                // 0x0518(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FFieldObjectCommands                   ConstructionCommands;                              // 0x0528(0x0030)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FFieldObjectCommands                   BufferCommands;                                    // 0x0558(0x0030)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_588[0x58];                                     // 0x0588(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddFieldCommand(bool Enabled, EFieldPhysicsType Target, class UFieldSystemMetaData* MetaData, class UFieldNodeBase* Field);
	void AddPersistentField(bool Enabled, EFieldPhysicsType Target, class UFieldSystemMetaData* MetaData, class UFieldNodeBase* Field);
	void ApplyLinearForce(bool Enabled, const struct FVector& Direction, float Magnitude);
	void ApplyPhysicsField(bool Enabled, EFieldPhysicsType Target, class UFieldSystemMetaData* MetaData, class UFieldNodeBase* Field);
	void ApplyRadialForce(bool Enabled, const struct FVector& Position, float Magnitude);
	void ApplyRadialVectorFalloffForce(bool Enabled, const struct FVector& Position, float Radius, float Magnitude);
	void ApplyStayDynamicField(bool Enabled, const struct FVector& Position, float Radius);
	void ApplyStrainField(bool Enabled, const struct FVector& Position, float Radius, float Magnitude, int32 Iterations);
	void ApplyUniformVectorFalloffForce(bool Enabled, const struct FVector& Position, const struct FVector& Direction, float Radius, float Magnitude);
	void RemovePersistentFields();
	void ResetFieldSystem();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystemComponent">();
	}
	static class UFieldSystemComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldSystemComponent>();
	}
};

// Class FieldSystemEngine.FieldSystemMetaData
// 0x0000 (0x00A0 - 0x00A0)
class UFieldSystemMetaData : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystemMetaData">();
	}
	static class UFieldSystemMetaData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldSystemMetaData>();
	}
};

// Class FieldSystemEngine.FieldSystemMetaDataIteration
// 0x0008 (0x00A8 - 0x00A0)
class UFieldSystemMetaDataIteration final : public UFieldSystemMetaData
{
public:
	int32                                         Iterations;                                        // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFieldSystemMetaDataIteration* SetMetaDataIteration(int32 Iterations_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystemMetaDataIteration">();
	}
	static class UFieldSystemMetaDataIteration* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldSystemMetaDataIteration>();
	}
};

// Class FieldSystemEngine.FieldSystemMetaDataProcessingResolution
// 0x0008 (0x00A8 - 0x00A0)
class UFieldSystemMetaDataProcessingResolution final : public UFieldSystemMetaData
{
public:
	EFieldResolutionType                          ResolutionType;                                    // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFieldSystemMetaDataProcessingResolution* SetMetaDataaProcessingResolutionType(EFieldResolutionType ResolutionType_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystemMetaDataProcessingResolution">();
	}
	static class UFieldSystemMetaDataProcessingResolution* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldSystemMetaDataProcessingResolution>();
	}
};

// Class FieldSystemEngine.FieldSystemMetaDataFilter
// 0x0008 (0x00A8 - 0x00A0)
class UFieldSystemMetaDataFilter final : public UFieldSystemMetaData
{
public:
	EFieldFilterType                              FilterType;                                        // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldObjectType                              ObjectType;                                        // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldPositionType                            PositionType;                                      // 0x00A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFieldSystemMetaDataFilter* SetMetaDataFilterType(EFieldFilterType FilterType_0, EFieldObjectType ObjectType_0, EFieldPositionType PositionType_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldSystemMetaDataFilter">();
	}
	static class UFieldSystemMetaDataFilter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldSystemMetaDataFilter>();
	}
};

// Class FieldSystemEngine.FieldNodeBase
// 0x0000 (0x00A0 - 0x00A0)
class UFieldNodeBase : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldNodeBase">();
	}
	static class UFieldNodeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldNodeBase>();
	}
};

// Class FieldSystemEngine.FieldNodeInt
// 0x0000 (0x00A0 - 0x00A0)
class UFieldNodeInt : public UFieldNodeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldNodeInt">();
	}
	static class UFieldNodeInt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldNodeInt>();
	}
};

// Class FieldSystemEngine.FieldNodeFloat
// 0x0000 (0x00A0 - 0x00A0)
class UFieldNodeFloat : public UFieldNodeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldNodeFloat">();
	}
	static class UFieldNodeFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldNodeFloat>();
	}
};

// Class FieldSystemEngine.FieldNodeVector
// 0x0000 (0x00A0 - 0x00A0)
class UFieldNodeVector : public UFieldNodeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FieldNodeVector">();
	}
	static class UFieldNodeVector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldNodeVector>();
	}
};

// Class FieldSystemEngine.UniformInteger
// 0x0008 (0x00A8 - 0x00A0)
class UUniformInteger final : public UFieldNodeInt
{
public:
	int32                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UUniformInteger* SetUniformInteger(int32 Magnitude_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UniformInteger">();
	}
	static class UUniformInteger* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUniformInteger>();
	}
};

// Class FieldSystemEngine.RadialIntMask
// 0x0030 (0x00D0 - 0x00A0)
class URadialIntMask final : public UFieldNodeInt
{
public:
	float                                         Radius;                                            // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InteriorValue;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExteriorValue;                                     // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESetMaskConditionType                         SetMaskCondition;                                  // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class URadialIntMask* SetRadialIntMask(float Radius_0, const struct FVector& Position_0, int32 InteriorValue_0, int32 ExteriorValue_0, ESetMaskConditionType SetMaskConditionIn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RadialIntMask">();
	}
	static class URadialIntMask* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialIntMask>();
	}
};

// Class FieldSystemEngine.UniformScalar
// 0x0008 (0x00A8 - 0x00A0)
class UUniformScalar final : public UFieldNodeFloat
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UUniformScalar* SetUniformScalar(float Magnitude_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UniformScalar">();
	}
	static class UUniformScalar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUniformScalar>();
	}
};

// Class FieldSystemEngine.WaveScalar
// 0x0030 (0x00D0 - 0x00A0)
class UWaveScalar final : public UFieldNodeFloat
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaveLength;                                        // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Period;                                            // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWaveFunctionType                             Function;                                          // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldFalloffType                             Falloff;                                           // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWaveScalar* SetWaveScalar(float Magnitude_0, const struct FVector& Position_0, float WaveLength_0, float Period_0, float Time, EWaveFunctionType Function_0, EFieldFalloffType Falloff_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WaveScalar">();
	}
	static class UWaveScalar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaveScalar>();
	}
};

// Class FieldSystemEngine.RadialFalloff
// 0x0038 (0x00D8 - 0x00A0)
class URadialFalloff final : public UFieldNodeFloat
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRange;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Default;                                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldFalloffType                             Falloff;                                           // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class URadialFalloff* SetRadialFalloff(float Magnitude_0, float MinRange_0, float MaxRange_0, float Default_0, float Radius_0, const struct FVector& Position_0, EFieldFalloffType Falloff_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RadialFalloff">();
	}
	static class URadialFalloff* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialFalloff>();
	}
};

// Class FieldSystemEngine.PlaneFalloff
// 0x0050 (0x00F0 - 0x00A0)
class UPlaneFalloff final : public UFieldNodeFloat
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRange;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Default;                                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Normal;                                            // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldFalloffType                             Falloff;                                           // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UPlaneFalloff* SetPlaneFalloff(float Magnitude_0, float MinRange_0, float MaxRange_0, float Default_0, float Distance_0, const struct FVector& Position_0, const struct FVector& Normal_0, EFieldFalloffType Falloff_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneFalloff">();
	}
	static class UPlaneFalloff* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneFalloff>();
	}
};

// Class FieldSystemEngine.BoxFalloff
// 0x0080 (0x0120 - 0x00A0)
class UBoxFalloff final : public UFieldNodeFloat
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRange;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Default;                                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x00B0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldFalloffType                             Falloff;                                           // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UBoxFalloff* SetBoxFalloff(float Magnitude_0, float MinRange_0, float MaxRange_0, float Default_0, const struct FTransform& Transform_0, EFieldFalloffType Falloff_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BoxFalloff">();
	}
	static class UBoxFalloff* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBoxFalloff>();
	}
};

// Class FieldSystemEngine.NoiseField
// 0x0070 (0x0110 - 0x00A0)
class UNoiseField final : public UFieldNodeFloat
{
public:
	float                                         MinRange;                                          // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRange;                                          // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x00B0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UNoiseField* SetNoiseField(float MinRange_0, float MaxRange_0, const struct FTransform& Transform_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NoiseField">();
	}
	static class UNoiseField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoiseField>();
	}
};

// Class FieldSystemEngine.UniformVector
// 0x0020 (0x00C0 - 0x00A0)
class UUniformVector final : public UFieldNodeVector
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UUniformVector* SetUniformVector(float Magnitude_0, const struct FVector& Direction_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UniformVector">();
	}
	static class UUniformVector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUniformVector>();
	}
};

// Class FieldSystemEngine.RadialVector
// 0x0020 (0x00C0 - 0x00A0)
class URadialVector final : public UFieldNodeVector
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class URadialVector* SetRadialVector(float Magnitude_0, const struct FVector& Position_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RadialVector">();
	}
	static class URadialVector* GetDefaultObj()
	{
		return GetDefaultObjImpl<URadialVector>();
	}
};

// Class FieldSystemEngine.RandomVector
// 0x0008 (0x00A8 - 0x00A0)
class URandomVector final : public UFieldNodeVector
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class URandomVector* SetRandomVector(float Magnitude_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RandomVector">();
	}
	static class URandomVector* GetDefaultObj()
	{
		return GetDefaultObjImpl<URandomVector>();
	}
};

// Class FieldSystemEngine.OperatorField
// 0x0020 (0x00C0 - 0x00A0)
class UOperatorField final : public UFieldNodeBase
{
public:
	float                                         Magnitude;                                         // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldNodeBase*                         RightField;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFieldNodeBase*                         LeftField;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldOperationType                           Operation;                                         // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UOperatorField* SetOperatorField(float Magnitude_0, const class UFieldNodeBase* LeftField_0, const class UFieldNodeBase* RightField_0, EFieldOperationType Operation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OperatorField">();
	}
	static class UOperatorField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOperatorField>();
	}
};

// Class FieldSystemEngine.ToIntegerField
// 0x0008 (0x00A8 - 0x00A0)
class UToIntegerField final : public UFieldNodeInt
{
public:
	class UFieldNodeFloat*                        FloatField;                                        // 0x00A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UToIntegerField* SetToIntegerField(const class UFieldNodeFloat* FloatField_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ToIntegerField">();
	}
	static class UToIntegerField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToIntegerField>();
	}
};

// Class FieldSystemEngine.ToFloatField
// 0x0008 (0x00A8 - 0x00A0)
class UToFloatField final : public UFieldNodeFloat
{
public:
	class UFieldNodeInt*                          IntField;                                          // 0x00A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UToFloatField* SetToFloatField(const class UFieldNodeInt* IntegerField);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ToFloatField">();
	}
	static class UToFloatField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UToFloatField>();
	}
};

// Class FieldSystemEngine.CullingField
// 0x0018 (0x00B8 - 0x00A0)
class UCullingField final : public UFieldNodeBase
{
public:
	class UFieldNodeBase*                         Culling;                                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFieldNodeBase*                         Field;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFieldCullingOperationType                    Operation;                                         // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UCullingField* SetCullingField(const class UFieldNodeBase* Culling_0, const class UFieldNodeBase* Field_0, EFieldCullingOperationType Operation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CullingField">();
	}
	static class UCullingField* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCullingField>();
	}
};

// Class FieldSystemEngine.ReturnResultsTerminal
// 0x0000 (0x00A0 - 0x00A0)
class UReturnResultsTerminal final : public UFieldNodeBase
{
public:
	class UReturnResultsTerminal* SetReturnResultsTerminal();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReturnResultsTerminal">();
	}
	static class UReturnResultsTerminal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReturnResultsTerminal>();
	}
};

}

