#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIFramework

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "UIFramework_structs.hpp"
#include "Engine_classes.hpp"
#include "ModelViewViewModel_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "LocalizableMessage_structs.hpp"


namespace SDK
{

// Class UIFramework.UIFrameworkLocalSettings
// 0x0058 (0x0088 - 0x0030)
class UUIFrameworkLocalSettings final : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UObject>                 ErrorResource;                                     // 0x0030(0x0020)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 LoadingResource;                                   // 0x0050(0x0020)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkLocalSettings">();
	}
	static class UUIFrameworkLocalSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkLocalSettings>();
	}
};

// Class UIFramework.UIFrameworkPlayerComponent
// 0x0438 (0x04D8 - 0x00A0)
class UUIFrameworkPlayerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIFrameworkGameLayerSlotList          RootList;                                          // 0x00A8(0x0120)(Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FUIFrameworkWidgetTree                 WidgetTree;                                        // 0x01C8(0x01F8)(Net, NativeAccessSpecifierPrivate)
	class UUIFrameworkPresenter*                  Presenter;                                         // 0x03C0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<int32>                                   NetReplicationPending;                             // 0x03C8(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TSet<int32>                                   AddPending;                                        // 0x0418(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x70];                                     // 0x0468(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddWidget(const struct FUIFrameworkGameLayerSlot& Widget);
	void RemoveWidget(class UUIFrameworkWidget* Widget);
	void ServerRemoveWidgetRootFromTree(const struct FUIFrameworkWidgetId& WidgetId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkPlayerComponent">();
	}
	static class UUIFrameworkPlayerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkPlayerComponent>();
	}
};

// Class UIFramework.UIFrameworkPresenter
// 0x0000 (0x0028 - 0x0028)
class UUIFrameworkPresenter : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkPresenter">();
	}
	static class UUIFrameworkPresenter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkPresenter>();
	}
};

// Class UIFramework.UIFrameworkGameViewportPresenter
// 0x0010 (0x0038 - 0x0028)
class UUIFrameworkGameViewportPresenter : public UUIFrameworkPresenter
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkGameViewportPresenter">();
	}
	static class UUIFrameworkGameViewportPresenter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkGameViewportPresenter>();
	}
};

// Class UIFramework.UIFrameworkWidgetWrapperInterface
// 0x0000 (0x0000 - 0x0000)
class IUIFrameworkWidgetWrapperInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkWidgetWrapperInterface">();
	}
	static class IUIFrameworkWidgetWrapperInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IUIFrameworkWidgetWrapperInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class UIFramework.UIFrameworkWidget
// 0x0060 (0x00C8 - 0x0068)
class UUIFrameworkWidget : public UMVVMViewModelBase
{
public:
	bool                                          bIsEnabled;                                        // 0x0068(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESlateVisibility                              Visibility;                                        // 0x0069(0x0001)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   WidgetClass;                                       // 0x0070(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUIFrameworkWidgetId                   ID;                                                // 0x0090(0x0008)(Net, Transient, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IUIFrameworkWidgetWrapperInterface> AuthorityWrapper;                     // 0x0098(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIFrameworkParentWidget               AuthorityParent;                                   // 0x00B0(0x0010)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	class UWidget*                                LocalUMGWidget;                                    // 0x00C0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_IsEnabled();
	void OnRep_Visibility();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkWidget">();
	}
	static class UUIFrameworkWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkWidget>();
	}
};

// Class UIFramework.UIFrameworkButton
// 0x0058 (0x0120 - 0x00C8)
class UUIFrameworkButton final : public UUIFrameworkWidget
{
public:
	uint8                                         Pad_C8[0x18];                                      // 0x00C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIFrameworkSimpleSlot                 Slot;                                              // 0x00E0(0x0040)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void HandleClick();
	void OnRep_Slot();
	void ServerClick(class APlayerController* PlayerController);
	void SetContent(const struct FUIFrameworkSimpleSlot& Content);

	struct FUIFrameworkSimpleSlot GetContent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkButton">();
	}
	static class UUIFrameworkButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkButton>();
	}
};

// Class UIFramework.UIFrameworkButtonWidget
// 0x0000 (0x05C0 - 0x05C0)
class UUIFrameworkButtonWidget final : public UButton
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkButtonWidget">();
	}
	static class UUIFrameworkButtonWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkButtonWidget>();
	}
};

// Class UIFramework.UIFrameworkCanvasBox
// 0x0120 (0x01E8 - 0x00C8)
class UUIFrameworkCanvasBox final : public UUIFrameworkWidget
{
public:
	struct FUIFrameworkCanvasBoxSlotList          ReplicatedSlotList;                                // 0x00C8(0x0120)(Net, NativeAccessSpecifierPrivate)

public:
	void AddWidget(const struct FUIFrameworkCanvasBoxSlot& Widget);
	void RemoveWidget(class UUIFrameworkWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkCanvasBox">();
	}
	static class UUIFrameworkCanvasBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkCanvasBox>();
	}
};

// Class UIFramework.UIFrameworkColorBlock
// 0x0018 (0x00E0 - 0x00C8)
class UUIFrameworkColorBlock final : public UUIFrameworkWidget
{
public:
	struct FLinearColor                           Color;                                             // 0x00C8(0x0010)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2f                              DesiredSize;                                       // 0x00D8(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_Color();
	void OnRep_DesiredSize();
	void SetColor(const struct FLinearColor& Tint);
	void SetDesiredSize(const struct FVector2f& DesiredSize_0);

	struct FLinearColor GetColor() const;
	struct FVector2f GetDesiredSize() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkColorBlock">();
	}
	static class UUIFrameworkColorBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkColorBlock>();
	}
};

// Class UIFramework.UIFrameworkImageBlock
// 0x0060 (0x0128 - 0x00C8)
class UUIFrameworkImageBlock final : public UUIFrameworkWidget
{
public:
	struct FUIFrameworkImageBlockData             Data;                                              // 0x00C8(0x0040)(Net, RepNotify, NativeAccessSpecifierPrivate)
	bool                                          bWaitForResourceToBeLoaded;                        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_109[0x1F];                                     // 0x0109(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_Data();
	void SetDesiredSize(const struct FVector2f& DesiredSize);
	void SetMaterial(TSoftObjectPtr<class UMaterialInterface> Material);
	void SetTexture(TSoftObjectPtr<class UTexture2D> Texture, bool bUseTextureSize);
	void SetTiling(ESlateBrushTileType OverflowPolicy);
	void SetTint(const struct FLinearColor& Tint);

	TSoftObjectPtr<class UObject> GeResourceObject() const;
	struct FVector2f GetDesiredSize() const;
	ESlateBrushTileType GetTiling() const;
	struct FLinearColor GetTint() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkImageBlock">();
	}
	static class UUIFrameworkImageBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkImageBlock>();
	}
};

// Class UIFramework.UIFrameworkOverlay
// 0x0120 (0x01E8 - 0x00C8)
class UUIFrameworkOverlay final : public UUIFrameworkWidget
{
public:
	struct FUIFrameworkOverlaySlotList            ReplicatedSlotList;                                // 0x00C8(0x0120)(Net, NativeAccessSpecifierPrivate)

public:
	void AddWidget(const struct FUIFrameworkOverlaySlot& Widget);
	void RemoveWidget(class UUIFrameworkWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkOverlay">();
	}
	static class UUIFrameworkOverlay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkOverlay>();
	}
};

// Class UIFramework.UIFrameworkStackBox
// 0x0128 (0x01F0 - 0x00C8)
class UUIFrameworkStackBox final : public UUIFrameworkWidget
{
public:
	EOrientation                                  orientation;                                       // 0x00C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIFrameworkStackBoxSlotList           ReplicatedSlotList;                                // 0x00D0(0x0120)(Net, NativeAccessSpecifierPrivate)

public:
	void AddWidget(const struct FUIFrameworkStackBoxSlot& Widget);
	void OnRep_Orientation();
	void RemoveWidget(class UUIFrameworkWidget* Widget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkStackBox">();
	}
	static class UUIFrameworkStackBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkStackBox>();
	}
};

// Class UIFramework.UIFrameworkTextBase
// 0x0058 (0x0120 - 0x00C8)
class UUIFrameworkTextBase : public UUIFrameworkWidget
{
public:
	class FText                                   Text;                                              // 0x00C8(0x0010)(Transient, NativeAccessSpecifierPrivate)
	struct FLocalizableMessage                    Message;                                           // 0x00D8(0x0030)(Net, RepNotify, NativeAccessSpecifierPrivate)
	struct FLinearColor                           TextColor;                                         // 0x0108(0x0010)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETextJustify                                  Justification;                                     // 0x0118(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETextOverflowPolicy                           OverflowPolicy;                                    // 0x0119(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_Justification();
	void OnRep_Message();
	void OnRep_OverflowPolicy();
	void OnRep_TextColor();
	void SetJustification(ETextJustify Justification_0);
	void SetOverflowPolicy(ETextOverflowPolicy OverflowPolicy_0);
	void SetTextColor(const struct FLinearColor& TextColor_0);

	ETextJustify GetJustification() const;
	ETextOverflowPolicy GetOverflowPolicy() const;
	class FText GetText() const;
	struct FLinearColor GetTextColor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkTextBase">();
	}
	static class UUIFrameworkTextBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkTextBase>();
	}
};

// Class UIFramework.UIFrameworkTextBlock
// 0x0018 (0x0138 - 0x0120)
class UUIFrameworkTextBlock : public UUIFrameworkTextBase
{
public:
	struct FVector2f                              ShadowOffset;                                      // 0x0120(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           ShadowColor;                                       // 0x0128(0x0010)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRep_ShadowColor();
	void OnRep_ShadowOffset();
	void SetShadowColor(const struct FLinearColor& ShadowColor_0);
	void SetShadowOffset(const struct FVector2f& ShadowOffset_0);

	struct FLinearColor GetShadowColor() const;
	struct FVector2f GetShadowOffset() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkTextBlock">();
	}
	static class UUIFrameworkTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkTextBlock>();
	}
};

// Class UIFramework.UIFrameworkUserWidget
// 0x0120 (0x01E8 - 0x00C8)
class UUIFrameworkUserWidget : public UUIFrameworkWidget
{
public:
	struct FUIFrameworkUserWidgetNamedSlotList    ReplicatedNamedSlotList;                           // 0x00C8(0x0120)(Net, NativeAccessSpecifierPrivate)

public:
	void SetNamedSlot(class FName SlotName, class UUIFrameworkWidget* Widget);
	void SetWidgetClass(TSoftClassPtr<class UClass> Value);

	class UUIFrameworkWidget* GetNamedSlot(class FName SlotName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UIFrameworkUserWidget">();
	}
	static class UUIFrameworkUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIFrameworkUserWidget>();
	}
};

}

