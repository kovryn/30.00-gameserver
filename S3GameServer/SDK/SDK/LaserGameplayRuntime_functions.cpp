#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LaserGameplayRuntime

#include "Basic.hpp"

#include "LaserGameplayRuntime_classes.hpp"
#include "LaserGameplayRuntime_parameters.hpp"


namespace SDK
{

// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.CosmeticDestroyOutletInstance
// (BlueprintCosmetic, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FLaserGridOutletEntry&     OutletEntry                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::CosmeticDestroyOutletInstance(const struct FLaserGridOutletEntry& OutletEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "CosmeticDestroyOutletInstance");

	Params::BuildingGameplayActorLaserGrid_CosmeticDestroyOutletInstance Parms{};

	Parms.OutletEntry = std::move(OutletEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.HandleAttachedBuildingActorDied
// (Final, Native, Private, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Momentum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::HandleAttachedBuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "HandleAttachedBuildingActorDied");

	Params::BuildingGameplayActorLaserGrid_HandleAttachedBuildingActorDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.HandleLaserCollisionOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::HandleLaserCollisionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "HandleLaserCollisionOverlap");

	Params::BuildingGameplayActorLaserGrid_HandleLaserCollisionOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.HandlePatternTimerComplete_PostTransition
// (Final, Native, Private)

void ABuildingGameplayActorLaserGrid::HandlePatternTimerComplete_PostTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "HandlePatternTimerComplete_PostTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.HandlePatternTimerComplete_PreTransition
// (Final, Native, Private)

void ABuildingGameplayActorLaserGrid::HandlePatternTimerComplete_PreTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "HandlePatternTimerComplete_PreTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.LaserGridStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bLaserGridEnabled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::LaserGridStateUpdated(bool bLaserGridEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "LaserGridStateUpdated");

	Params::BuildingGameplayActorLaserGrid_LaserGridStateUpdated Parms{};

	Parms.bLaserGridEnabled = bLaserGridEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.LaserGridTriggered
// (BlueprintAuthorityOnly, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FLaserGridConnectionEntry& LaserConnectionData                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           TriggeringActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::LaserGridTriggered(const struct FLaserGridConnectionEntry& LaserConnectionData, class AActor* TriggeringActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "LaserGridTriggered");

	Params::BuildingGameplayActorLaserGrid_LaserGridTriggered Parms{};

	Parms.LaserConnectionData = std::move(LaserConnectionData);
	Parms.TriggeringActor = TriggeringActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.OnRep_bEnabled
// (Final, Native, Private)

void ABuildingGameplayActorLaserGrid::OnRep_bEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "OnRep_bEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.OnRep_LaserGridConnections
// (Final, Native, Private)

void ABuildingGameplayActorLaserGrid::OnRep_LaserGridConnections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "OnRep_LaserGridConnections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.SetLaserGridEnable
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::SetLaserGridEnable(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "SetLaserGridEnable");

	Params::BuildingGameplayActorLaserGrid_SetLaserGridEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.CanActorTriggerLaserGrid
// (BlueprintAuthorityOnly, Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// const class AActor*                     TriggeringActor                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingGameplayActorLaserGrid::CanActorTriggerLaserGrid(const class AActor* TriggeringActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "CanActorTriggerLaserGrid");

	Params::BuildingGameplayActorLaserGrid_CanActorTriggerLaserGrid Parms{};

	Parms.TriggeringActor = TriggeringActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LaserGameplayRuntime.BuildingGameplayActorLaserGrid.GetActiveLaserGridConnections
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FLaserGridConnectionEntry>*OutActiveLaserGridConnections                          (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingGameplayActorLaserGrid::GetActiveLaserGridConnections(TArray<struct FLaserGridConnectionEntry>* OutActiveLaserGridConnections) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActorLaserGrid", "GetActiveLaserGridConnections");

	Params::BuildingGameplayActorLaserGrid_GetActiveLaserGridConnections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveLaserGridConnections != nullptr)
		*OutActiveLaserGridConnections = std::move(Parms.OutActiveLaserGridConnections);
}

}

