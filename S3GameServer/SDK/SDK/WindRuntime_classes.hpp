#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WindRuntime

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FieldSystemEngine_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "WindRuntime_structs.hpp"


namespace SDK
{

// Class WindRuntime.FortPlayerWindTunnelAnimInstance
// 0x0000 (0x13D0 - 0x13D0)
class UFortPlayerWindTunnelAnimInstance final : public UFortPlayerAnimInstanceProxy
{
public:
	uint8                                         bApplyWindSlideAdditive : 1;                       // 0x13C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_13C9[0x7];                                     // 0x13C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortPlayerWindTunnelAnimInstance">();
	}
	static class UFortPlayerWindTunnelAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortPlayerWindTunnelAnimInstance>();
	}
};

// Class WindRuntime.WindCheatManager
// 0x0018 (0x0040 - 0x0028)
class UWindCheatManager final : public UChildCheatManager
{
public:
	TSubclassOf<class UGameplayEffect>            InflateEffectClass;                                // 0x0028(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            DeflateEffectClass;                                // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinBalloonsOnPlayer;                               // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxBalloonsOnPlayer;                               // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void InflateBalloonOnSelf(int32 NumBalloons) const;
	void ReleaseBalloonOnSelf(int32 NumBalloons) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WindCheatManager">();
	}
	static class UWindCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWindCheatManager>();
	}
};

// Class WindRuntime.WindField
// 0x0108 (0x03A0 - 0x0298)
class AWindField : public AFieldSystemActor
{
public:
	float                                         StartTime;                                         // 0x0298(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StopTime;                                          // 0x029C(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IncomingDuration;                                  // 0x02A0(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutgoingDuration;                                  // 0x02A4(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrengthMultiplier;                                // 0x02A8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x02AC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AD[0xF3];                                     // 0x02AD(0x00F3)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddCollider(class UShapeComponent* ShapeComponent);
	void AddIgnoredActor(class AActor* Actor);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void RemoveCollider(class UShapeComponent* ShapeComponent);
	void RemoveIgnoredActor(class AActor* Actor);
	void SetActive(bool bInIsActive);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WindField">();
	}
	static class AWindField* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWindField>();
	}
};

// Class WindRuntime.LinearWindField
// 0x0090 (0x0430 - 0x03A0)
class ALinearWindField final : public AWindField
{
public:
	struct FVector                                Direction;                                         // 0x03A0(0x0018)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FieldStrength;                                     // 0x03B8(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ForceStrength;                                     // 0x03BC(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   PawnForceName;                                     // 0x03C0(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PawnForceStrength;                                 // 0x03C4(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URadialVector*                          RadialVector;                                      // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URadialFalloff*                         RadialFalloff;                                     // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOperatorField*                         OperatorField;                                     // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E0[0x50];                                     // 0x03E0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LinearWindField">();
	}
	static class ALinearWindField* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALinearWindField>();
	}
};

// Class WindRuntime.RadialWindField
// 0x0150 (0x04F0 - 0x03A0)
class ARadialWindField final : public AWindField
{
public:
	struct FScalableFloat                         FieldRadius;                                       // 0x03A0(0x0028)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         FieldStrength;                                     // 0x03C8(0x0028)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForceRadius;                                       // 0x03F0(0x0028)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                         ForceStrength;                                     // 0x0418(0x0028)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                            ForceStrengthDistanceFalloff;                      // 0x0440(0x0008)(Edit, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   PawnForceName;                                     // 0x0448(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         PawnForceStrength;                                 // 0x0450(0x0028)(Edit, Transient, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                            PawnForceStrengthDistanceFalloff;                  // 0x0478(0x0008)(Edit, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPawnForceIsPush;                                  // 0x0480(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialVector*                          RadialVector;                                      // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URadialFalloff*                         RadialFalloff;                                     // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOperatorField*                         OperatorField;                                     // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A0[0x50];                                     // 0x04A0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RadialWindField">();
	}
	static class ARadialWindField* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARadialWindField>();
	}
};

// Class WindRuntime.WindSplineComponent
// 0x0DF0 (0x1400 - 0x0610)
class UWindSplineComponent final : public USplineComponent
{
public:
	uint8                                         Pad_608[0x20];                                     // 0x0608(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         DisableSafeZonePhaseIndex;                         // 0x0628(0x0028)(Edit, NativeAccessSpecifierPrivate)
	class UStaticMesh*                            StaticMesh;                                        // 0x0650(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                            StartStaticMesh;                                   // 0x0658(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                            EndStaticMesh;                                     // 0x0660(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESplineMeshAxis                               MeshForwardAxis;                                   // 0x0668(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MeshRollVariance;                                  // 0x0670(0x0028)(Edit, NativeAccessSpecifierPrivate)
	class FName                                   ActiveSectionStartMaterialParamName;               // 0x0698(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ActiveSectionEndMaterialParamName;                 // 0x069C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingRefreshRate;                              // 0x06A0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         TargetingRadius;                                   // 0x06C8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	TArray<EObjectTypeQuery>                      TargetObjectTypes;                                 // 0x06F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      TargetTagQuery;                                    // 0x0700(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      BlockageTagQuery;                                  // 0x0748(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         BlockageSubdivisions;                              // 0x0790(0x0028)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FWindSplineTargetEffects>       TargetEffects;                                     // 0x07B8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<EFortPhysicsObjectType, struct FScalableFloat> ObjectTypeToMaxTargetCount;                  // 0x07C8(0x0050)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         MaxTargetCountReachedExpelDuration;                // 0x0818(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         SkydivingLandingAngle;                             // 0x0840(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         RampUpSpeed;                                       // 0x0868(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         RampDownSpeed;                                     // 0x0890(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ForwardForceFallOffStartDistance;                  // 0x08B8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ForwardForceMagnitude;                             // 0x08E0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ReverseForceMagnitude;                             // 0x0908(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         ForwardForceDistanceFallOffExponent;               // 0x0930(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceInnerRadius;                            // 0x0958(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceOuterRadiusAcceleration;                // 0x0980(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceInnerRadiusDeceleration;                // 0x09A8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceInnerRadiusSpeedThreshold;              // 0x09D0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceOuterRadiusSpeedThreshold;              // 0x09F8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceMaxReductionFromSteering;               // 0x0A20(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceMaxMultiplierWhenSteering;              // 0x0A48(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceMaxSteerAngle;                          // 0x0A70(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceLowVelocityThreshold;                   // 0x0A98(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceLowVelocityMinValue;                    // 0x0AC0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceSteeringReduceAccelerationPower;        // 0x0AE8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         InwardForceSteeringReduceDecelerationPower;        // 0x0B10(0x0028)(Edit, NativeAccessSpecifierPrivate)
	TMap<EFortPhysicsSimSize, struct FWindSplineForceModifiers> SizeForceModifiers;                  // 0x0B38(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<EFortPhysicsObjectType, struct FWindSplineForceModifiers> ObjectTypeForceModifiers;         // 0x0B88(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FWindSplineTagBasedForceModifiers> QueryBasedForceModifiers;                       // 0x0BD8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                      PawnSkydivingTimeLimitQuery;                       // 0x0BE8(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         PawnSkydivingTimeLimit;                            // 0x0C30(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         PawnSkydivingMinDistanceAboveGround;               // 0x0C58(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         AutoWakeUpPhysicsObjects;                          // 0x0C80(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         FieldMagnitudeBase;                                // 0x0CA8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         FieldMinMagnitudeAfterFalloff;                     // 0x0CD0(0x0028)(Edit, NativeAccessSpecifierPrivate)
	struct FScalableFloat                         FieldMaxMagnitudeAfterFalloff;                     // 0x0CF8(0x0028)(Edit, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimInstance>              PlayerWindAnimationLayer;                          // 0x0D20(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnWindSplineDisabled;                              // 0x0D28(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TMulticastInlineDelegate<void()>              OnWindSplineEnabled;                               // 0x0D38(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FWindSplineTargetData                  TargetData;                                        // 0x0D48(0x01B8)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FWindSplineBlockageArray               Blockages;                                         // 0x0F00(0x0118)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	class UFieldSystemComponent*                  FieldSystemComponent;                              // 0x1018(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUniformVector*                         UniformVector;                                     // 0x1020(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxFalloff*                            BoxFalloff;                                        // 0x1028(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOperatorField*                         BoxOperatorField;                                  // 0x1030(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FWindSplineMeshData>            MeshDataArray;                                     // 0x1038(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UFXSystemComponent*>             FXComponents;                                      // 0x1048(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1058[0x3A8];                                   // 0x1058(0x03A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Disable();
	void Enable();
	void OnRep_Blockages();
	void OnRep_TargetData();

	void GetClosestActiveLocations(const struct FVector& InTargetLocation, bool* bIsClosestPointActive, struct FVector* ClosestPointOnSpline, TArray<struct FVector>* ClosestActiveLocations) const;
	float GetTargetingRadius() const;
	void GetWindDataAtLocation(const struct FVector& InTargetLocation, struct FVector* OutDirection, float* OutAttenuation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WindSplineComponent">();
	}
	static class UWindSplineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWindSplineComponent>();
	}
};

}

