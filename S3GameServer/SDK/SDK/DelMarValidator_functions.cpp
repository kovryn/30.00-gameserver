#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarValidator

#include "Basic.hpp"

#include "DelMarValidator_classes.hpp"
#include "DelMarValidator_parameters.hpp"


namespace SDK
{

// Function DelMarValidator.DelMarValidator_Checkpoints.GetStartingLineCheckpoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADelMarCheckpoint*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADelMarCheckpoint* UDelMarValidator_Checkpoints::GetStartingLineCheckpoint(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DelMarValidator_Checkpoints", "GetStartingLineCheckpoint");

	Params::DelMarValidator_Checkpoints_GetStartingLineCheckpoint Parms{};

	Parms.World = World;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

