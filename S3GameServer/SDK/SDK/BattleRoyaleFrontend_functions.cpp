#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleRoyaleFrontend

#include "Basic.hpp"

#include "BattleRoyaleFrontend_classes.hpp"
#include "BattleRoyaleFrontend_parameters.hpp"


namespace SDK
{

// Function BattleRoyaleFrontend.BattleRoyaleFrontendExperienceFlow.FinishTrailerStep
// (Final, Native, Private)

void UBattleRoyaleFrontendExperienceFlow::FinishTrailerStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleRoyaleFrontendExperienceFlow", "FinishTrailerStep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattleRoyaleFrontend.BattleRoyaleFrontendExperienceFlow.HandleSeasonTrailerEnded
// (Final, Native, Private)

void UBattleRoyaleFrontendExperienceFlow::HandleSeasonTrailerEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleRoyaleFrontendExperienceFlow", "HandleSeasonTrailerEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BattleRoyaleFrontend.BattleRoyaleFrontendExperienceFlow.HandleVideoTerminalError
// (Final, Native, Private)
// Parameters:
// EBaseMediaTerminalErrorReason           Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBattleRoyaleFrontendExperienceFlow::HandleVideoTerminalError(EBaseMediaTerminalErrorReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleRoyaleFrontendExperienceFlow", "HandleVideoTerminalError");

	Params::BattleRoyaleFrontendExperienceFlow_HandleVideoTerminalError Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

