#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KatanaGameplayRuntime

#include "Basic.hpp"

#include "KatanaGameplayRuntime_classes.hpp"
#include "KatanaGameplayRuntime_parameters.hpp"


namespace SDK
{

// Function KatanaGameplayRuntime.KatanaTargetingComponent.PerformDashTargeting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortKatanaDashTargetingInfo*    OutDashTargetingInfo                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKatanaTargetingComponent::PerformDashTargeting(struct FFortKatanaDashTargetingInfo* OutDashTargetingInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KatanaTargetingComponent", "PerformDashTargeting");

	Params::KatanaTargetingComponent_PerformDashTargeting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDashTargetingInfo != nullptr)
		*OutDashTargetingInfo = std::move(Parms.OutDashTargetingInfo);

	return Parms.ReturnValue;
}


// Function KatanaGameplayRuntime.KatanaTargetingComponent.PerformPrimaryAttackTargeting
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const EFortKatanaPrimaryAttackVariation AttackVariation                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UKatanaTargetingComponent::PerformPrimaryAttackTargeting(const EFortKatanaPrimaryAttackVariation AttackVariation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KatanaTargetingComponent", "PerformPrimaryAttackTargeting");

	Params::KatanaTargetingComponent_PerformPrimaryAttackTargeting Parms{};

	Parms.AttackVariation = AttackVariation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

