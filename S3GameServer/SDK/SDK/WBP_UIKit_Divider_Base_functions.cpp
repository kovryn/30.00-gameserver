#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Divider_Base

#include "Basic.hpp"

#include "WBP_UIKit_Divider_Base_classes.hpp"
#include "WBP_UIKit_Divider_Base_parameters.hpp"


namespace SDK
{

// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.ExecuteUbergraph_WBP_UIKit_Divider_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Divider_Base_C::ExecuteUbergraph_WBP_UIKit_Divider_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Divider_Base_C", "ExecuteUbergraph_WBP_UIKit_Divider_Base");

	Params::WBP_UIKit_Divider_Base_C_ExecuteUbergraph_WBP_UIKit_Divider_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Divider_Base_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Divider_Base_C", "PreConstruct");

	Params::WBP_UIKit_Divider_Base_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.SetDividerOrientation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVertical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Divider_Base_C::SetDividerOrientation(bool IsVertical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Divider_Base_C", "SetDividerOrientation");

	Params::WBP_UIKit_Divider_Base_C_SetDividerOrientation Parms{};

	Parms.IsVertical = IsVertical;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.SetDividerPadding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FMargin&                   Padding_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_UIKit_Divider_Base_C::SetDividerPadding(const struct FMargin& Padding_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Divider_Base_C", "SetDividerPadding");

	Params::WBP_UIKit_Divider_Base_C_SetDividerPadding Parms{};

	Parms.Padding_0 = std::move(Padding_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_UIKit_Divider_Base.WBP_UIKit_Divider_Base_C.SetDividerSpacing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Spacing                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVertical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_UIKit_Divider_Base_C::SetDividerSpacing(double Spacing, bool IsVertical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_UIKit_Divider_Base_C", "SetDividerSpacing");

	Params::WBP_UIKit_Divider_Base_C_SetDividerSpacing Parms{};

	Parms.Spacing = Spacing;
	Parms.IsVertical = IsVertical;

	UObject::ProcessEvent(Func, &Parms);
}

}

