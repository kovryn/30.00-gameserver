#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UIKit_Block_EditableText

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.BndEvt__WBP_UIKit_Block_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_BndEvt__WBP_UIKit_Block_EditableText_EditableText_K2Node_ComponentBoundEvent_0_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.ExecuteUbergraph_WBP_UIKit_Block_EditableText
// 0x0060 (0x0060 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_ExecuteUbergraph_WBP_UIKit_Block_EditableText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0004(0x0008)(NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0020(0x0010)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0038(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetFilledState
// 0x0020 (0x0020 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetFilledState final
{
public:
	bool                                          IsEmpty;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetFont
// 0x0060 (0x0060 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetFont final
{
public:
	struct FSlateFontInfo                         Font;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetFontMaterial
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetFontMaterial final
{
public:
	class UMaterialInstance*                      Material_Instance;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetHintText
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetHintText final
{
public:
	class FText                                   Hint_Text;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetIsPassword
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetIsPassword final
{
public:
	bool                                          IsPassword;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetJustification
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetJustification final
{
public:
	ETextJustify                                  Justification;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetMinDesiredWidth
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetMinDesiredWidth final
{
public:
	double                                        Min_Width;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinimumDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetMobileFontSizeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetMobileFontSizeMultiplier final
{
public:
	float                                         MobileFontSizeMultiplier;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetReadOnly
// 0x0001 (0x0001 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetReadOnly final
{
public:
	bool                                          IsReadOnly;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};

// Function WBP_UIKit_Block_EditableText.WBP_UIKit_Block_EditableText_C.SetText
// 0x0010 (0x0010 - 0x0000)
struct WBP_UIKit_Block_EditableText_C_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};

}

