#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FabricMetasoundDataTypes

#include "Basic.hpp"

#include "FabricMetasoundDataTypes_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class FabricMetasoundDataTypes.FabricMetasoundDrumPlayerSampleBankAsset
// 0x0010 (0x0040 - 0x0030)
class UFabricMetasoundDrumPlayerSampleBankAsset final : public UDataAsset
{
public:
	TArray<struct FFabricMetasoundDrumPlayerSampleData> Samples;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	TArray<class FText> GetSampleLabels() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundDrumPlayerSampleBankAsset">();
	}
	static class UFabricMetasoundDrumPlayerSampleBankAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundDrumPlayerSampleBankAsset>();
	}
};

// Class FabricMetasoundDataTypes.FabricMetasoundDrumPlayerDataAsset
// 0x0010 (0x0040 - 0x0030)
class UFabricMetasoundDrumPlayerDataAsset final : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UFabricMetasoundDrumPlayerSampleBankAsset>> SampleBanks;             // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundDrumPlayerDataAsset">();
	}
	static class UFabricMetasoundDrumPlayerDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundDrumPlayerDataAsset>();
	}
};

// Class FabricMetasoundDataTypes.FabricMetasoundInstrumentPlayerDataAsset
// 0x0008 (0x0038 - 0x0030)
class UFabricMetasoundInstrumentPlayerDataAsset final : public UDataAsset
{
public:
	class UFusionPatch*                           Patch;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundInstrumentPlayerDataAsset">();
	}
	static class UFabricMetasoundInstrumentPlayerDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundInstrumentPlayerDataAsset>();
	}
};

// Class FabricMetasoundDataTypes.FabricMetasoundInstrumentPlayerDataAssetList
// 0x0010 (0x0040 - 0x0030)
class UFabricMetasoundInstrumentPlayerDataAssetList final : public UDataAsset
{
public:
	TArray<TSoftObjectPtr<class UFabricMetasoundInstrumentPlayerDataAsset>> InstrumentPlayerData;    // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetasoundInstrumentPlayerDataAssetList">();
	}
	static class UFabricMetasoundInstrumentPlayerDataAssetList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetasoundInstrumentPlayerDataAssetList>();
	}
};

// Class FabricMetasoundDataTypes.FabricMetaSoundUserOption
// 0x0038 (0x0060 - 0x0028)
class UFabricMetaSoundUserOption final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFabricUserOption                      FabricUserOption;                                  // 0x0030(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FabricMetaSoundUserOption">();
	}
	static class UFabricMetaSoundUserOption* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFabricMetaSoundUserOption>();
	}
};

}

