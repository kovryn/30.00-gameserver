#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMCalibrationRuntime

#include "Basic.hpp"

#include "FMCalibrationRuntime_classes.hpp"
#include "FMCalibrationRuntime_parameters.hpp"


namespace SDK
{

// Function FMCalibrationRuntime.BeatmatchCalibrationHelper.CalcCalibrationResult
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<float>&                    Samples                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<float>&                    SamplesDeltaTimes                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   BPS                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECalibrationState*                      ResultingState                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  ResultMs                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBeatmatchCalibrationHelper::CalcCalibrationResult(const TArray<float>& Samples, const TArray<float>& SamplesDeltaTimes, float BPS, ECalibrationState* ResultingState, float* ResultMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BeatmatchCalibrationHelper", "CalcCalibrationResult");

	Params::BeatmatchCalibrationHelper_CalcCalibrationResult Parms{};

	Parms.Samples = std::move(Samples);
	Parms.SamplesDeltaTimes = std::move(SamplesDeltaTimes);
	Parms.BPS = BPS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResultingState != nullptr)
		*ResultingState = Parms.ResultingState;

	if (ResultMs != nullptr)
		*ResultMs = Parms.ResultMs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.DisplayCalibrationWidget
// (Event, Public, BlueprintEvent)

void UFMCalibrationControllerComponent::DisplayCalibrationWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "DisplayCalibrationWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.LoadCalibrationLocalToDevice
// (Final, Native, Public, BlueprintCallable)

void UFMCalibrationControllerComponent::LoadCalibrationLocalToDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "LoadCalibrationLocalToDevice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SaveCalibrationLocalToDevice
// (Final, RequiredAPI, Native, Public, BlueprintCallable)

void UFMCalibrationControllerComponent::SaveCalibrationLocalToDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SaveCalibrationLocalToDevice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SendToggleModalMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UsePreamble                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAutoLaunch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SendToggleModalMessage(class AActor* ContextActor, bool UsePreamble, bool bIsAutoLaunch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SendToggleModalMessage");

	Params::FMCalibrationControllerComponent_SendToggleModalMessage Parms{};

	Parms.ContextActor = ContextActor;
	Parms.UsePreamble = UsePreamble;
	Parms.bIsAutoLaunch = bIsAutoLaunch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetAudioLatencyMs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LatencyMs                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetAudioLatencyMs(float LatencyMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetAudioLatencyMs");

	Params::FMCalibrationControllerComponent_SetAudioLatencyMs Parms{};

	Parms.LatencyMs = LatencyMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetHasTalkedWithRoadie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHasTalkedWithRoadie                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetHasTalkedWithRoadie(bool bHasTalkedWithRoadie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetHasTalkedWithRoadie");

	Params::FMCalibrationControllerComponent_SetHasTalkedWithRoadie Parms{};

	Parms.bHasTalkedWithRoadie = bHasTalkedWithRoadie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetIsAutolaunchDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAutolaunchDisabled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetIsAutolaunchDisabled(bool bAutolaunchDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetIsAutolaunchDisabled");

	Params::FMCalibrationControllerComponent_SetIsAutolaunchDisabled Parms{};

	Parms.bAutolaunchDisabled = bAutolaunchDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetIsCalibrated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCalibrated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetIsCalibrated(bool bCalibrated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetIsCalibrated");

	Params::FMCalibrationControllerComponent_SetIsCalibrated Parms{};

	Parms.bCalibrated = bCalibrated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetIsCalibrationDebugEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCalibrationDebugEnabled                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetIsCalibrationDebugEnabled(bool bCalibrationDebugEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetIsCalibrationDebugEnabled");

	Params::FMCalibrationControllerComponent_SetIsCalibrationDebugEnabled Parms{};

	Parms.bCalibrationDebugEnabled = bCalibrationDebugEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetIsPreambleDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPreambleDisabled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetIsPreambleDisabled(bool bPreambleDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetIsPreambleDisabled");

	Params::FMCalibrationControllerComponent_SetIsPreambleDisabled Parms{};

	Parms.bPreambleDisabled = bPreambleDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.SetVideoLatencyMs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   LatencyMs                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFMCalibrationControllerComponent::SetVideoLatencyMs(float LatencyMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "SetVideoLatencyMs");

	Params::FMCalibrationControllerComponent_SetVideoLatencyMs Parms{};

	Parms.LatencyMs = LatencyMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetAudioLatencyMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMCalibrationControllerComponent::GetAudioLatencyMs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetAudioLatencyMs");

	Params::FMCalibrationControllerComponent_GetAudioLatencyMs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetHasTalkedWithRoadie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::GetHasTalkedWithRoadie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetHasTalkedWithRoadie");

	Params::FMCalibrationControllerComponent_GetHasTalkedWithRoadie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetIsAutolaunchDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::GetIsAutolaunchDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetIsAutolaunchDisabled");

	Params::FMCalibrationControllerComponent_GetIsAutolaunchDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetIsCalibrated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::GetIsCalibrated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetIsCalibrated");

	Params::FMCalibrationControllerComponent_GetIsCalibrated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetIsCalibrationDebugEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::GetIsCalibrationDebugEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetIsCalibrationDebugEnabled");

	Params::FMCalibrationControllerComponent_GetIsCalibrationDebugEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetIsPreambleDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::GetIsPreambleDisabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetIsPreambleDisabled");

	Params::FMCalibrationControllerComponent_GetIsPreambleDisabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.GetVideoLatencyMs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFMCalibrationControllerComponent::GetVideoLatencyMs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "GetVideoLatencyMs");

	Params::FMCalibrationControllerComponent_GetVideoLatencyMs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.IsCalibrationDataLoaded
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::IsCalibrationDataLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "IsCalibrationDataLoaded");

	Params::FMCalibrationControllerComponent_IsCalibrationDataLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FMCalibrationRuntime.FMCalibrationControllerComponent.IsCalibrationDataOnLatestVersion
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFMCalibrationControllerComponent::IsCalibrationDataOnLatestVersion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FMCalibrationControllerComponent", "IsCalibrationDataOnLatestVersion");

	Params::FMCalibrationControllerComponent_IsCalibrationDataOnLatestVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

