#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QRCodeGenerator

#include "Basic.hpp"

#include "QRCodeGenerator_classes.hpp"
#include "QRCodeGenerator_parameters.hpp"


namespace SDK
{

// Function QRCodeGenerator.QRCodeGeneratorBlueprintFunctionLibrary.GenerateQRCodeTextureFromString
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const class FString&                    StringToEncode                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQRCodeGeneratorBlueprintFunctionLibrary::GenerateQRCodeTextureFromString(const class FString& StringToEncode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QRCodeGeneratorBlueprintFunctionLibrary", "GenerateQRCodeTextureFromString");

	Params::QRCodeGeneratorBlueprintFunctionLibrary_GenerateQRCodeTextureFromString Parms{};

	Parms.StringToEncode = std::move(StringToEncode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QRCodeGenerator.QRCodeGeneratorUserWidget.EncodeString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    StringToEncode                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQRCodeGeneratorUserWidget::EncodeString(const class FString& StringToEncode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QRCodeGeneratorUserWidget", "EncodeString");

	Params::QRCodeGeneratorUserWidget_EncodeString Parms{};

	Parms.StringToEncode = std::move(StringToEncode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

