#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DelMarTrackRuntime

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DelMarTrackRuntime.EDelMarTrackOobTubeTransitionType
// NumValues: 0x0007
enum class EDelMarTrackOobTubeTransitionType : uint8
{
	Default                                  = 0,
	IntoTunnel                               = 1,
	OutOfTunnel                              = 2,
	IntoPipe                                 = 3,
	OutOfPipe                                = 4,
	NoMeshNeeded                             = 5,
	EDelMarTrackOobTubeTransitionType_MAX    = 6,
};

// Enum DelMarTrackRuntime.EDelMarTrackPropType
// NumValues: 0x0005
enum class EDelMarTrackPropType : uint8
{
	None                                     = 0,
	SkeletalMesh                             = 1,
	StaticMesh                               = 2,
	Blueprint                                = 3,
	EDelMarTrackPropType_MAX                 = 4,
};

// Enum DelMarTrackRuntime.EDelMarTrackPropPlacementPosition
// NumValues: 0x0003
enum class EDelMarTrackPropPlacementPosition : uint8
{
	FromBeginning                            = 0,
	FromEnding                               = 1,
	EDelMarTrackPropPlacementPosition_MAX    = 2,
};

// Enum DelMarTrackRuntime.EDelMarTrackPropPlacementSpread
// NumValues: 0x0004
enum class EDelMarTrackPropPlacementSpread : uint8
{
	UseDistanceBetween                       = 0,
	UseNumberOfProps                         = 1,
	UseBothDistanceAndNumber                 = 2,
	EDelMarTrackPropPlacementSpread_MAX      = 3,
};

// Enum DelMarTrackRuntime.EDelMarTrackRoadPropType
// NumValues: 0x0003
enum class EDelMarTrackRoadPropType : uint8
{
	StartLine                                = 0,
	FinishLine                               = 1,
	EDelMarTrackRoadPropType_MAX             = 2,
};

// Enum DelMarTrackRuntime.EDelMarTrackSide
// NumValues: 0x0005
enum class EDelMarTrackSide : uint8
{
	Neither                                  = 0,
	Left                                     = 1,
	Right                                    = 2,
	Both                                     = 3,
	EDelMarTrackSide_MAX                     = 4,
};

// Enum DelMarTrackRuntime.EDelMarTrackSnapComponentMode
// NumValues: 0x0003
enum class EDelMarTrackSnapComponentMode : uint8
{
	SetTransform                             = 0,
	SnapToComponent                          = 1,
	EDelMarTrackSnapComponentMode_MAX        = 2,
};

// Enum DelMarTrackRuntime.EDelMarTrackSplinePointSnapMode
// NumValues: 0x0004
enum class EDelMarTrackSplinePointSnapMode : uint8
{
	StartingPoint                            = 0,
	EndingPoint                              = 1,
	CustomPoint                              = 2,
	EDelMarTrackSplinePointSnapMode_MAX      = 3,
};

// Enum DelMarTrackRuntime.EDelMarTrackType
// NumValues: 0x0004
enum class EDelMarTrackType : uint8
{
	Primary                                  = 0,
	Secondary                                = 1,
	Cosmetic                                 = 2,
	EDelMarTrackType_MAX                     = 3,
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackAddedEvent
// 0x0008 (0x0008 - 0x0000)
struct FDelMarTrackAddedEvent final
{
public:
	TWeakObjectPtr<class ADelMarTrackBase>        Track;                                             // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackMaterialCollectionEntry
// 0x0010 (0x0010 - 0x0000)
struct FDelMarTrackMaterialCollectionEntry final
{
public:
	TArray<class UMaterialInstanceConstant*>      MICs;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackOobTubeMeshSection
// 0x0018 (0x0018 - 0x0000)
struct FDelMarTrackOobTubeMeshSection final
{
public:
	class USplineMeshComponent*                   TubeMesh;                                          // 0x0000(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PointIndex;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDistanceAlongSpline;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndDistanceAlongSpline;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackOobTubePointMetaData
// 0x0028 (0x0028 - 0x0000)
struct FDelMarTrackOobTubePointMetaData final
{
public:
	struct FVector2D                              LocationOffset;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScaleOffset;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSubsections;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldGenerateTube;                               // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldMirrorAttachedTrackPoint;                   // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreAutoTransitionScaling;                      // 0x0026(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPaletteTransitionEntry_v2
// 0x0040 (0x0040 - 0x0000)
struct FDelMarTrackPaletteTransitionEntry_v2 final
{
public:
	struct FGameplayTag                           TagA;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TagB;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ADelMarTrackSegmentBase>    TRANSITION;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseReverse;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ADelMarTrackSegmentBase>    Reverse;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableOOBTubeTransitions;                         // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            OOBTubeTransitionMesh;                             // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideReverseOOBTubeMesh;                       // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            ReverseOOBTubeTransitionMesh;                      // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPaletteTrackTypeEntry
// 0x0038 (0x0038 - 0x0000)
struct FDelMarTrackPaletteTrackTypeEntry final
{
public:
	struct FGameplayTag                           StyleTag;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class ADelMarTrackSegmentBase>> SegmentActors;                                // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TSubclassOf<class ADelMarTrackSegmentBase>    FrontEndcap;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFrontEndcapReversable;                          // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class ADelMarTrackSegmentBase>    BackEndcap;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               WidgetImage;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPointDistanceRange
// 0x0008 (0x0008 - 0x0000)
struct FDelMarTrackPointDistanceRange final
{
public:
	float                                         BeginDistanceAlongSpline;                          // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndDistanceAlongSpline;                            // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPointIndexRange
// 0x0008 (0x0008 - 0x0000)
struct FDelMarTrackPointIndexRange final
{
public:
	int32                                         BeginPointIndex;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndPointIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackProp
// 0x0068 (0x0068 - 0x0000)
struct FDelMarTrackProp final
{
public:
	TSoftObjectPtr<class USkeletalMesh>           SkeletalMesh;                                      // 0x0000(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             StaticMesh;                                        // 0x0020(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   Blueprint;                                         // 0x0040(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarTrackPropType                          PropType;                                          // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPropSection
// 0x00F0 (0x00F0 - 0x0000)
struct FDelMarTrackPropSection final
{
public:
	TArray<struct FDelMarTrackPointIndexRange>    RangesToApplyTo;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDelMarTrackProp                       PropToPlace;                                       // 0x0010(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                         NumPropsToPlace;                                   // 0x0078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceBetweenProps;                              // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CustomizationPlacementBase;                        // 0x0088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlacementBeginPadding;                             // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        PlacementEndPadding;                               // 0x0098(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        PlacementDistanceOffset;                           // 0x00A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PlacementScale;                                    // 0x00A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               PlacementRotationOffset;                           // 0x00C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EDelMarTrackSide                              SupportedTrackSide;                                // 0x00D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarTrackPropPlacementPosition             PlacementPosition;                                 // 0x00D9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDelMarTrackPropPlacementSpread               PlacementSpread;                                   // 0x00DA(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RangesToApplyToEditorString;                       // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackSegmentSpawnInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FDelMarTrackSegmentSpawnInfo final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackSegmentCollectionProxyData
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FDelMarTrackSegmentCollectionProxyData final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarSegmentActorCollection
// 0x0028 (0x0028 - 0x0000)
struct FDelMarSegmentActorCollection final
{
public:
	TArray<class ADelMarTrackSegmentBase*>        Segments;                                          // 0x0000(0x0010)(ZeroConstructor, NonTransactional, UObjectWrapper, NativeAccessSpecifierPublic)
	class ADelMarTrackBase*                       Track;                                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorComponent*>                PropComponents;                                    // 0x0018(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackTagConverterData
// 0x000C (0x000C - 0x0000)
struct FDelMarTrackTagConverterData final
{
public:
	struct FGameplayTag                           v1Tag;                                             // 0x0000(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckCustomizations;                              // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedRightRail;                                    // 0x0005(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedLeftRail;                                     // 0x0006(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           v2Tag;                                             // 0x0008(0x0004)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackTransformData
// 0x0070 (0x0070 - 0x0000)
struct FDelMarTrackTransformData final
{
public:
	TWeakObjectPtr<class ADelMarTrackBase>        Track;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TrackTransform;                                    // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPaletteTransitionEntry
// 0x0058 (0x0058 - 0x0000)
struct FDelMarTrackPaletteTransitionEntry final
{
public:
	struct FGameplayTag                           TypeA;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TypeB;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   AtoB;                                              // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   BtoA;                                              // 0x0028(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Title;                                             // 0x0048(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackCapEntry
// 0x0048 (0x0048 - 0x0000)
struct FDelMarTrackCapEntry final
{
public:
	struct FGameplayTag                           tag;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   StartCap;                                          // 0x0008(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   EndCap;                                            // 0x0028(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarTrackPaletteEntry
// 0x0048 (0x0048 - 0x0000)
struct FDelMarTrackPaletteEntry final
{
public:
	struct FGameplayTag                           TrackTypeTag;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   TrackSegmentClass;                                 // 0x0008(0x0020)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         MeshCustomizations;                                // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FString                                 Title;                                             // 0x0038(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.TrackPosition
// 0x0020 (0x0020 - 0x0000)
struct FTrackPosition final
{
public:
	class ADelMarTrackBase*                       Track;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceAlongSpline;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RawDistanceAlongSpline;                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToVehicleSquared;                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastKnownGoodDistance;                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SegmentIndex;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsValid;                                          // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarSplineSegmentInfo
// 0x00C8 (0x00C8 - 0x0000)
struct alignas(0x08) FDelMarSplineSegmentInfo final
{
public:
	uint8                                         Pad_0[0xC8];                                       // 0x0000(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct DelMarTrackRuntime.DelMarSplinePointMetaData
// 0x0080 (0x0080 - 0x0000)
struct FDelMarSplinePointMetaData final
{
public:
	struct FGameplayTag                           TrackTypeTag;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrackRadius;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceValidTrack;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseStableRoll;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFrontEndcap;                                   // 0x000A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBackEndcap;                                    // 0x000B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SegmentClass;                                      // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, bool>                     EnabledMeshCustomizations;                         // 0x0030(0x0050)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.ClosestLocationToWorldPlaneResult
// 0x0020 (0x0020 - 0x0000)
struct FClosestLocationToWorldPlaneResult final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Key;                                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToPlane;                                   // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct DelMarTrackRuntime.DelMarRotationalMinimalFrame
// 0x0068 (0x0068 - 0x0000)
struct FDelMarRotationalMinimalFrame final
{
public:
	float                                         InputKey;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Origin;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Tangent;                                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RotationAxis;                                      // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Normal;                                            // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

