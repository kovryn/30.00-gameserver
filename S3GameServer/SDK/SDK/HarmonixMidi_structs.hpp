#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HarmonixMidi

#include "Basic.hpp"


namespace SDK
{

// Enum HarmonixMidi.EMusicalBeatType
// NumValues: 0x0004
enum class EMusicalBeatType : uint8
{
	Downbeat                                 = 0,
	Strong                                   = 1,
	Normal                                   = 2,
	EMusicalBeatType_MAX                     = 3,
};

// Enum HarmonixMidi.EMusicTimeSpanOffsetUnits
// NumValues: 0x0013
enum class EMusicTimeSpanOffsetUnits : uint8
{
	Ms                                       = 0,
	Bars                                     = 1,
	Beats                                    = 2,
	ThirtySecondNotes                        = 3,
	SixteenthNotes                           = 4,
	EighthNotes                              = 5,
	QuarterNotes                             = 6,
	HalfNotes                                = 7,
	WholeNotes                               = 8,
	DottedSixteenthNotes                     = 9,
	DottedEighthNotes                        = 10,
	DottedQuarterNotes                       = 11,
	DottedHalfNotes                          = 12,
	DottedWholeNotes                         = 13,
	SixteenthNoteTriplets                    = 14,
	EighthNoteTriplets                       = 15,
	QuarterNoteTriplets                      = 16,
	HalfNoteTriplets                         = 17,
	EMusicTimeSpanOffsetUnits_MAX            = 18,
};

// Enum HarmonixMidi.EMusicTimeSpanLengthUnits
// NumValues: 0x0012
enum class EMusicTimeSpanLengthUnits : uint8
{
	Bars                                     = 0,
	Beats                                    = 1,
	ThirtySecondNotes                        = 2,
	SixteenthNotes                           = 3,
	EighthNotes                              = 4,
	QuarterNotes                             = 5,
	HalfNotes                                = 6,
	WholeNotes                               = 7,
	DottedSixteenthNotes                     = 8,
	DottedEighthNotes                        = 9,
	DottedQuarterNotes                       = 10,
	DottedHalfNotes                          = 11,
	DottedWholeNotes                         = 12,
	SixteenthNoteTriplets                    = 13,
	EighthNoteTriplets                       = 14,
	QuarterNoteTriplets                      = 15,
	HalfNoteTriplets                         = 16,
	EMusicTimeSpanLengthUnits_MAX            = 17,
};

// Enum HarmonixMidi.EMidiFileQuantizeDirection
// NumValues: 0x0004
enum class EMidiFileQuantizeDirection : uint8
{
	Nearest                                  = 0,
	Up                                       = 1,
	Down                                     = 2,
	EMidiFileQuantizeDirection_MAX           = 3,
};

// Enum HarmonixMidi.EMidiClockSubdivisionQuantization
// NumValues: 0x0013
enum class EMidiClockSubdivisionQuantization : uint8
{
	Bar                                      = 0,
	Beat                                     = 1,
	ThirtySecondNote                         = 2,
	SixteenthNote                            = 3,
	EighthNote                               = 4,
	QuarterNote                              = 5,
	HalfNote                                 = 6,
	WholeNote                                = 7,
	DottedSixteenthNote                      = 8,
	DottedEighthNote                         = 9,
	DottedQuarterNote                        = 10,
	DottedHalfNote                           = 11,
	DottedWholeNote                          = 12,
	SixteenthNoteTriplet                     = 13,
	EighthNoteTriplet                        = 14,
	QuarterNoteTriplet                       = 15,
	HalfNoteTriplet                          = 16,
	None                                     = 19,
	EMidiClockSubdivisionQuantization_MAX    = 20,
};

// ScriptStruct HarmonixMidi.TimeSignature
// 0x0004 (0x0004 - 0x0000)
struct FTimeSignature final
{
public:
	int16                                         Numerator;                                         // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         Denominator;                                       // 0x0002(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.MusicMapTimespanBase
// 0x0008 (0x0008 - 0x0000)
struct FMusicMapTimespanBase
{
public:
	int32                                         StartTick;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LengthTicks;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.TimeSignaturePoint
// 0x000C (0x0014 - 0x0008)
struct FTimeSignaturePoint final : public FMusicMapTimespanBase
{
public:
	int32                                         BarIndex;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BeatIndex;                                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimeSignature                         TimeSignature;                                     // 0x0010(0x0004)(NoDestructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.BarMap
// 0x0018 (0x0018 - 0x0000)
struct FBarMap final
{
public:
	int32                                         StartBar;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TicksPerQuarterNote;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTimeSignaturePoint>            Points;                                            // 0x0008(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HarmonixMidi.MusicTimestamp
// 0x0008 (0x0008 - 0x0000)
struct FMusicTimestamp final
{
public:
	int32                                         Bar;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Beat;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.MidiSongPos
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FMidiSongPos final
{
public:
	float                                         SecondsFromBarOne;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsIncludingCountIn;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeSigNumerator;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeSigDenominator;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tempo;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BarsIncludingCountIn;                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BeatsIncludingCountIn;                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicalBeatType                              BeatType;                                          // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicTimestamp                        Timestamp;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMidi.BeatMapPoint
// 0x0008 (0x0010 - 0x0008)
struct FBeatMapPoint final : public FMusicMapTimespanBase
{
public:
	int32                                         PulseBar;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicalBeatType                              Type;                                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMidi.PulseBar
// 0x0010 (0x0010 - 0x0000)
struct FPulseBar final
{
public:
	int32                                         StartTick;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LengthTicks;                                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FirstIncludedBeatIndex;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastIncludedBeatIndex;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.BeatMap
// 0x0028 (0x0028 - 0x0000)
struct FBeatMap final
{
public:
	int32                                         TicksPerQuarterNote;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBeatMapPoint>                  Points;                                            // 0x0008(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPulseBar>                      Bars;                                              // 0x0018(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HarmonixMidi.ChordMapPoint
// 0x0004 (0x000C - 0x0008)
struct FChordMapPoint final : public FMusicMapTimespanBase
{
public:
	class FName                                   Name;                                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.ChordProgressionMap
// 0x0020 (0x0020 - 0x0000)
struct FChordProgressionMap final
{
public:
	int32                                         TicksPerQuarterNote;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FChordMapPoint>                 Points;                                            // 0x0008(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMidi.MidiMsg
// 0x0004 (0x0004 - 0x0000)
struct FMidiMsg final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMidi.MidiEvent
// 0x0008 (0x0008 - 0x0000)
struct FMidiEvent final
{
public:
	int32                                         Tick;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMidiMsg                               Message;                                           // 0x0004(0x0004)(NoDestructor, NativeAccessSpecifierPrivate)
};

// ScriptStruct HarmonixMidi.TempoInfoPoint
// 0x0008 (0x0010 - 0x0008)
struct FTempoInfoPoint final : public FMusicMapTimespanBase
{
public:
	float                                         Ms;                                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MidiTempo;                                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.TempoMap
// 0x0020 (0x0020 - 0x0000)
struct FTempoMap final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TicksPerQuarterNote;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTempoInfoPoint>                Points;                                            // 0x0010(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HarmonixMidi.SongLengthData
// 0x000C (0x000C - 0x0000)
struct FSongLengthData final
{
public:
	int32                                         LengthTicks;                                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LengthFractionalBars;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastTick;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.SongSection
// 0x0010 (0x0018 - 0x0008)
struct FSongSection final : public FMusicMapTimespanBase
{
public:
	class FString                                 Name;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.SectionMap
// 0x0018 (0x0018 - 0x0000)
struct FSectionMap final
{
public:
	int32                                         TicksPerQuarterNote;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSongSection>                   Points;                                            // 0x0008(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// ScriptStruct HarmonixMidi.SongMaps
// 0x00C0 (0x00C0 - 0x0000)
struct FSongMaps final
{
public:
	int32                                         TicksPerQuarterNote;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTempoMap                              TempoMap;                                          // 0x0008(0x0020)(Protected, NativeAccessSpecifierProtected)
	struct FBarMap                                BarMap;                                            // 0x0028(0x0018)(Protected, NativeAccessSpecifierProtected)
	struct FBeatMap                               BeatMap;                                           // 0x0040(0x0028)(Protected, NativeAccessSpecifierProtected)
	struct FSectionMap                            SectionMap;                                        // 0x0068(0x0018)(Protected, NativeAccessSpecifierProtected)
	struct FChordProgressionMap                   ChordMap;                                          // 0x0080(0x0020)(Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                         TrackNames;                                        // 0x00A0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FSongLengthData                        LengthData;                                        // 0x00B0(0x000C)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct HarmonixMidi.MidiTrack
// 0x0028 (0x0028 - 0x0000)
struct FMidiTrack final
{
public:
	TArray<struct FMidiEvent>                     Events;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          Sorted;                                            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PrimaryMidiChannel;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                         Strings;                                           // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// ScriptStruct HarmonixMidi.MidiFileData
// 0x00E8 (0x00E8 - 0x0000)
struct FMidiFileData final
{
public:
	class FString                                 MidiFileName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TicksPerQuarterNote;                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSongMaps                              SongMaps;                                          // 0x0018(0x00C0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FMidiTrack>                     Tracks;                                            // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.MusicalTimeSpan
// 0x0010 (0x0010 - 0x0000)
struct FMusicalTimeSpan final
{
public:
	EMusicTimeSpanLengthUnits                     LengthUnits;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Length;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMusicTimeSpanOffsetUnits                     OffsetUnits;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Offset;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct HarmonixMidi.MidiNote
// 0x0001 (0x0001 - 0x0000)
struct FMidiNote final
{
public:
	uint8                                         NoteNumber;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

