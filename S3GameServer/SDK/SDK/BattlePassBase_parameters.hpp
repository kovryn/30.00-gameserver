#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePassBase

#include "Basic.hpp"

#include "BattlePassBase_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BattlePassBase.FortBattlePassCustomSkinTab.BP_ShowBang
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassCustomSkinTab_BP_ShowBang final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCustomSkinTab.SetIcon
// 0x0020 (0x0020 - 0x0000)
struct FortBattlePassCustomSkinTab_SetIcon final
{
public:
	TSoftObjectPtr<class UObject>                 LazyObject;                                        // 0x0000(0x0020)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.BattlePassLandingPageButton.OnDisplayDetailsUpdated
// 0x0050 (0x0050 - 0x0000)
struct BattlePassLandingPageButton_OnDisplayDetailsUpdated final
{
public:
	struct FBattlePassLandingPageButtonDisplayDetails NewDisplayDetails;                             // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.BattlePassLandingPageButton.OnSetTileImageMaterial
// 0x0008 (0x0008 - 0x0000)
struct BattlePassLandingPageButton_OnSetTileImageMaterial final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.BattlePassLandingPageButton.OnSubscriptionOwnershipUpdated
// 0x0001 (0x0001 - 0x0000)
struct BattlePassLandingPageButton_OnSubscriptionOwnershipUpdated final
{
public:
	bool                                          bOwnsSubsciption;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.BattlePassLandingPageButton.OnSubscriptionTextureLoaded
// 0x0008 (0x0008 - 0x0000)
struct BattlePassLandingPageButton_OnSubscriptionTextureLoaded final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.BattlePassLandingPageButton.GetBattlePassDisplayDetails
// 0x0050 (0x0050 - 0x0000)
struct BattlePassLandingPageButton_GetBattlePassDisplayDetails final
{
public:
	struct FBattlePassLandingPageButtonDisplayDetails ReturnValue;                                   // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCustomSkinCategoryTile.FocusTile
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassCustomSkinCategoryTile_FocusTile final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCustomSkinCategoryTile.OnLockedProgressUpdated
// 0x000C (0x000C - 0x0000)
struct FortBattlePassCustomSkinCategoryTile_OnLockedProgressUpdated final
{
public:
	int32                                         CurrentlyOwnedBeforeCategory;                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalRewardsBeforeCategory;                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockedProgress;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCustomSkinCategoryTile.OnLockedStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassCustomSkinCategoryTile_OnLockedStateChanged final
{
public:
	bool                                          bCategoryLocked;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCustomSkinCategoryTile.OnOwnedTilesUpdated
// 0x000C (0x000C - 0x0000)
struct FortBattlePassCustomSkinCategoryTile_OnOwnedTilesUpdated final
{
public:
	int32                                         CurrentlyOwnedRewards;                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CategoryProgress;                                  // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCustomSkinCategoryTile.SetPreviewedTile
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassCustomSkinCategoryTile_SetPreviewedTile final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassBulkBuyPageBase.HandleUserScrolled
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassBulkBuyPageBase_HandleUserScrolled final
{
public:
	float                                         ScrollAmount;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassBulkBuyPageBase.OnCostChanged
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassBulkBuyPageBase_OnCostChanged final
{
public:
	int32                                         Cost;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassBulkBuyPageBase.OnPageRangeChanged
// 0x0008 (0x0008 - 0x0000)
struct FortBattlePassBulkBuyPageBase_OnPageRangeChanged final
{
public:
	int32                                         FromPage;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ToPage;                                            // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassBulkBuyPageBase.OnRewardCountChanged
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassBulkBuyPageBase_OnRewardCountChanged final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassCheckBoxButton.OnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassCheckBoxButton_OnStateChanged final
{
public:
	bool                                          bNewIsChecked;                                     // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassContext.CanPurchaseBattlePassLevel
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassContext_CanPurchaseBattlePassLevel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassContext.GetCurrentChapterAsText
// 0x0018 (0x0018 - 0x0000)
struct FortBattlePassContext_GetCurrentChapterAsText final
{
public:
	bool                                          bFullText;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassContext.GetCurrentSeasonNumberAsText
// 0x0018 (0x0018 - 0x0000)
struct FortBattlePassContext_GetCurrentSeasonNumberAsText final
{
public:
	bool                                          bFullText;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassContext.GetDefaultDisclaimerText
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassContext_GetDefaultDisclaimerText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassContext.GetLevelPurchaseDisclaimerText
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassContext_GetLevelPurchaseDisclaimerText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassContext.GetSeasonalCurrencies
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassContext_GetSeasonalCurrencies final
{
public:
	TArray<struct FSeasonCurrencyMcpData>         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassResourcesWidgetBase.OnShowMoreInfo
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassResourcesWidgetBase_OnShowMoreInfo final
{
public:
	bool                                          bShouldShowMoreInfo;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassDynamicIcon.OnBattlePassInfoUpdated
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassDynamicIcon_OnBattlePassInfoUpdated final
{
public:
	bool                                          bOwnsBattlePass;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassPurchaseResourcesWidget.HandlePurchaseComplete
// 0x0028 (0x0028 - 0x0000)
struct FortBattlePassPurchaseResourcesWidget_HandlePurchaseComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPurchasedItemInfo>             PurchasedItems;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 OfferId;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassPurchaseResourcesWidget.HandlePurchaseMultiComplete
// 0x0028 (0x0028 - 0x0000)
struct FortBattlePassPurchaseResourcesWidget_HandlePurchaseMultiComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPurchasedItemInfo>             PurchasedItems;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         OfferIdList;                                       // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassPurchaseResourcesWidget.IsReloadMtxEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassPurchaseResourcesWidget_IsReloadMtxEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassPurchaseResourcesWidget.OnPurchaseAmountChanged
// 0x0008 (0x0008 - 0x0000)
struct FortBattlePassPurchaseResourcesWidget_OnPurchaseAmountChanged final
{
public:
	int32                                         NewAmount;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LevelsLeft;                                        // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassPurchaseResourcesWidget.OnTotalPriceChanged
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassPurchaseResourcesWidget_OnTotalPriceChanged final
{
public:
	int32                                         NewPrice;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassPurchaseResourcesWidget.OnUpdatePageUnlockText
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassPurchaseResourcesWidget_OnUpdatePageUnlockText final
{
public:
	class FText                                   PageUnlockText;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.OnBattlePassLevelSet
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassRewardGridHeader_OnBattlePassLevelSet final
{
public:
	int32                                         BattlePassLevel;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.OnPageLocked
// 0x0018 (0x0018 - 0x0000)
struct FortBattlePassRewardGridHeader_OnPageLocked final
{
public:
	int32                                         RequiredLevel;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequiredRewards;                                   // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsTimeLocked;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              TimeRemaining;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.OnPageNumberSet
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassRewardGridHeader_OnPageNumberSet final
{
public:
	int32                                         InPageNumber;                                      // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.OnPageUnlocked
// 0x0008 (0x0008 - 0x0000)
struct FortBattlePassRewardGridHeader_OnPageUnlocked final
{
public:
	int32                                         PurchasedRewards;                                  // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.OnSetPageCustomName
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassRewardGridHeader_OnSetPageCustomName final
{
public:
	class FText                                   CustomName;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.OnSetPageType
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassRewardGridHeader_OnSetPageType final
{
public:
	ERewardPageType                               PageType;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassRewardGridHeader.GetPageNumber
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassRewardGridHeader_GetPageNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.OnSetRequiresBattlePass
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_OnSetRequiresBattlePass final
{
public:
	bool                                          bRequiresBP;                                       // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.OnSizeChanged
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassTileBase_OnSizeChanged final
{
public:
	struct FVector2D                              NewSize;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.OnStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_OnStateChanged final
{
public:
	EBattlePassTileAvailabilityStates             NewState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.SetSize
// 0x0018 (0x0018 - 0x0000)
struct FortBattlePassTileBase_SetSize final
{
public:
	EPageItemTileSize                             TileSize;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CellSpacing;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.SetState
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_SetState final
{
public:
	EBattlePassTileAvailabilityStates             NewState;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.AreAnyGrantedItemsEquipped
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_AreAnyGrantedItemsEquipped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.GetState
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_GetState final
{
public:
	EBattlePassTileAvailabilityStates             ReturnValue;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.IsAvailable
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_IsAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.IsLocked
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_IsLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTileBase.IsOwned
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTileBase_IsOwned final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.OnAffordabilityChanged
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTile_OnAffordabilityChanged final
{
public:
	bool                                          bHasEnougCurrency;                                 // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.OnLockedProgressUpdated
// 0x000C (0x000C - 0x0000)
struct FortBattlePassTile_OnLockedProgressUpdated final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentlyOwnedRewards;                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NeededRewards;                                     // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.OnLockedStateUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortBattlePassTile_OnLockedStateUpdated final
{
public:
	bool                                          OwnsBattlePass;                                    // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ParentUnlocked;                                    // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasRemainingPrerequisites;                         // 0x0002(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDelayed;                                        // 0x0003(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.OnSetCurrencyAndPrice
// 0x0008 (0x0008 - 0x0000)
struct FortBattlePassTile_OnSetCurrencyAndPrice final
{
public:
	EBattlePassCurrencyType                       Currency;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Price;                                             // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.OnSetTrack
// 0x0002 (0x0002 - 0x0000)
struct FortBattlePassTile_OnSetTrack final
{
public:
	bool                                          bIsFreeTrack;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOwnsBattlePass;                                   // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.HasPrerequisites
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTile_HasPrerequisites final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTile.IsAffordable
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTile_IsAffordable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTutorialTooltip.SetText
// 0x0010 (0x0010 - 0x0000)
struct FortBattlePassTutorialTooltip_SetText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.FortBattlePassTutorialTooltip.SetTooltipEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortBattlePassTutorialTooltip_SetTooltipEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// Function BattlePassBase.RebootRallyQuestPanel.OnRebootRallyEligibilityUpdated
// 0x0001 (0x0001 - 0x0000)
struct RebootRallyQuestPanel_OnRebootRallyEligibilityUpdated final
{
public:
	bool                                          bEligible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

}

