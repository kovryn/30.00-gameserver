#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMJamContentResolver

#include "Basic.hpp"

#include "FMJamContentResolver_classes.hpp"
#include "FMJamContentResolver_parameters.hpp"


namespace SDK
{

// Function FMJamContentResolver.JamContentResolver.HandleGameFeatureLoadComplete
// (Final, Native, Private)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LinkCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PluginURL                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJamContentResolver::HandleGameFeatureLoadComplete(bool bSuccess, const class FString& LinkCode, const class FString& PluginURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JamContentResolver", "HandleGameFeatureLoadComplete");

	Params::JamContentResolver_HandleGameFeatureLoadComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.LinkCode = std::move(LinkCode);
	Parms.PluginURL = std::move(PluginURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FMJamContentResolver.JamContentResolver.HandleResolveComplete
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LinkCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            PluginURLs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UJamContentResolver::HandleResolveComplete(bool bSuccess, const class FString& LinkCode, const TArray<class FString>& PluginURLs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JamContentResolver", "HandleResolveComplete");

	Params::JamContentResolver_HandleResolveComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.LinkCode = std::move(LinkCode);
	Parms.PluginURLs = std::move(PluginURLs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

