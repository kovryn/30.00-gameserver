#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SparksCoreRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "SparksCoreRuntime_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SparksCoreRuntime.SparksCore_BPFL
// 0x0000 (0x0028 - 0x0028)
class USparksCore_BPFL final : public UBlueprintFunctionLibrary
{
public:
	static ESparksInstrumentType CosmeticSubtypeToInstrumentType(ESparksAccountItemSubtype Subtype);
	static TArray<EBassMidiNoteEvent> GetAllBassMidiNoteEnums();
	static TArray<uint8> GetAllBassMidiNoteIntegers();
	static TArray<EBassMidiTextEvent> GetAllBassMidiTextEnums();
	static TArray<class FString> GetAllBassMidiTextStrings();
	static TArray<EDrumMidiNoteEvent> GetAllDrumMidiNoteEnums();
	static TArray<uint8> GetAllDrumMidiNoteIntegers();
	static TArray<EDrumMidiTextEvent> GetAllDrumMidiTextEnums();
	static TArray<class FString> GetAllDrumMidiTextStrings();
	static TArray<EGuitarMidiNoteEvent> GetAllGuitarMidiNoteEnums();
	static TArray<uint8> GetAllGuitarMidiNoteIntegers();
	static TArray<EGuitarMidiTextEvent> GetAllGuitarMidiTextEnums();
	static TArray<class FString> GetAllGuitarMidiTextStrings();
	static const TArray<class FString> GetAllInstrumentSwapEventStrings();
	static TArray<EVocalsMidiNoteEvent> GetAllVocalsMidiNoteEnums();
	static TArray<uint8> GetAllVocalsMidiNoteIntegers();
	static TArray<EVocalsMidiTextEvent> GetAllVocalsMidiTextEnums();
	static TArray<class FString> GetAllVocalsMidiTextStrings();
	static EBassMidiNoteEvent GetBassMidiNoteEnumFromInteger(uint8 MidiNoteEventInt);
	static TArray<EBassMidiNoteEvent> GetBassMidiNoteEnumsFromIntegers(const TArray<uint8>& MidiNoteEventInts);
	static uint8 GetBassMidiNoteIntegerFromEnum(EBassMidiNoteEvent MidiNoteEvent);
	static TArray<uint8> GetBassMidiNoteIntegersFromEnums(const TArray<EBassMidiNoteEvent>& MidiNoteEvents);
	static EBassMidiTextEvent GetBassMidiTextEnumFromString(const class FString& MidiTextEventString);
	static TArray<EBassMidiTextEvent> GetBassMidiTextEnumsFromStrings(const TArray<class FString>& MidiTextEventStrings);
	static class FString GetBassMidiTextStringFromEnum(EBassMidiTextEvent MidiTextEvent);
	static TArray<class FString> GetBassMidiTextStringsFromEnums(const TArray<EBassMidiTextEvent>& MidiTextEvents);
	static EDrumMidiNoteEvent GetDrumMidiNoteEnumFromInteger(uint8 MidiNoteEventInt);
	static TArray<EDrumMidiNoteEvent> GetDrumMidiNoteEnumsFromIntegers(const TArray<uint8>& MidiNoteEventInts);
	static uint8 GetDrumMidiNoteIntegerFromEnum(EDrumMidiNoteEvent MidiNoteEvent);
	static TArray<uint8> GetDrumMidiNoteIntegersFromEnums(const TArray<EDrumMidiNoteEvent>& MidiNoteEvents);
	static EDrumMidiTextEvent GetDrumMidiTextEnumFromString(const class FString& MidiTextEventString);
	static TArray<EDrumMidiTextEvent> GetDrumMidiTextEnumsFromStrings(const TArray<class FString>& MidiTextEventStrings);
	static class FString GetDrumMidiTextStringFromEnum(EDrumMidiTextEvent MidiTextEvent);
	static TArray<class FString> GetDrumMidiTextStringsFromEnums(const TArray<EDrumMidiTextEvent>& MidiTextEvents);
	static EGuitarMidiNoteEvent GetGuitarMidiNoteEnumFromInteger(uint8 MidiNoteEventInt);
	static TArray<EGuitarMidiNoteEvent> GetGuitarMidiNoteEnumsFromIntegers(const TArray<uint8>& MidiNoteEventInts);
	static uint8 GetGuitarMidiNoteIntegerFromEnum(EGuitarMidiNoteEvent MidiNoteEvent);
	static TArray<uint8> GetGuitarMidiNoteIntegersFromEnums(const TArray<EGuitarMidiNoteEvent>& MidiNoteEvents);
	static EGuitarMidiTextEvent GetGuitarMidiTextEnumFromString(const class FString& MidiTextEventString);
	static TArray<EGuitarMidiTextEvent> GetGuitarMidiTextEnumsFromStrings(const TArray<class FString>& MidiTextEventStrings);
	static class FString GetGuitarMidiTextStringFromEnum(EGuitarMidiTextEvent MidiTextEvent);
	static TArray<class FString> GetGuitarMidiTextStringsFromEnums(const TArray<EGuitarMidiTextEvent>& MidiTextEvents);
	static class FString GetInstrumentSwapStringFromType(ESparksInstrumentType InstrumentType);
	static ESparksInstrumentType GetInstrumentTypeFromSwapString(const class FString& InstrumentSwapString);
	static EVocalsMidiNoteEvent GetVocalsMidiNoteEnumFromInteger(uint8 MidiNoteEventInt);
	static TArray<EVocalsMidiNoteEvent> GetVocalsMidiNoteEnumsFromIntegers(const TArray<uint8>& MidiNoteEventInts);
	static uint8 GetVocalsMidiNoteIntegerFromEnum(EVocalsMidiNoteEvent MidiNoteEvent);
	static TArray<uint8> GetVocalsMidiNoteIntegersFromEnums(const TArray<EVocalsMidiNoteEvent>& MidiNoteEvents);
	static EVocalsMidiTextEvent GetVocalsMidiTextEnumFromString(const class FString& MidiTextEventString);
	static TArray<EVocalsMidiTextEvent> GetVocalsMidiTextEnumsFromStrings(const TArray<class FString>& MidiTextEventStrings);
	static class FString GetVocalsMidiTextStringFromEnum(EVocalsMidiTextEvent MidiTextEvent);
	static TArray<class FString> GetVocalsMidiTextStringsFromEnums(const TArray<EVocalsMidiTextEvent>& MidiTextEvents);
	static ESparksAccountItemSubtype InstrumentTypeToCosmeticSubtype(ESparksInstrumentType Instrument);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksCore_BPFL">();
	}
	static class USparksCore_BPFL* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksCore_BPFL>();
	}
};

// Class SparksCoreRuntime.SparksDrumEventsInterface
// 0x0000 (0x0000 - 0x0000)
class ISparksDrumEventsInterface final
{
public:
	void Bind_CowbellHit(const TDelegate<void()>& Callback);
	void Bind_Crash1_Choke(const TDelegate<void()>& Callback);
	void Bind_Crash1_HardHit(const TDelegate<void()>& Callback);
	void Bind_Crash1_SoftHit(const TDelegate<void()>& Callback);
	void Bind_Crash2_Choke(const TDelegate<void()>& Callback);
	void Bind_Crash2_HardHit(const TDelegate<void()>& Callback);
	void Bind_Crash2_SoftHit(const TDelegate<void()>& Callback);
	void Bind_FloorTomHit(const TDelegate<void()>& Callback);
	void Bind_HiHatHit(const TDelegate<void()>& Callback);
	void Bind_HiHatPedalUp(const TDelegate<void()>& Callback);
	void Bind_KickHit(const TDelegate<void()>& Callback);
	void Bind_RideHardHit(const TDelegate<void()>& Callback);
	void Bind_SnareHit(const TDelegate<void()>& Callback);
	void Bind_Tom1_Hit(const TDelegate<void()>& Callback);
	void Bind_Tom2_Hit(const TDelegate<void()>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksDrumEventsInterface">();
	}
	static class ISparksDrumEventsInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISparksDrumEventsInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};

// Class SparksCoreRuntime.SparksGameUserSettings
// 0x0000 (0x0028 - 0x0028)
class USparksGameUserSettings final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SparksGameUserSettings">();
	}
	static class USparksGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<USparksGameUserSettings>();
	}
};

}

