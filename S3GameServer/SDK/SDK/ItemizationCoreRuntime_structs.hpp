#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemizationCoreRuntime

#include "Basic.hpp"

#include "StructUtils_structs.hpp"
#include "VerseGameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "NetCore_structs.hpp"


namespace SDK
{

// Enum ItemizationCoreRuntime.EInventoryCollectionLoadState
// NumValues: 0x000D
enum class EInventoryCollectionLoadState : uint8
{
	Invalid                                  = 0,
	Initializing                             = 1,
	WaitingToLoad                            = 10,
	Loading                                  = 11,
	Loaded                                   = 12,
	WaitingToUnload                          = 20,
	Unloading                                = 21,
	Unloaded                                 = 22,
	WaitingToClear                           = 30,
	Clearing                                 = 31,
	Cleared                                  = 32,
	Ready                                    = 255,
	EInventoryCollectionLoadState_MAX        = 256,
};

// Enum ItemizationCoreRuntime.EEquipItemLimitHitBehaviour
// NumValues: 0x0003
enum class EEquipItemLimitHitBehaviour : uint8
{
	UnequipLeastRecentlyUsed                 = 0,
	Block                                    = 1,
	EEquipItemLimitHitBehaviour_MAX          = 2,
};

// Enum ItemizationCoreRuntime.EVkInventoryMoveResult
// NumValues: 0x0005
enum class EVkInventoryMoveResult : uint8
{
	Success                                  = 0,
	Failed                                   = 1,
	InvalidRequest                           = 2,
	NoChange                                 = 3,
	EVkInventoryMoveResult_MAX               = 4,
};

// Enum ItemizationCoreRuntime.EVkInventoryMoveBehaviour
// NumValues: 0x0003
enum class EVkInventoryMoveBehaviour : uint8
{
	SwapSlotNumber                           = 0,
	EmplaceSlotNumber                        = 1,
	EVkInventoryMoveBehaviour_MAX            = 2,
};

// Enum ItemizationCoreRuntime.EInventoryCollectionType
// NumValues: 0x0003
enum class EInventoryCollectionType : uint8
{
	Player                                   = 0,
	World                                    = 1,
	EInventoryCollectionType_MAX             = 2,
};

// Enum ItemizationCoreRuntime.EItemizationInventoryCreationType
// NumValues: 0x0004
enum class EItemizationInventoryCreationType : uint8
{
	Runtime                                  = 0,
	SetupData                                = 1,
	Invalid                                  = 255,
	EItemizationInventoryCreationType_MAX    = 256,
};

// Enum ItemizationCoreRuntime.EInventoryCollectionAccess
// NumValues: 0x0005
enum class EInventoryCollectionAccess : uint8
{
	None                                     = 0,
	Read                                     = 1,
	Write                                    = 2,
	All                                      = 3,
	EInventoryCollectionAccess_MAX           = 4,
};

// Enum ItemizationCoreRuntime.EItemState
// NumValues: 0x0005
enum class EItemState : uint8
{
	NotInInventory                           = 0,
	InInventory                              = 1,
	EquippedAndActive                        = 2,
	NumStates                                = 3,
	EItemState_MAX                           = 4,
};

// Enum ItemizationCoreRuntime.EItemStateFilter
// NumValues: 0x0004
enum class EItemStateFilter : uint8
{
	Owned                                    = 0,
	Equipped                                 = 1,
	EquippedAndActive                        = 2,
	EItemStateFilter_MAX                     = 3,
};

// Enum ItemizationCoreRuntime.EItemDataQueryResult
// NumValues: 0x0003
enum class EItemDataQueryResult : uint8
{
	Found                                    = 0,
	NotFound                                 = 1,
	EItemDataQueryResult_MAX                 = 2,
};

// Enum ItemizationCoreRuntime.EItemizationPersistenceRequestType
// NumValues: 0x0006
enum class EItemizationPersistenceRequestType : uint8
{
	Invalid                                  = 0,
	Checkout                                 = 1,
	CheckIn                                  = 2,
	Clear                                    = 3,
	Update                                   = 4,
	EItemizationPersistenceRequestType_MAX   = 5,
};

// Enum ItemizationCoreRuntime.EItemizationPersistenceResponseType
// NumValues: 0x0005
enum class EItemizationPersistenceResponseType : uint8
{
	Invalid                                  = 0,
	NoPersistenceManager                     = 1,
	Failed                                   = 2,
	Success                                  = 255,
	EItemizationPersistenceResponseType_MAX  = 256,
};

// ScriptStruct ItemizationCoreRuntime.EquipItemFilter
// 0x0018 (0x0018 - 0x0000)
struct FEquipItemFilter
{
public:
	bool                                          bAppliesToAllItems;                                // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UItemDefinitionBase>> ItemDefinitions;                               // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};

// ScriptStruct ItemizationCoreRuntime.EquipItemRestriction
// 0x0010 (0x0028 - 0x0018)
struct FEquipItemRestriction final : public FEquipItemFilter
{
public:
	int64                                         ActiveLimit;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EEquipItemLimitHitBehaviour                   LimitHitBehaviour;                                 // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.EquipItemCondition
// 0x0000 (0x0018 - 0x0018)
struct FEquipItemCondition final : public FEquipItemFilter
{
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData
// 0x0000 (0x0000 - 0x0000)
#pragma pack(push, 0x1)
struct alignas(0x01) FItemComponentData
{
};
#pragma pack(pop)

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_Attach
// 0x0010 (0x0010 - 0x0000)
struct FItemComponentData_Attach final : public FItemComponentData
{
public:
	TArray<class UItemAttachmentDefinition*>      Attachments;                                       // 0x0000(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemAggregatedData
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) FItemAggregatedData final
{
public:
	uint8                                         Pad_0[0x70];                                       // 0x0000(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.InventoryStartingItem
// 0x0028 (0x0028 - 0x0000)
struct FInventoryStartingItem final
{
public:
	TSoftObjectPtr<class UItemDefinitionBase>     ItemDefinition;                                    // 0x0000(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Amount;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentDataList
// 0x0108 (0x0108 - 0x0000)
struct FItemComponentDataList final
{
public:
	TArray<struct FInstancedStruct>               DataList;                                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0xF8];                                      // 0x0010(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemAbilityBinding
// 0x0050 (0x0050 - 0x0000)
struct FItemAbilityBinding final
{
public:
	TSoftObjectPtr<class UItemInputAction>        InputAction;                                       // 0x0000(0x0020)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemStateFilter                              ActiveState;                                       // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemAbilityCost*>               Costs;                                             // 0x0028(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UItemAbilityCooldown*>           Cooldowns;                                         // 0x0038(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UItemAbilityConfigurationAsset*         ability;                                           // 0x0048(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemAbilityCooldownState
// 0x0018 (0x0018 - 0x0000)
struct FItemAbilityCooldownState final
{
public:
	bool                                          bIsActive;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PredictedTimeLeft;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PredictedProgressPerSecond;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TimeLastUpdated;                                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_Ability
// 0x0010 (0x0010 - 0x0000)
struct FItemComponentData_Ability final : public FItemComponentData
{
public:
	TArray<struct FItemAbilityBinding>            AbilityList;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_Icon
// 0x0020 (0x0020 - 0x0000)
struct FItemComponentData_Icon final : public FItemComponentData
{
public:
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0000(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_MaxStackSize
// 0x0028 (0x0028 - 0x0000)
struct FItemComponentData_MaxStackSize final : public FItemComponentData
{
public:
	struct FScalableFloat                         MaxStackSize;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_OwnerPose
// 0x0018 (0x0018 - 0x0000)
struct FItemComponentData_OwnerPose final : public FItemComponentData
{
public:
	EItemStateFilter                              ApplyPoseState;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemOwnerPoseAsset*                    PoseAsset;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PosePriority;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_Rarity
// 0x0008 (0x0008 - 0x0000)
struct FItemComponentData_Rarity final : public FItemComponentData
{
public:
	class UItemRarity*                            ItemRarity;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_StackSize
// 0x0008 (0x0008 - 0x0000)
struct FItemComponentData_StackSize final : public FItemComponentData
{
public:
	int64                                         StackSize;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_Tags
// 0x0010 (0x0010 - 0x0000)
struct FItemComponentData_Tags final : public FItemComponentData
{
public:
	struct FVerseGameplayTagContainer             ItemTags;                                          // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_Type
// 0x0008 (0x0008 - 0x0000)
struct FItemComponentData_Type final : public FItemComponentData
{
public:
	class UItemType*                              ItemType;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentData_WasLoadedFromSave
// 0x0001 (0x0001 - 0x0000)
struct FItemComponentData_WasLoadedFromSave final : public FItemComponentData
{
public:
	bool                                          bWasLoadedFromSave;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemComponentContainer
// 0x0001 (0x0001 - 0x0000)
struct FItemComponentContainer final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemEntry
// 0x0134 (0x0140 - 0x000C)
struct FItemEntry final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemDefinitionBase*                    ItemDefinition;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  ItemEntryID;                                       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SlotNumber;                                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemComponentDataList                 ItemData;                                          // 0x0030(0x0108)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemEntryList
// 0x0200 (0x0308 - 0x0108)
struct FItemEntryList final : public FFastArraySerializer
{
public:
	TArray<struct FItemEntry>                     ItemList;                                          // 0x0108(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_118[0x1F0];                                    // 0x0118(0x01F0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemInstanceClassEntry
// 0x0010 (0x0010 - 0x0000)
struct FItemInstanceClassEntry final
{
public:
	TSubclassOf<class UItemInstance>              Class;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemInstanceClassOverride
// 0x0018 (0x0018 - 0x0000)
struct FItemInstanceClassOverride final
{
public:
	TArray<struct FItemInstanceClassEntry>        SortedOverrideList;                                // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.ItemizationLootEntry
// 0x0008 (0x0008 - 0x0000)
struct FItemizationLootEntry
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemizationLootEntry_Guaranteed
// 0x0008 (0x0010 - 0x0008)
struct FItemizationLootEntry_Guaranteed final : public FItemizationLootEntry
{
public:
	class UItemizationLootCountCalculator*        Count;                                             // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemizationLootEntry_Chance
// 0x0038 (0x0040 - 0x0008)
struct FItemizationLootEntry_Chance final : public FItemizationLootEntry
{
public:
	class UItemizationLootCountCalculator*        Count;                                             // 0x0008(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemizationLootWeightCalculator*       Weight;                                            // 0x0010(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                         MaxSelectCount;                                    // 0x0018(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemAttachmentRuntimeData
// 0x00A8 (0x00A8 - 0x0000)
struct alignas(0x08) FItemAttachmentRuntimeData final
{
public:
	uint8                                         Pad_0[0xA8];                                       // 0x0000(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};

// ScriptStruct ItemizationCoreRuntime.VkRarityEntry
// 0x0030 (0x0030 - 0x0000)
struct FVkRarityEntry final
{
public:
	class FText                                   Name;                                              // 0x0000(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0010(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// ScriptStruct ItemizationCoreRuntime.ItemTagContainer
// 0x0030 (0x0030 - 0x0000)
struct FItemTagContainer final
{
public:
	struct FVerseGameplayTagContainer             RequiredTags;                                      // 0x0000(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVerseGameplayTagContainer             ForbiddenTags;                                     // 0x0010(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVerseGameplayTagContainer             AnyTags;                                           // 0x0020(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};

}

