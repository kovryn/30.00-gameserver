#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AccoladeCollectionScreen

#include "Basic.hpp"

#include "AccoladeCollectionScreen_classes.hpp"
#include "AccoladeCollectionScreen_parameters.hpp"


namespace SDK
{

// Function AccoladeCollectionScreen.FortAccoladeStageListEntry.BP_PopulateAchievedCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AchievedCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAccoladeStageListEntry::BP_PopulateAchievedCount(int32 AchievedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccoladeStageListEntry", "BP_PopulateAchievedCount");

	Params::FortAccoladeStageListEntry_BP_PopulateAchievedCount Parms{};

	Parms.AchievedCount = AchievedCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.PinnedAccoladeWidget.BP_PopulateAccoladeInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const class FText&                      Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Achieved                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Total                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPinnedAccoladeWidget::BP_PopulateAccoladeInfo(const class FText& Description, int32 Achieved, int32 Total)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PinnedAccoladeWidget", "BP_PopulateAccoladeInfo");

	Params::PinnedAccoladeWidget_BP_PopulateAccoladeInfo Parms{};

	Parms.Description = std::move(Description);
	Parms.Achieved = Achieved;
	Parms.Total = Total;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionListEntry.BP_OnPinnedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bPinned                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionListEntry::BP_OnPinnedChanged(const bool bPinned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionListEntry", "BP_OnPinnedChanged");

	Params::FortPlayerAccoladeCollectionListEntry_BP_OnPinnedChanged Parms{};

	Parms.bPinned = bPinned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionListEntry.BP_OnSelectionSuppressionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bShouldBeSuppressed                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionListEntry::BP_OnSelectionSuppressionChanged(const bool bShouldBeSuppressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionListEntry", "BP_OnSelectionSuppressionChanged");

	Params::FortPlayerAccoladeCollectionListEntry_BP_OnSelectionSuppressionChanged Parms{};

	Parms.bShouldBeSuppressed = bShouldBeSuppressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionListEntry.BP_UpdateAccoladeTier
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortAccoladeTierType                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionListEntry::BP_UpdateAccoladeTier(EFortAccoladeTierType Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionListEntry", "BP_UpdateAccoladeTier");

	Params::FortPlayerAccoladeCollectionListEntry_BP_UpdateAccoladeTier Parms{};

	Parms.Tier = Tier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionListEntry.BP_UpdateCompletedCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CompletedCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionListEntry::BP_UpdateCompletedCount(int32 CompletedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionListEntry", "BP_UpdateCompletedCount");

	Params::FortPlayerAccoladeCollectionListEntry_BP_UpdateCompletedCount Parms{};

	Parms.CompletedCount = CompletedCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionScreenContainer.BP_PopulateProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Total                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionScreenContainer::BP_PopulateProgress(int32 Current, int32 Total)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionScreenContainer", "BP_PopulateProgress");

	Params::FortPlayerAccoladeCollectionScreenContainer_BP_PopulateProgress Parms{};

	Parms.Current = Current;
	Parms.Total = Total;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionScreenInfoOverlay.BP_PopulateAccoladeInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CompletionCount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionScreenInfoOverlay::BP_PopulateAccoladeInfo(int32 CompletionCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionScreenInfoOverlay", "BP_PopulateAccoladeInfo");

	Params::FortPlayerAccoladeCollectionScreenInfoOverlay_BP_PopulateAccoladeInfo Parms{};

	Parms.CompletionCount = CompletionCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionScreenInfoOverlay.BP_UpdateAccoladeTier
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortAccoladeTierType                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionScreenInfoOverlay::BP_UpdateAccoladeTier(EFortAccoladeTierType Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionScreenInfoOverlay", "BP_UpdateAccoladeTier");

	Params::FortPlayerAccoladeCollectionScreenInfoOverlay_BP_UpdateAccoladeTier Parms{};

	Parms.Tier = Tier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AccoladeCollectionScreen.FortPlayerAccoladeCollectionScreenInfoOverlay.BP_UpdateTrackButtonText
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bTracked                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAccoladeCollectionScreenInfoOverlay::BP_UpdateTrackButtonText(const bool bTracked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAccoladeCollectionScreenInfoOverlay", "BP_UpdateTrackButtonText");

	Params::FortPlayerAccoladeCollectionScreenInfoOverlay_BP_UpdateTrackButtonText Parms{};

	Parms.bTracked = bTracked;

	UObject::ProcessEvent(Func, &Parms);
}

}

