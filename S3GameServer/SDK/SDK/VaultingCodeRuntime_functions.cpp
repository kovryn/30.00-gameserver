#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultingCodeRuntime

#include "Basic.hpp"

#include "VaultingCodeRuntime_classes.hpp"
#include "VaultingCodeRuntime_parameters.hpp"


namespace SDK
{

// Function VaultingCodeRuntime.FortMovementMode_ExtLogicHurdle.BP_DestroyProp
// (Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingProp*                    BuildPropToDestroy                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtLogicHurdle::BP_DestroyProp(class ABuildingProp* BuildPropToDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtLogicHurdle", "BP_DestroyProp");

	Params::FortMovementMode_ExtLogicHurdle_BP_DestroyProp Parms{};

	Parms.BuildPropToDestroy = BuildPropToDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VaultingCodeRuntime.FortMovementMode_ExtLogicHurdle.BP_GetAnimationMontageInformation
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FSynchedActionInfo&        SynchedActionInfo                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EHurdleType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsNarrowOpening                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCrouched                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage**                    AnimMontage                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            StartSectionName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            MontageMiddleSectionName                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovementMode_ExtLogicHurdle::BP_GetAnimationMontageInformation(const struct FSynchedActionInfo& SynchedActionInfo, EHurdleType Type, bool bIsNarrowOpening, bool bIsCrouched, class UAnimMontage** AnimMontage, class FName* StartSectionName, class FName* MontageMiddleSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementMode_ExtLogicHurdle", "BP_GetAnimationMontageInformation");

	Params::FortMovementMode_ExtLogicHurdle_BP_GetAnimationMontageInformation Parms{};

	Parms.SynchedActionInfo = std::move(SynchedActionInfo);
	Parms.Type = Type;
	Parms.bIsNarrowOpening = bIsNarrowOpening;
	Parms.bIsCrouched = bIsCrouched;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimMontage != nullptr)
		*AnimMontage = Parms.AnimMontage;

	if (StartSectionName != nullptr)
		*StartSectionName = Parms.StartSectionName;

	if (MontageMiddleSectionName != nullptr)
		*MontageMiddleSectionName = Parms.MontageMiddleSectionName;
}


// Function VaultingCodeRuntime.HurdleComponent.BP_CleanupHurdleIndicator
// (Event, Protected, BlueprintEvent)

void UHurdleComponent::BP_CleanupHurdleIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_CleanupHurdleIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultingCodeRuntime.HurdleComponent.BP_CreateHurdleHighlight
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHurdleTargetingData&      TargetingData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHurdleComponent::BP_CreateHurdleHighlight(const struct FHurdleTargetingData& TargetingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_CreateHurdleHighlight");

	Params::HurdleComponent_BP_CreateHurdleHighlight Parms{};

	Parms.TargetingData = std::move(TargetingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VaultingCodeRuntime.HurdleComponent.BP_ShowHurdleInputPrompt
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHurdleComponent::BP_ShowHurdleInputPrompt(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_ShowHurdleInputPrompt");

	Params::HurdleComponent_BP_ShowHurdleInputPrompt Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VaultingCodeRuntime.HurdleComponent.BP_UpdateHurdleHighlight
// (Event, Protected, BlueprintEvent)

void UHurdleComponent::BP_UpdateHurdleHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_UpdateHurdleHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultingCodeRuntime.HurdleComponent.HandleNavLinkMoveStarted
// (Final, Native, Protected, HasDefaults)
// Parameters:
// const struct FVector&                   LinkEndPoint                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHurdleComponent::HandleNavLinkMoveStarted(const struct FVector& LinkEndPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "HandleNavLinkMoveStarted");

	Params::HurdleComponent_HandleNavLinkMoveStarted Parms{};

	Parms.LinkEndPoint = std::move(LinkEndPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VaultingCodeRuntime.HurdleComponent.HandleOwnerJumpInput
// (Final, Native, Protected)
// Parameters:
// bool                                    bPressed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHurdleComponent::HandleOwnerJumpInput(bool bPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "HandleOwnerJumpInput");

	Params::HurdleComponent_HandleOwnerJumpInput Parms{};

	Parms.bPressed = bPressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VaultingCodeRuntime.HurdleComponent.OnMutatorUpdated
// (Final, Native, Protected)

void UHurdleComponent::OnMutatorUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "OnMutatorUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VaultingCodeRuntime.HurdleComponent.OnPlayerStatePawnSet
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     Player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHurdleComponent::OnPlayerStatePawnSet(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "OnPlayerStatePawnSet");

	Params::HurdleComponent_OnPlayerStatePawnSet Parms{};

	Parms.Player = Player;
	Parms.NewPawn = NewPawn;
	Parms.OldPawn = OldPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VaultingCodeRuntime.HurdleComponent.RegisterMutatorUpdatedDelegate
// (Final, Native, Protected)
// Parameters:
// class APawn*                            AffectedPawn                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHurdleComponent::RegisterMutatorUpdatedDelegate(class APawn* AffectedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "RegisterMutatorUpdatedDelegate");

	Params::HurdleComponent_RegisterMutatorUpdatedDelegate Parms{};

	Parms.AffectedPawn = AffectedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function VaultingCodeRuntime.HurdleComponent.UnregisterMutatorUpdatedDelegate
// (Final, Native, Protected)

void UHurdleComponent::UnregisterMutatorUpdatedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "UnregisterMutatorUpdatedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function VaultingCodeRuntime.HurdleComponent.BP_CanStartHurdle
// (Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// bool*                                   OutCanStartHurdle                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHurdleComponent::BP_CanStartHurdle(bool* OutCanStartHurdle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_CanStartHurdle");

	Params::HurdleComponent_BP_CanStartHurdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCanStartHurdle != nullptr)
		*OutCanStartHurdle = Parms.OutCanStartHurdle;
}


// Function VaultingCodeRuntime.HurdleComponent.BP_IsTacticalSprinting
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHurdleComponent::BP_IsTacticalSprinting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_IsTacticalSprinting");

	Params::HurdleComponent_BP_IsTacticalSprinting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VaultingCodeRuntime.HurdleComponent.BP_UseAutoHurdle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHurdleComponent::BP_UseAutoHurdle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "BP_UseAutoHurdle");

	Params::HurdleComponent_BP_UseAutoHurdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VaultingCodeRuntime.HurdleComponent.GetHurdleHighlightTransform
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UHurdleComponent::GetHurdleHighlightTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "GetHurdleHighlightTransform");

	Params::HurdleComponent_GetHurdleHighlightTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VaultingCodeRuntime.HurdleComponent.IsUsingGamepad
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHurdleComponent::IsUsingGamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "IsUsingGamepad");

	Params::HurdleComponent_IsUsingGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VaultingCodeRuntime.HurdleComponent.ShouldShowHurdleIndicator
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHurdleComponent::ShouldShowHurdleIndicator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HurdleComponent", "ShouldShowHurdleIndicator");

	Params::HurdleComponent_ShouldShowHurdleIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function VaultingCodeRuntime.HurdleLibrary.PerformHurdleTargeting
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class ACharacter*                 Character                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHurdleInputConfigCache*         HurdleInputConfig                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FHurdleTargetingData*            OutTargetingData                                       (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIsAutoHurdle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   OverrideAimDirection                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHurdleLibrary::PerformHurdleTargeting(const class ACharacter* Character, struct FHurdleInputConfigCache* HurdleInputConfig, struct FHurdleTargetingData* OutTargetingData, bool bIsAutoHurdle, const struct FVector& OverrideAimDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HurdleLibrary", "PerformHurdleTargeting");

	Params::HurdleLibrary_PerformHurdleTargeting Parms{};

	Parms.Character = Character;
	Parms.bIsAutoHurdle = bIsAutoHurdle;
	Parms.OverrideAimDirection = std::move(OverrideAimDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HurdleInputConfig != nullptr)
		*HurdleInputConfig = std::move(Parms.HurdleInputConfig);

	if (OutTargetingData != nullptr)
		*OutTargetingData = std::move(Parms.OutTargetingData);

	return Parms.ReturnValue;
}

}

